// Don't Edit. This is autogenerated.
export interface IRookCephRookCeph {
    image: Image;
    crds: Crds;
    resources: Resources;
    nodeSelector: NodeSelector;
    tolerations: any[];
    unreachableNodeTolerationSeconds: number;
    currentNamespaceOnly: boolean;
    annotations: NodeSelector;
    logLevel: string;
    rbacEnable: boolean;
    pspEnable: boolean;
    csi: Csi;
    enableDiscoveryDaemon: boolean;
    cephCommandsTimeoutSeconds: string;
    enableSelinuxRelabeling: boolean;
    disableAdmissionController: boolean;
    hostpathRequiresPrivileged: boolean;
    disableDeviceHotplug: boolean;
    discoverDaemonUdev?: any;
    enableOBCWatchOperatorNamespace: boolean;
    admissionController?: any;
    monitoring: Crds;
}
interface Csi {
    enableRbdDriver: boolean;
    enableCephfsDriver: boolean;
    enableGrpcMetrics: boolean;
    enableCSIHostNetwork: boolean;
    enableCephfsSnapshotter: boolean;
    enableNFSSnapshotter: boolean;
    enableRBDSnapshotter: boolean;
    enablePluginSelinuxHostMount: boolean;
    enableCSIEncryption: boolean;
    pluginPriorityClassName: string;
    provisionerPriorityClassName: string;
    rbdFSGroupPolicy: string;
    cephFSFSGroupPolicy: string;
    nfsFSGroupPolicy: string;
    enableOMAPGenerator: boolean;
    enableMetadata: boolean;
    provisionerReplicas: number;
    grpcTimeoutInSeconds: number;
    allowUnsupportedVersion: boolean;
    csiRBDProvisionerResource: string;
    csiRBDPluginResource: string;
    csiCephFSProvisionerResource: string;
    csiCephFSPluginResource: string;
    csiNFSProvisionerResource: string;
    csiNFSPluginResource: string;
    enableLiveness: boolean;
    forceCephFSKernelClient: boolean;
    csiAddons: Crds;
    nfs: Crds;
    topology: Crds;
}
interface NodeSelector {}
interface Resources {
    limits: Limits;
    requests: Limits;
}
interface Limits {
    cpu: string;
    memory: string;
}
interface Crds {
    enabled: boolean;
}
interface Image {
    repository: string;
    tag: string;
    pullPolicy: string;
}
