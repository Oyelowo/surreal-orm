apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"labels":{"app.kubernetes.io/component":"applicationset-controller","app.kubernetes.io/instance":"argocd","app.kubernetes.io/managed-by":"pulumi","app.kubernetes.io/name":"argocd-applicationset-controller","app.kubernetes.io/part-of":"argocd","app.kubernetes.io/version":"v0.4.1","helm.sh/chart":"argo-cd-4.5.3"},"name":"argocd-applicationset-controller","namespace":"argocd"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/instance":"argocd","app.kubernetes.io/name":"argocd-applicationset-controller"}},"template":{"metadata":{"labels":{"app.kubernetes.io/component":"applicationset-controller","app.kubernetes.io/instance":"argocd","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"argocd-applicationset-controller","app.kubernetes.io/part-of":"argocd","app.kubernetes.io/version":"v0.4.1","helm.sh/chart":"argo-cd-4.5.3"}},"spec":{"containers":[{"command":["applicationset-controller","--metrics-addr=:8080","--probe-addr=:8081","--namespace=argocd","--argocd-repo-server=argocd-repo-server:8081","--policy=sync","--debug=false","--dry-run=false"],"image":"quay.io/argoproj/argocd-applicationset:v0.4.1","imagePullPolicy":"IfNotPresent","name":"applicationset-controller","ports":[{"containerPort":8081,"name":"http","protocol":"TCP"},{"containerPort":8080,"name":"metrics","protocol":"TCP"},{"containerPort":7000,"name":"webhook","protocol":"TCP"}],"resources":{},"securityContext":{},"volumeMounts":[{"mountPath":"/tmp","name":"tmp-dir"},{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/gpg/source","name":"gpg-keys"},{"mountPath":"/app/config/gpg/keys","name":"gpg-keyring"}]}],"securityContext":{},"serviceAccountName":"argocd-applicationset-controller","volumes":[{"emptyDir":{},"name":"tmp-dir"},{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"configMap":{"name":"argocd-gpg-keys-cm"},"name":"gpg-keys"},{"emptyDir":{},"name":"gpg-keyring"}]}}}}
  labels:
    app.kubernetes.io/component: applicationset-controller
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/managed-by: pulumi
    app.kubernetes.io/name: argocd-applicationset-controller
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v0.4.1
    helm.sh/chart: argo-cd-4.5.3
  name: argocd-applicationset-controller
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/name: argocd-applicationset-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/component: applicationset-controller
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: argocd-applicationset-controller
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/version: v0.4.1
        helm.sh/chart: argo-cd-4.5.3
    spec:
      containers:
      - command:
        - applicationset-controller
        - --metrics-addr=:8080
        - --probe-addr=:8081
        - --namespace=argocd
        - --argocd-repo-server=argocd-repo-server:8081
        - --policy=sync
        - --debug=false
        - --dry-run=false
        image: quay.io/argoproj/argocd-applicationset:v0.4.1
        imagePullPolicy: IfNotPresent
        name: applicationset-controller
        ports:
        - containerPort: 8081
          name: http
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 7000
          name: webhook
          protocol: TCP
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /tmp
          name: tmp-dir
        - mountPath: /app/config/ssh
          name: ssh-known-hosts
        - mountPath: /app/config/tls
          name: tls-certs
        - mountPath: /app/config/gpg/source
          name: gpg-keys
        - mountPath: /app/config/gpg/keys
          name: gpg-keyring
      securityContext: {}
      serviceAccountName: argocd-applicationset-controller
      volumes:
      - emptyDir: {}
        name: tmp-dir
      - configMap:
          name: argocd-ssh-known-hosts-cm
        name: ssh-known-hosts
      - configMap:
          name: argocd-tls-certs-cm
        name: tls-certs
      - configMap:
          name: argocd-gpg-keys-cm
        name: gpg-keys
      - emptyDir: {}
        name: gpg-keyring
