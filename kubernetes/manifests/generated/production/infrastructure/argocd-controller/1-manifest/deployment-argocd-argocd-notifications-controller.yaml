apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"labels":{"app.kubernetes.io/component":"notifications-controller","app.kubernetes.io/instance":"argocd","app.kubernetes.io/managed-by":"pulumi","app.kubernetes.io/name":"argocd-notifications-controller","app.kubernetes.io/part-of":"argocd","app.kubernetes.io/version":"v2.3.3","helm.sh/chart":"argo-cd-4.5.3"},"name":"argocd-notifications-controller","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/instance":"argocd","app.kubernetes.io/name":"argocd-notifications-controller"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"app.kubernetes.io/component":"notifications-controller","app.kubernetes.io/instance":"argocd","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"argocd-notifications-controller","app.kubernetes.io/part-of":"argocd","app.kubernetes.io/version":"v2.3.3","helm.sh/chart":"argo-cd-4.5.3"}},"spec":{"containers":[{"command":["argocd-notifications","--loglevel=info","--namespace=argocd","--argocd-repo-server=argocd-repo-server:8081","--secret-name=argocd-notifications-controller-secret","--config-map-name=argocd-notifications-controller-cm"],"image":"quay.io/argoproj/argocd:v2.3.3","imagePullPolicy":"IfNotPresent","name":"notifications-controller","resources":{},"volumeMounts":[{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"}],"workingDir":"/app"}],"securityContext":{"runAsNonRoot":true},"serviceAccountName":"argocd-notifications-controller","volumes":[{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
  labels:
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/managed-by: pulumi
    app.kubernetes.io/name: argocd-notifications-controller
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.3.3
    helm.sh/chart: argo-cd-4.5.3
  name: argocd-notifications-controller
  namespace: argocd
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/name: argocd-notifications-controller
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: notifications-controller
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: argocd-notifications-controller
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/version: v2.3.3
        helm.sh/chart: argo-cd-4.5.3
    spec:
      containers:
      - command:
        - argocd-notifications
        - --loglevel=info
        - --namespace=argocd
        - --argocd-repo-server=argocd-repo-server:8081
        - --secret-name=argocd-notifications-controller-secret
        - --config-map-name=argocd-notifications-controller-cm
        image: quay.io/argoproj/argocd:v2.3.3
        imagePullPolicy: IfNotPresent
        name: notifications-controller
        resources: {}
        volumeMounts:
        - mountPath: /app/config/tls
          name: tls-certs
        - mountPath: /app/config/reposerver/tls
          name: argocd-repo-server-tls
        workingDir: /app
      securityContext:
        runAsNonRoot: true
      serviceAccountName: argocd-notifications-controller
      volumes:
      - configMap:
          name: argocd-tls-certs-cm
        name: tls-certs
      - name: argocd-repo-server-tls
        secret:
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
          - key: ca.crt
            path: ca.crt
          optional: true
          secretName: argocd-repo-server-tls
