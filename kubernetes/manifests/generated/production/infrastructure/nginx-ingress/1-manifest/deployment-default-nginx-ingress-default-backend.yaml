apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"labels":{"app.kubernetes.io/component":"default-backend","app.kubernetes.io/instance":"nginx-ingress","app.kubernetes.io/managed-by":"pulumi","app.kubernetes.io/name":"nginx-ingress-controller","helm.sh/chart":"nginx-ingress-controller-9.1.22"},"name":"nginx-ingress-default-backend","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/component":"default-backend","app.kubernetes.io/instance":"nginx-ingress","app.kubernetes.io/name":"nginx-ingress-controller"}},"template":{"metadata":{"labels":{"app.kubernetes.io/component":"default-backend","app.kubernetes.io/instance":"nginx-ingress","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"nginx-ingress-controller","helm.sh/chart":"nginx-ingress-controller-9.1.22"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/component":"default-backend","app.kubernetes.io/instance":"nginx-ingress","app.kubernetes.io/name":"nginx-ingress-controller"}},"namespaces":["default"],"topologyKey":"kubernetes.io/hostname"},"weight":1}]}},"containers":[{"image":"docker.io/bitnami/nginx:1.21.6-debian-10-r75","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":"http","scheme":"HTTP"},"initialDelaySeconds":30,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":5},"name":"default-backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"readinessProbe":{"failureThreshold":6,"httpGet":{"path":"/healthz","port":"http","scheme":"HTTP"},"initialDelaySeconds":0,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":5},"resources":{"limits":{},"requests":{}},"securityContext":{"runAsUser":1001},"volumeMounts":[{"mountPath":"/opt/bitnami/nginx/conf/bitnami/","name":"nginx-config-volume","readOnly":true}]}],"securityContext":{"fsGroup":1001},"serviceAccountName":"nginx-ingress","terminationGracePeriodSeconds":60,"volumes":[{"configMap":{"items":[{"key":"defaultBackend.conf","path":"defaultBackend.conf"}],"name":"nginx-ingress-default-backend"},"name":"nginx-config-volume"}]}}}}
  labels:
    app.kubernetes.io/component: default-backend
    app.kubernetes.io/instance: nginx-ingress
    app.kubernetes.io/managed-by: pulumi
    app.kubernetes.io/name: nginx-ingress-controller
    helm.sh/chart: nginx-ingress-controller-9.1.22
  name: nginx-ingress-default-backend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: default-backend
      app.kubernetes.io/instance: nginx-ingress
      app.kubernetes.io/name: nginx-ingress-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/component: default-backend
        app.kubernetes.io/instance: nginx-ingress
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nginx-ingress-controller
        helm.sh/chart: nginx-ingress-controller-9.1.22
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: default-backend
                  app.kubernetes.io/instance: nginx-ingress
                  app.kubernetes.io/name: nginx-ingress-controller
              namespaces:
              - default
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - image: docker.io/bitnami/nginx:1.21.6-debian-10-r75
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: default-backend
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /healthz
            port: http
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits: {}
          requests: {}
        securityContext:
          runAsUser: 1001
        volumeMounts:
        - mountPath: /opt/bitnami/nginx/conf/bitnami/
          name: nginx-config-volume
          readOnly: true
      securityContext:
        fsGroup: 1001
      serviceAccountName: nginx-ingress
      terminationGracePeriodSeconds: 60
      volumes:
      - configMap:
          items:
          - key: defaultBackend.conf
            path: defaultBackend.conf
          name: nginx-ingress-default-backend
        name: nginx-config-volume
