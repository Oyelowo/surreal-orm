apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"labels":{"app.kubernetes.io/managed-by":"pulumi"},"name":"graphql-mongo","namespace":"applications"},"spec":{"replicas":3,"selector":{"matchLabels":{"app":"graphql"}},"template":{"metadata":{"labels":{"app":"graphql"}},"spec":{"containers":[{"env":[{"name":"APP_ENVIRONMENT","value":"production"},{"name":"APP_HOST","value":"0.0.0.0"},{"name":"APP_PORT","value":"8000"},{"name":"MONGODB_NAME","value":"graphql-mongo-database"},{"name":"MONGODB_USERNAME","valueFrom":{"secretKeyRef":{"key":"MONGODB_USERNAME","name":"graphql-mongo"}}},{"name":"MONGODB_PASSWORD","valueFrom":{"secretKeyRef":{"key":"MONGODB_PASSWORD","name":"graphql-mongo"}}},{"name":"MONGODB_ROOT_USERNAME","valueFrom":{"secretKeyRef":{"key":"MONGODB_ROOT_USERNAME","name":"graphql-mongo"}}},{"name":"MONGODB_ROOT_PASSWORD","valueFrom":{"secretKeyRef":{"key":"MONGODB_ROOT_PASSWORD","name":"graphql-mongo"}}},{"name":"MONGODB_HOST","value":"graphql-mongo-database.applications"},{"name":"MONGODB_SERVICE_NAME","value":"graphql-mongo-database"},{"name":"MONGODB_STORAGE_CLASS","value":"linode-block-storage-retain"},{"name":"MONGODB_PORT","value":"27017"},{"name":"REDIS_USERNAME","valueFrom":{"secretKeyRef":{"key":"REDIS_USERNAME","name":"graphql-mongo"}}},{"name":"REDIS_PASSWORD","valueFrom":{"secretKeyRef":{"key":"REDIS_PASSWORD","name":"graphql-mongo"}}},{"name":"REDIS_HOST","value":"graphql-mongo-redis-master.applications"},{"name":"REDIS_SERVICE_NAME","value":"graphql-mongo-redis"},{"name":"REDIS_SERVICE_NAME_WITH_SUFFIX","value":"graphql-mongo-redis-master"},{"name":"REDIS_PORT","value":"6379"}],"image":"ghcr.io/oyelowo/graphql-mongo:latest","name":"graphql","ports":[{"containerPort":8000,"name":"http"}],"resources":{"limits":{"cpu":"100m","memory":"200Mi"},"requests":{"cpu":"100m","memory":"70Mi"}},"volumeMounts":[]}],"initContainers":[],"volumes":[]}}}}
  labels:
    app.kubernetes.io/managed-by: pulumi
  name: graphql-mongo
  namespace: applications
spec:
  replicas: 3
  selector:
    matchLabels:
      app: graphql
  template:
    metadata:
      labels:
        app: graphql
    spec:
      containers:
      - env:
        - name: APP_ENVIRONMENT
          value: production
        - name: APP_HOST
          value: 0.0.0.0
        - name: APP_PORT
          value: "8000"
        - name: MONGODB_NAME
          value: graphql-mongo-database
        - name: MONGODB_USERNAME
          valueFrom:
            secretKeyRef:
              key: MONGODB_USERNAME
              name: graphql-mongo
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MONGODB_PASSWORD
              name: graphql-mongo
        - name: MONGODB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: MONGODB_ROOT_USERNAME
              name: graphql-mongo
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MONGODB_ROOT_PASSWORD
              name: graphql-mongo
        - name: MONGODB_HOST
          value: graphql-mongo-database.applications
        - name: MONGODB_SERVICE_NAME
          value: graphql-mongo-database
        - name: MONGODB_STORAGE_CLASS
          value: linode-block-storage-retain
        - name: MONGODB_PORT
          value: "27017"
        - name: REDIS_USERNAME
          valueFrom:
            secretKeyRef:
              key: REDIS_USERNAME
              name: graphql-mongo
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: REDIS_PASSWORD
              name: graphql-mongo
        - name: REDIS_HOST
          value: graphql-mongo-redis-master.applications
        - name: REDIS_SERVICE_NAME
          value: graphql-mongo-redis
        - name: REDIS_SERVICE_NAME_WITH_SUFFIX
          value: graphql-mongo-redis-master
        - name: REDIS_PORT
          value: "6379"
        image: ghcr.io/oyelowo/graphql-mongo:latest
        name: graphql
        ports:
        - containerPort: 8000
          name: http
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 70Mi
        volumeMounts: []
      initContainers: []
      volumes: []
