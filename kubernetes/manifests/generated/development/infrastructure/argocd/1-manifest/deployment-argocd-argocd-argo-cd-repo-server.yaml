apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"labels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/instance":"argocd","app.kubernetes.io/managed-by":"pulumi","app.kubernetes.io/name":"argo-cd","helm.sh/chart":"argo-cd-3.1.16"},"name":"argocd-argo-cd-repo-server","namespace":"argocd"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/instance":"argocd","app.kubernetes.io/name":"argo-cd"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/instance":"argocd","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"argo-cd","helm.sh/chart":"argo-cd-3.1.16"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/instance":"argocd","app.kubernetes.io/name":"argo-cd"}},"namespaces":["argocd"],"topologyKey":"kubernetes.io/hostname"},"weight":1}]}},"containers":[{"args":["--logformat","text","--loglevel","info","--redis","argocd-redis-master:6379"],"command":["argocd-repo-server"],"env":[{"name":"REDIS_PASSWORD","valueFrom":{"secretKeyRef":{"key":"redis-password","name":"argocd-redis"}}}],"image":"docker.io/bitnami/argo-cd:2.3.3-debian-10-r25","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"initialDelaySeconds":10,"periodSeconds":10,"successThreshold":1,"tcpSocket":{"port":8081},"timeoutSeconds":1},"name":"argocd-repo-server","ports":[{"containerPort":8081,"name":"repo-server","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"initialDelaySeconds":10,"periodSeconds":10,"successThreshold":1,"tcpSocket":{"port":8081},"timeoutSeconds":1},"resources":{"limits":{},"requests":{}},"securityContext":{"runAsNonRoot":true,"runAsUser":1001},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/server/tls","name":"argocd-repo-server-tls"},{"mountPath":"/app/config/gpg/keys","name":"gpg-keyring"},{"mountPath":"/tmp","name":"tmp-dir"}]}],"initContainers":[{"args":["-ec","#!/bin/bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n\n. /opt/bitnami/scripts/libos.sh\n. /opt/bitnami/scripts/liblog.sh\n\ncheck_redis_connection() {\n  local result=\"$(redis-cli -h argocd-redis-master -p 6379 PING)\"\n  if [[ \"$result\" != \"PONG\" ]]; then\n    false\n  fi\n}\n\ninfo \"Checking redis connection...\"\nif ! retry_while \"check_redis_connection\"; then\n    error \"Could not connect to the Redis server\"\n    return 1\nelse\n    info \"Connected to the Redis instance\"\nfi\n"],"command":["/bin/bash"],"env":[{"name":"REDISCLI_AUTH","valueFrom":{"secretKeyRef":{"key":"redis-password","name":"argocd-redis"}}}],"image":"docker.io/bitnami/redis:6.2.7-debian-10-r2","imagePullPolicy":"IfNotPresent","name":"wait-for-redis"}],"securityContext":{"fsGroup":1001},"serviceAccountName":"argocd-argo-cd-argocd-repo-server","volumes":[{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}},{"emptyDir":{},"name":"tmp-dir"},{"emptyDir":{},"name":"gpg-keyring"}]}}}}
  labels:
    app.kubernetes.io/component: repo-server
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/managed-by: pulumi
    app.kubernetes.io/name: argo-cd
    helm.sh/chart: argo-cd-3.1.16
  name: argocd-argo-cd-repo-server
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/name: argo-cd
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: repo-server
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: argo-cd
        helm.sh/chart: argo-cd-3.1.16
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: repo-server
                    app.kubernetes.io/instance: argocd
                    app.kubernetes.io/name: argo-cd
                namespaces:
                  - argocd
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - args:
            - --logformat
            - text
            - --loglevel
            - info
            - --redis
            - argocd-redis-master:6379
          command:
            - argocd-repo-server
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redis-password
                  name: argocd-redis
          image: docker.io/bitnami/argo-cd:2.3.3-debian-10-r25
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8081
            timeoutSeconds: 1
          name: argocd-repo-server
          ports:
            - containerPort: 8081
              name: repo-server
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8081
            timeoutSeconds: 1
          resources:
            limits: {}
            requests: {}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          volumeMounts:
            - mountPath: /app/config/ssh
              name: ssh-known-hosts
            - mountPath: /app/config/server/tls
              name: argocd-repo-server-tls
            - mountPath: /app/config/gpg/keys
              name: gpg-keyring
            - mountPath: /tmp
              name: tmp-dir
      initContainers:
        - args:
            - -ec
            - |
              #!/bin/bash

              set -o errexit
              set -o nounset
              set -o pipefail

              . /opt/bitnami/scripts/libos.sh
              . /opt/bitnami/scripts/liblog.sh

              check_redis_connection() {
                local result="$(redis-cli -h argocd-redis-master -p 6379 PING)"
                if [[ "$result" != "PONG" ]]; then
                  false
                fi
              }

              info "Checking redis connection..."
              if ! retry_while "check_redis_connection"; then
                  error "Could not connect to the Redis server"
                  return 1
              else
                  info "Connected to the Redis instance"
              fi
          command:
            - /bin/bash
          env:
            - name: REDISCLI_AUTH
              valueFrom:
                secretKeyRef:
                  key: redis-password
                  name: argocd-redis
          image: docker.io/bitnami/redis:6.2.7-debian-10-r2
          imagePullPolicy: IfNotPresent
          name: wait-for-redis
      securityContext:
        fsGroup: 1001
      serviceAccountName: argocd-argo-cd-argocd-repo-server
      volumes:
        - configMap:
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - name: argocd-repo-server-tls
          secret:
            items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
        - emptyDir: {}
          name: tmp-dir
        - emptyDir: {}
          name: gpg-keyring
