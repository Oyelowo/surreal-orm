// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from '@pulumi/pulumi';
import { input as inputs, output as outputs } from '../../types';
import * as utilities from '../../utilities';

import { ObjectMeta } from '../../meta/v1';

export class TrafficSplit extends pulumi.CustomResource {
    /**
     * Get an existing TrafficSplit resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TrafficSplit {
        return new TrafficSplit(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'kubernetes:split.smi-spec.io/v1alpha2:TrafficSplit';

    /**
     * Returns true if the given object is an instance of TrafficSplit.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TrafficSplit {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TrafficSplit.__pulumiType;
    }

    public readonly apiVersion!: pulumi.Output<'split.smi-spec.io/v1alpha2' | undefined>;
    public readonly kind!: pulumi.Output<'TrafficSplit' | undefined>;
    public readonly metadata!: pulumi.Output<ObjectMeta | undefined>;
    public readonly spec!: pulumi.Output<outputs.split.v1alpha2.TrafficSplitSpec | undefined>;

    /**
     * Create a TrafficSplit resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TrafficSplitArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs['apiVersion'] = 'split.smi-spec.io/v1alpha2';
            resourceInputs['kind'] = 'TrafficSplit';
            resourceInputs['metadata'] = args ? args.metadata : undefined;
            resourceInputs['spec'] = args ? args.spec : undefined;
        } else {
            resourceInputs['apiVersion'] = undefined /*out*/;
            resourceInputs['kind'] = undefined /*out*/;
            resourceInputs['metadata'] = undefined /*out*/;
            resourceInputs['spec'] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(TrafficSplit.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a TrafficSplit resource.
 */
export interface TrafficSplitArgs {
    apiVersion?: pulumi.Input<'split.smi-spec.io/v1alpha2'>;
    kind?: pulumi.Input<'TrafficSplit'>;
    metadata?: pulumi.Input<ObjectMeta>;
    spec?: pulumi.Input<inputs.split.v1alpha2.TrafficSplitSpecArgs>;
}
