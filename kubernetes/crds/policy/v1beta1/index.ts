// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from '@pulumi/pulumi';
import * as utilities from '../../utilities';

// Export members:
export * from './server';
export * from './serverAuthorization';

// Import resources to register:
import { Server } from './server';
import { ServerAuthorization } from './serverAuthorization';

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case 'kubernetes:policy.linkerd.io/v1beta1:Server':
                return new Server(name, <any>undefined, { urn });
            case 'kubernetes:policy.linkerd.io/v1beta1:ServerAuthorization':
                return new ServerAuthorization(name, <any>undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule('crds', 'policy.linkerd.io/v1beta1', _module);
