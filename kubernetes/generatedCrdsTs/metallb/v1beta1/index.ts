// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./addressPool";
export * from "./bfdprofile";
export * from "./bgpadvertisement";
export * from "./bgppeer";
export * from "./community";
export * from "./ipaddressPool";
export * from "./l2advertisement";

// Import resources to register:
import { AddressPool } from "./addressPool";
import { BFDProfile } from "./bfdprofile";
import { BGPAdvertisement } from "./bgpadvertisement";
import { BGPPeer } from "./bgppeer";
import { Community } from "./community";
import { IPAddressPool } from "./ipaddressPool";
import { L2Advertisement } from "./l2advertisement";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:metallb.io/v1beta1:AddressPool":
                return new AddressPool(name, <any>undefined, { urn })
            case "kubernetes:metallb.io/v1beta1:BFDProfile":
                return new BFDProfile(name, <any>undefined, { urn })
            case "kubernetes:metallb.io/v1beta1:BGPAdvertisement":
                return new BGPAdvertisement(name, <any>undefined, { urn })
            case "kubernetes:metallb.io/v1beta1:BGPPeer":
                return new BGPPeer(name, <any>undefined, { urn })
            case "kubernetes:metallb.io/v1beta1:Community":
                return new Community(name, <any>undefined, { urn })
            case "kubernetes:metallb.io/v1beta1:IPAddressPool":
                return new IPAddressPool(name, <any>undefined, { urn })
            case "kubernetes:metallb.io/v1beta1:L2Advertisement":
                return new L2Advertisement(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("crds", "metallb.io/v1beta1", _module)
