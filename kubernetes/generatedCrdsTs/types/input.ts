// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

import * as utilities from "../utilities";

import {ObjectMeta} from "../meta/v1";

export namespace acme {
    export namespace v1 {
        export interface ChallengeSpecArgs {
            /**
             * The URL to the ACME Authorization resource that this challenge is a part of.
             */
            authorizationURL: pulumi.Input<string>;
            /**
             * dnsName is the identifier that this challenge is for, e.g. example.com. If the requested DNSName is a 'wildcard', this field MUST be set to the non-wildcard domain, e.g. for `*.example.com`, it must be `example.com`.
             */
            dnsName: pulumi.Input<string>;
            /**
             * References a properly configured ACME-type Issuer which should be used to create this Challenge. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Challenge will be marked as failed.
             */
            issuerRef: pulumi.Input<inputs.acme.v1.ChallengeSpecIssuerrefArgs>;
            /**
             * The ACME challenge key for this challenge For HTTP01 challenges, this is the value that must be responded with to complete the HTTP01 challenge in the format: `<private key JWK thumbprint>.<key from acme server for challenge>`. For DNS01 challenges, this is the base64 encoded SHA256 sum of the `<private key JWK thumbprint>.<key from acme server for challenge>` text that must be set as the TXT record content.
             */
            key: pulumi.Input<string>;
            /**
             * Contains the domain solving configuration that should be used to solve this challenge resource.
             */
            solver: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverArgs>;
            /**
             * The ACME challenge token for this challenge. This is the raw value returned from the ACME server.
             */
            token: pulumi.Input<string>;
            /**
             * The type of ACME challenge this resource represents. One of "HTTP-01" or "DNS-01".
             */
            type: pulumi.Input<string>;
            /**
             * The URL of the ACME Challenge resource for this challenge. This can be used to lookup details about the status of this challenge.
             */
            url: pulumi.Input<string>;
            /**
             * wildcard will be true if this challenge is for a wildcard identifier, for example '*.example.com'.
             */
            wildcard?: pulumi.Input<boolean>;
        }

        /**
         * References a properly configured ACME-type Issuer which should be used to create this Challenge. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Challenge will be marked as failed.
         */
        export interface ChallengeSpecIssuerrefArgs {
            /**
             * Group of the resource being referred to.
             */
            group?: pulumi.Input<string>;
            /**
             * Kind of the resource being referred to.
             */
            kind?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to.
             */
            name: pulumi.Input<string>;
        }

        /**
         * Contains the domain solving configuration that should be used to solve this challenge resource.
         */
        export interface ChallengeSpecSolverArgs {
            /**
             * Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
             */
            dns01?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01Args>;
            /**
             * Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
             */
            http01?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01Args>;
            /**
             * Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
             */
            selector?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverSelectorArgs>;
        }

        /**
         * Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
         */
        export interface ChallengeSpecSolverDns01Args {
            /**
             * Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
             */
            acmeDNS?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01AcmednsArgs>;
            /**
             * Use the Akamai DNS zone management API to manage DNS01 challenge records.
             */
            akamai?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01AkamaiArgs>;
            /**
             * Use the Microsoft Azure DNS API to manage DNS01 challenge records.
             */
            azureDNS?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01AzurednsArgs>;
            /**
             * Use the Google Cloud DNS API to manage DNS01 challenge records.
             */
            cloudDNS?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01ClouddnsArgs>;
            /**
             * Use the Cloudflare API to manage DNS01 challenge records.
             */
            cloudflare?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01CloudflareArgs>;
            /**
             * CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
             */
            cnameStrategy?: pulumi.Input<string>;
            /**
             * Use the DigitalOcean DNS API to manage DNS01 challenge records.
             */
            digitalocean?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01DigitaloceanArgs>;
            /**
             * Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
             */
            rfc2136?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01Rfc2136Args>;
            /**
             * Use the AWS Route53 API to manage DNS01 challenge records.
             */
            route53?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01Route53Args>;
            /**
             * Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
             */
            webhook?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01WebhookArgs>;
        }

        /**
         * Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
         */
        export interface ChallengeSpecSolverDns01AcmednsArgs {
            /**
             * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
             */
            accountSecretRef: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01AcmednsAccountsecretrefArgs>;
            host: pulumi.Input<string>;
        }

        /**
         * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
         */
        export interface ChallengeSpecSolverDns01AcmednsAccountsecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Use the Akamai DNS zone management API to manage DNS01 challenge records.
         */
        export interface ChallengeSpecSolverDns01AkamaiArgs {
            /**
             * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
             */
            accessTokenSecretRef: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01AkamaiAccesstokensecretrefArgs>;
            /**
             * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
             */
            clientSecretSecretRef: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01AkamaiClientsecretsecretrefArgs>;
            /**
             * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
             */
            clientTokenSecretRef: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01AkamaiClienttokensecretrefArgs>;
            serviceConsumerDomain: pulumi.Input<string>;
        }

        /**
         * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
         */
        export interface ChallengeSpecSolverDns01AkamaiAccesstokensecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
         */
        export interface ChallengeSpecSolverDns01AkamaiClientsecretsecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
         */
        export interface ChallengeSpecSolverDns01AkamaiClienttokensecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Use the Microsoft Azure DNS API to manage DNS01 challenge records.
         */
        export interface ChallengeSpecSolverDns01AzurednsArgs {
            /**
             * if both this and ClientSecret are left unset MSI will be used
             */
            clientID?: pulumi.Input<string>;
            /**
             * if both this and ClientID are left unset MSI will be used
             */
            clientSecretSecretRef?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01AzurednsClientsecretsecretrefArgs>;
            /**
             * name of the Azure environment (default AzurePublicCloud)
             */
            environment?: pulumi.Input<string>;
            /**
             * name of the DNS zone that should be used
             */
            hostedZoneName?: pulumi.Input<string>;
            /**
             * managed identity configuration, can not be used at the same time as clientID, clientSecretSecretRef or tenantID
             */
            managedIdentity?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01AzurednsManagedidentityArgs>;
            /**
             * resource group the DNS zone is located in
             */
            resourceGroupName: pulumi.Input<string>;
            /**
             * ID of the Azure subscription
             */
            subscriptionID: pulumi.Input<string>;
            /**
             * when specifying ClientID and ClientSecret then this field is also needed
             */
            tenantID?: pulumi.Input<string>;
        }

        /**
         * if both this and ClientID are left unset MSI will be used
         */
        export interface ChallengeSpecSolverDns01AzurednsClientsecretsecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * managed identity configuration, can not be used at the same time as clientID, clientSecretSecretRef or tenantID
         */
        export interface ChallengeSpecSolverDns01AzurednsManagedidentityArgs {
            /**
             * client ID of the managed identity, can not be used at the same time as resourceID
             */
            clientID?: pulumi.Input<string>;
            /**
             * resource ID of the managed identity, can not be used at the same time as clientID
             */
            resourceID?: pulumi.Input<string>;
        }

        /**
         * Use the Google Cloud DNS API to manage DNS01 challenge records.
         */
        export interface ChallengeSpecSolverDns01ClouddnsArgs {
            /**
             * HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
             */
            hostedZoneName?: pulumi.Input<string>;
            project: pulumi.Input<string>;
            /**
             * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
             */
            serviceAccountSecretRef?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01ClouddnsServiceaccountsecretrefArgs>;
        }

        /**
         * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
         */
        export interface ChallengeSpecSolverDns01ClouddnsServiceaccountsecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Use the Cloudflare API to manage DNS01 challenge records.
         */
        export interface ChallengeSpecSolverDns01CloudflareArgs {
            /**
             * API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
             */
            apiKeySecretRef?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01CloudflareApikeysecretrefArgs>;
            /**
             * API token used to authenticate with Cloudflare.
             */
            apiTokenSecretRef?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01CloudflareApitokensecretrefArgs>;
            /**
             * Email of the account, only required when using API key based authentication.
             */
            email?: pulumi.Input<string>;
        }

        /**
         * API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
         */
        export interface ChallengeSpecSolverDns01CloudflareApikeysecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * API token used to authenticate with Cloudflare.
         */
        export interface ChallengeSpecSolverDns01CloudflareApitokensecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Use the DigitalOcean DNS API to manage DNS01 challenge records.
         */
        export interface ChallengeSpecSolverDns01DigitaloceanArgs {
            /**
             * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
             */
            tokenSecretRef: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01DigitaloceanTokensecretrefArgs>;
        }

        /**
         * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
         */
        export interface ChallengeSpecSolverDns01DigitaloceanTokensecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
         */
        export interface ChallengeSpecSolverDns01Rfc2136Args {
            /**
             * The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
             */
            nameserver: pulumi.Input<string>;
            /**
             * The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
             */
            tsigAlgorithm?: pulumi.Input<string>;
            /**
             * The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
             */
            tsigKeyName?: pulumi.Input<string>;
            /**
             * The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
             */
            tsigSecretSecretRef?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01Rfc2136TsigsecretsecretrefArgs>;
        }

        /**
         * The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
         */
        export interface ChallengeSpecSolverDns01Rfc2136TsigsecretsecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Use the AWS Route53 API to manage DNS01 challenge records.
         */
        export interface ChallengeSpecSolverDns01Route53Args {
            /**
             * The AccessKeyID is used for authentication. Cannot be set when SecretAccessKeyID is set. If neither the Access Key nor Key ID are set, we "fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https"://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
             */
            accessKeyID?: pulumi.Input<string>;
            /**
             * The SecretAccessKey is used for authentication. If set, pull the AWS access key ID from a key within a Kubernetes Secret. Cannot be set when AccessKeyID is set. If neither the Access Key nor Key ID are set, we "fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https"://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
             */
            accessKeyIDSecretRef?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01Route53AccesskeyidsecretrefArgs>;
            /**
             * If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
             */
            hostedZoneID?: pulumi.Input<string>;
            /**
             * Always set the region when using AccessKeyID and SecretAccessKey
             */
            region: pulumi.Input<string>;
            /**
             * Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
             */
            role?: pulumi.Input<string>;
            /**
             * The SecretAccessKey is used for authentication. If neither the Access Key nor Key ID are set, we "fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https"://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
             */
            secretAccessKeySecretRef?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverDns01Route53SecretaccesskeysecretrefArgs>;
        }

        /**
         * The SecretAccessKey is used for authentication. If set, pull the AWS access key ID from a key within a Kubernetes Secret. Cannot be set when AccessKeyID is set. If neither the Access Key nor Key ID are set, we "fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https"://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
         */
        export interface ChallengeSpecSolverDns01Route53AccesskeyidsecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * The SecretAccessKey is used for authentication. If neither the Access Key nor Key ID are set, we "fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https"://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
         */
        export interface ChallengeSpecSolverDns01Route53SecretaccesskeysecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
         */
        export interface ChallengeSpecSolverDns01WebhookArgs {
            /**
             * Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
             */
            config?: pulumi.Input<{[key: string]: any}>;
            /**
             * The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
             */
            groupName: pulumi.Input<string>;
            /**
             * The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
             */
            solverName: pulumi.Input<string>;
        }

        /**
         * Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
         */
        export interface ChallengeSpecSolverHttp01Args {
            /**
             * The Gateway API is a "sig-network community API that models service networking in Kubernetes (https"://gateway-api.sigs.k8s.io/). The Gateway solver will create HTTPRoutes with the specified labels in the same namespace as the challenge. This solver is experimental, and fields / behaviour may change in the future.
             */
            gatewayHTTPRoute?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01GatewayhttprouteArgs>;
            /**
             * The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
             */
            ingress?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressArgs>;
        }

        /**
         * The Gateway API is a "sig-network community API that models service networking in Kubernetes (https"://gateway-api.sigs.k8s.io/). The Gateway solver will create HTTPRoutes with the specified labels in the same namespace as the challenge. This solver is experimental, and fields / behaviour may change in the future.
         */
        export interface ChallengeSpecSolverHttp01GatewayhttprouteArgs {
            /**
             * Custom labels that will be applied to HTTPRoutes created by cert-manager while solving HTTP-01 challenges.
             */
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * When solving an HTTP-01 challenge, "cert-manager creates an HTTPRoute. cert-manager needs to know which parentRefs should be used when creating the HTTPRoute. Usually, the parentRef references a Gateway. See: https"://gateway-api.sigs.k8s.io/v1alpha2/api-types/httproute/#attaching-to-gateways
             */
            parentRefs?: pulumi.Input<pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01GatewayhttprouteParentrefsArgs>[]>;
            /**
             * Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.
             */
            serviceType?: pulumi.Input<string>;
        }

        /**
         * ParentRef identifies an API object (usually a Gateway) that can be considered a parent of this resource (usually a route). The only kind of parent resource with "Core" support is Gateway. This API may be extended in the future to support additional kinds of parent resources, such as HTTPRoute. 
         *  The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid. 
         *  References to objects with invalid Group and Kind are not valid, and must be rejected by the implementation, with appropriate Conditions set on the containing object.
         */
        export interface ChallengeSpecSolverHttp01GatewayhttprouteParentrefsArgs {
            /**
             * Group is the group of the referent. 
             *  Support: Core
             */
            group?: pulumi.Input<string>;
            /**
             * Kind is kind of the referent. 
             *  Support: Core (Gateway) Support: Custom (Other Resources)
             */
            kind?: pulumi.Input<string>;
            /**
             * Name is the name of the referent. 
             *  Support: Core
             */
            name: pulumi.Input<string>;
            /**
             * Namespace is the namespace of the referent. When unspecified (or empty string), this refers to the local namespace of the Route. 
             *  Support: Core
             */
            namespace?: pulumi.Input<string>;
            /**
             * SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: 
             *  * Gateway: Listener Name 
             *  Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. 
             *  When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. 
             *  Support: Core
             */
            sectionName?: pulumi.Input<string>;
        }
        /**
         * challengeSpecSolverHttp01GatewayhttprouteParentrefsArgsProvideDefaults sets the appropriate defaults for ChallengeSpecSolverHttp01GatewayhttprouteParentrefsArgs
         */
        export function challengeSpecSolverHttp01GatewayhttprouteParentrefsArgsProvideDefaults(val: ChallengeSpecSolverHttp01GatewayhttprouteParentrefsArgs): ChallengeSpecSolverHttp01GatewayhttprouteParentrefsArgs {
            return {
                ...val,
                group: (val.group) ?? "gateway.networking.k8s.io",
                kind: (val.kind) ?? "Gateway",
            };
        }

        /**
         * The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
         */
        export interface ChallengeSpecSolverHttp01IngressArgs {
            /**
             * The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
             */
            class?: pulumi.Input<string>;
            /**
             * Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges.
             */
            ingressTemplate?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressIngresstemplateArgs>;
            /**
             * The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
             */
            name?: pulumi.Input<string>;
            /**
             * Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges.
             */
            podTemplate?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateArgs>;
            /**
             * Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.
             */
            serviceType?: pulumi.Input<string>;
        }

        /**
         * Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges.
         */
        export interface ChallengeSpecSolverHttp01IngressIngresstemplateArgs {
            /**
             * ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
             */
            metadata?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressIngresstemplateMetadataArgs>;
        }

        /**
         * ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
         */
        export interface ChallengeSpecSolverHttp01IngressIngresstemplateMetadataArgs {
            /**
             * Annotations that should be added to the created ACME HTTP01 solver ingress.
             */
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * Labels that should be added to the created ACME HTTP01 solver ingress.
             */
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateArgs {
            /**
             * ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
             */
            metadata?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateMetadataArgs>;
            /**
             * PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
             */
            spec?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecArgs>;
        }

        /**
         * ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateMetadataArgs {
            /**
             * Annotations that should be added to the create ACME HTTP01 solver pods.
             */
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * Labels that should be added to the created ACME HTTP01 solver pods.
             */
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecArgs {
            /**
             * If specified, the pod's scheduling constraints
             */
            affinity?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityArgs>;
            /**
             * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
             */
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * If specified, the pod's priorityClassName.
             */
            priorityClassName?: pulumi.Input<string>;
            /**
             * If specified, the pod's service account
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * If specified, the pod's tolerations.
             */
            tolerations?: pulumi.Input<pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecTolerationsArgs>[]>;
        }

        /**
         * If specified, the pod's scheduling constraints
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityArgs {
            /**
             * Describes node affinity scheduling rules for the pod.
             */
            nodeAffinity?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityNodeaffinityArgs>;
            /**
             * Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
             */
            podAffinity?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityArgs>;
            /**
             * Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
             */
            podAntiAffinity?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityArgs>;
        }

        /**
         * Describes node affinity scheduling rules for the pod.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityNodeaffinityArgs {
            /**
             * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
             */
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            /**
             * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
             */
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        /**
         * An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            /**
             * A node selector term, associated with the corresponding weight.
             */
            preference: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            /**
             * Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
             */
            weight: pulumi.Input<number>;
        }

        /**
         * A node selector term, associated with the corresponding weight.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            /**
             * A list of node selector requirements by node's labels.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            /**
             * A list of node selector requirements by node's fields.
             */
            matchFields?: pulumi.Input<pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        /**
         * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            /**
             * The label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
             */
            operator: pulumi.Input<string>;
            /**
             * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            /**
             * The label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
             */
            operator: pulumi.Input<string>;
            /**
             * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            /**
             * Required. A list of node selector terms. The terms are ORed.
             */
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        /**
         * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            /**
             * A list of node selector requirements by node's labels.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            /**
             * A list of node selector requirements by node's fields.
             */
            matchFields?: pulumi.Input<pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        /**
         * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            /**
             * The label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
             */
            operator: pulumi.Input<string>;
            /**
             * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            /**
             * The label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
             */
            operator: pulumi.Input<string>;
            /**
             * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityArgs {
            /**
             * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
             */
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            /**
             * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
             */
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        /**
         * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            /**
             * Required. A pod affinity term, associated with the corresponding weight.
             */
            podAffinityTerm: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            /**
             * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
             */
            weight: pulumi.Input<number>;
        }

        /**
         * Required. A pod affinity term, associated with the corresponding weight.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            /**
             * A label query over a set of resources, in this case pods.
             */
            labelSelector?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            /**
             * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
             */
            namespaceSelector?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs>;
            /**
             * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
             */
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
             */
            topologyKey: pulumi.Input<string>;
        }

        /**
         * A label query over a set of resources, in this case pods.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            /**
             * A label query over a set of resources, in this case pods.
             */
            labelSelector?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            /**
             * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
             */
            namespaceSelector?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs>;
            /**
             * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
             */
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
             */
            topologyKey: pulumi.Input<string>;
        }

        /**
         * A label query over a set of resources, in this case pods.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityArgs {
            /**
             * The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
             */
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            /**
             * If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
             */
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        /**
         * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            /**
             * Required. A pod affinity term, associated with the corresponding weight.
             */
            podAffinityTerm: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            /**
             * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
             */
            weight: pulumi.Input<number>;
        }

        /**
         * Required. A pod affinity term, associated with the corresponding weight.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            /**
             * A label query over a set of resources, in this case pods.
             */
            labelSelector?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            /**
             * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
             */
            namespaceSelector?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs>;
            /**
             * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
             */
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
             */
            topologyKey: pulumi.Input<string>;
        }

        /**
         * A label query over a set of resources, in this case pods.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            /**
             * A label query over a set of resources, in this case pods.
             */
            labelSelector?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            /**
             * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
             */
            namespaceSelector?: pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs>;
            /**
             * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
             */
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
             */
            topologyKey: pulumi.Input<string>;
        }

        /**
         * A label query over a set of resources, in this case pods.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.acme.v1.ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
         */
        export interface ChallengeSpecSolverHttp01IngressPodtemplateSpecTolerationsArgs {
            /**
             * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
             */
            effect?: pulumi.Input<string>;
            /**
             * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
             */
            key?: pulumi.Input<string>;
            /**
             * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
             */
            operator?: pulumi.Input<string>;
            /**
             * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
             */
            tolerationSeconds?: pulumi.Input<number>;
            /**
             * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
             */
            value?: pulumi.Input<string>;
        }

        /**
         * Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
         */
        export interface ChallengeSpecSolverSelectorArgs {
            /**
             * List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
             */
            dnsNames?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
             */
            dnsZones?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ChallengeStatusArgs {
            /**
             * presented will be set to true if the challenge values for this challenge are currently 'presented'. This *does not* imply the self check is passing. Only that the values have been 'submitted' for the appropriate challenge mechanism (i.e. the DNS01 TXT record has been presented, or the HTTP01 configuration has been configured).
             */
            presented?: pulumi.Input<boolean>;
            /**
             * Used to denote whether this challenge should be processed or not. This field will only be set to true by the 'scheduling' component. It will only be set to false by the 'challenges' controller, after the challenge has reached a final state or timed out. If this field is set to false, the challenge controller will not take any more action.
             */
            processing?: pulumi.Input<boolean>;
            /**
             * Contains human readable information on why the Challenge is in the current state.
             */
            reason?: pulumi.Input<string>;
            /**
             * Contains the current 'state' of the challenge. If not set, the state of the challenge is unknown.
             */
            state?: pulumi.Input<string>;
        }

        export interface OrderSpecArgs {
            /**
             * CommonName is the common name as specified on the DER encoded CSR. If specified, this value must also be present in `dnsNames` or `ipAddresses`. This field must match the corresponding field on the DER encoded CSR.
             */
            commonName?: pulumi.Input<string>;
            /**
             * DNSNames is a list of DNS names that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.
             */
            dnsNames?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Duration is the duration for the not after date for the requested certificate. this is set on order creation as pe the ACME spec.
             */
            duration?: pulumi.Input<string>;
            /**
             * IPAddresses is a list of IP addresses that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.
             */
            ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * IssuerRef references a properly configured ACME-type Issuer which should be used to create this Order. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Order will be marked as failed.
             */
            issuerRef: pulumi.Input<inputs.acme.v1.OrderSpecIssuerrefArgs>;
            /**
             * Certificate signing request bytes in DER encoding. This will be used when finalizing the order. This field must be set on the order.
             */
            request: pulumi.Input<string>;
        }

        /**
         * IssuerRef references a properly configured ACME-type Issuer which should be used to create this Order. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Order will be marked as failed.
         */
        export interface OrderSpecIssuerrefArgs {
            /**
             * Group of the resource being referred to.
             */
            group?: pulumi.Input<string>;
            /**
             * Kind of the resource being referred to.
             */
            kind?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to.
             */
            name: pulumi.Input<string>;
        }

        export interface OrderStatusArgs {
            /**
             * Authorizations contains data returned from the ACME server on what authorizations must be completed in order to validate the DNS names specified on the Order.
             */
            authorizations?: pulumi.Input<pulumi.Input<inputs.acme.v1.OrderStatusAuthorizationsArgs>[]>;
            /**
             * Certificate is a copy of the PEM encoded certificate for this Order. This field will be populated after the order has been successfully finalized with the ACME server, and the order has transitioned to the 'valid' state.
             */
            certificate?: pulumi.Input<string>;
            /**
             * FailureTime stores the time that this order failed. This is used to influence garbage collection and back-off.
             */
            failureTime?: pulumi.Input<string>;
            /**
             * FinalizeURL of the Order. This is used to obtain certificates for this order once it has been completed.
             */
            finalizeURL?: pulumi.Input<string>;
            /**
             * Reason optionally provides more information about a why the order is in the current state.
             */
            reason?: pulumi.Input<string>;
            /**
             * State contains the current state of this Order resource. States 'success' and 'expired' are 'final'
             */
            state?: pulumi.Input<string>;
            /**
             * URL of the Order. This will initially be empty when the resource is first created. The Order controller will populate this field when the Order is first processed. This field will be immutable after it is initially set.
             */
            url?: pulumi.Input<string>;
        }

        /**
         * ACMEAuthorization contains data returned from the ACME server on an authorization that must be completed in order validate a DNS name on an ACME Order resource.
         */
        export interface OrderStatusAuthorizationsArgs {
            /**
             * Challenges specifies the challenge types offered by the ACME server. One of these challenge types will be selected when validating the DNS name and an appropriate Challenge resource will be created to perform the ACME challenge process.
             */
            challenges?: pulumi.Input<pulumi.Input<inputs.acme.v1.OrderStatusAuthorizationsChallengesArgs>[]>;
            /**
             * Identifier is the DNS name to be validated as part of this authorization
             */
            identifier?: pulumi.Input<string>;
            /**
             * InitialState is the initial state of the ACME authorization when first fetched from the ACME server. If an Authorization is already 'valid', the Order controller will not create a Challenge resource for the authorization. This will occur when working with an ACME server that enables 'authz reuse' (such as Let's Encrypt's production endpoint). If not set and 'identifier' is set, the state is assumed to be pending and a Challenge will be created.
             */
            initialState?: pulumi.Input<string>;
            /**
             * URL is the URL of the Authorization that must be completed
             */
            url: pulumi.Input<string>;
            /**
             * Wildcard will be true if this authorization is for a wildcard DNS name. If this is true, the identifier will be the *non-wildcard* version of the DNS name. For example, if '*.example.com' is the DNS name being validated, this field will be 'true' and the 'identifier' field will be 'example.com'.
             */
            wildcard?: pulumi.Input<boolean>;
        }

        /**
         * Challenge specifies a challenge offered by the ACME server for an Order. An appropriate Challenge resource can be created to perform the ACME challenge process.
         */
        export interface OrderStatusAuthorizationsChallengesArgs {
            /**
             * Token is the token that must be presented for this challenge. This is used to compute the 'key' that must also be presented.
             */
            token: pulumi.Input<string>;
            /**
             * Type is the type of challenge being offered, e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This is the raw value retrieved from the ACME server. Only 'http-01' and 'dns-01' are supported by cert-manager, other values will be ignored.
             */
            type: pulumi.Input<string>;
            /**
             * URL is the URL of this challenge. It can be used to retrieve additional metadata about the Challenge from the ACME server.
             */
            url: pulumi.Input<string>;
        }
    }
}

export namespace argoproj {
    export namespace v1alpha1 {
        export interface AnalysisRunSpecArgs {
            args?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecArgsArgs>[]>;
            dryRun?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecDryrunArgs>[]>;
            measurementRetention?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMeasurementretentionArgs>[]>;
            metrics: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsArgs>[]>;
            terminate?: pulumi.Input<boolean>;
        }

        export interface AnalysisRunSpecArgsArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecArgsValuefromArgs>;
        }

        export interface AnalysisRunSpecArgsValuefromArgs {
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecArgsValuefromFieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecArgsValuefromSecretkeyrefArgs>;
        }

        export interface AnalysisRunSpecArgsValuefromFieldrefArgs {
            fieldPath: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecArgsValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecDryrunArgs {
            metricName: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMeasurementretentionArgs {
            limit: pulumi.Input<number>;
            metricName: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsArgs {
            consecutiveErrorLimit?: pulumi.Input<number | string>;
            count?: pulumi.Input<number | string>;
            failureCondition?: pulumi.Input<string>;
            failureLimit?: pulumi.Input<number | string>;
            inconclusiveLimit?: pulumi.Input<number | string>;
            initialDelay?: pulumi.Input<string>;
            interval?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            provider: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderArgs>;
            successCondition?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderArgs {
            cloudWatch?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderCloudwatchArgs>;
            datadog?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderDatadogArgs>;
            graphite?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderGraphiteArgs>;
            influxdb?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderInfluxdbArgs>;
            job?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobArgs>;
            kayenta?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderKayentaArgs>;
            newRelic?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderNewrelicArgs>;
            prometheus?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderPrometheusArgs>;
            wavefront?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderWavefrontArgs>;
            web?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderWebArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderCloudwatchArgs {
            interval?: pulumi.Input<string>;
            metricDataQueries: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderCloudwatchMetricdataqueriesArgs>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderCloudwatchMetricdataqueriesArgs {
            expression?: pulumi.Input<string>;
            id?: pulumi.Input<string>;
            label?: pulumi.Input<string>;
            metricStat?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderCloudwatchMetricdataqueriesMetricstatArgs>;
            period?: pulumi.Input<number | string>;
            returnData?: pulumi.Input<boolean>;
        }

        export interface AnalysisRunSpecMetricsProviderCloudwatchMetricdataqueriesMetricstatArgs {
            metric?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderCloudwatchMetricdataqueriesMetricstatMetricArgs>;
            period?: pulumi.Input<number | string>;
            stat?: pulumi.Input<string>;
            unit?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderCloudwatchMetricdataqueriesMetricstatMetricArgs {
            dimensions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderCloudwatchMetricdataqueriesMetricstatMetricDimensionsArgs>[]>;
            metricName?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderCloudwatchMetricdataqueriesMetricstatMetricDimensionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderDatadogArgs {
            interval?: pulumi.Input<string>;
            query: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderGraphiteArgs {
            address?: pulumi.Input<string>;
            query?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderInfluxdbArgs {
            profile?: pulumi.Input<string>;
            query?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobArgs {
            metadata?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecArgs {
            activeDeadlineSeconds?: pulumi.Input<number>;
            backoffLimit?: pulumi.Input<number>;
            completionMode?: pulumi.Input<string>;
            completions?: pulumi.Input<number>;
            manualSelector?: pulumi.Input<boolean>;
            parallelism?: pulumi.Input<number>;
            selector?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecSelectorArgs>;
            suspend?: pulumi.Input<boolean>;
            template: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateArgs>;
            ttlSecondsAfterFinished?: pulumi.Input<number>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateArgs {
            metadata?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateMetadataArgs>;
            spec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecArgs {
            activeDeadlineSeconds?: pulumi.Input<number>;
            affinity?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityArgs>;
            automountServiceAccountToken?: pulumi.Input<boolean>;
            containers: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersArgs>[]>;
            dnsConfig?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecDnsconfigArgs>;
            dnsPolicy?: pulumi.Input<string>;
            enableServiceLinks?: pulumi.Input<boolean>;
            ephemeralContainers?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersArgs>[]>;
            hostAliases?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecHostaliasesArgs>[]>;
            hostIPC?: pulumi.Input<boolean>;
            hostNetwork?: pulumi.Input<boolean>;
            hostPID?: pulumi.Input<boolean>;
            hostname?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecImagepullsecretsArgs>[]>;
            initContainers?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersArgs>[]>;
            nodeName?: pulumi.Input<string>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            os?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecOsArgs>;
            overhead?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            preemptionPolicy?: pulumi.Input<string>;
            priority?: pulumi.Input<number>;
            priorityClassName?: pulumi.Input<string>;
            readinessGates?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecReadinessgatesArgs>[]>;
            restartPolicy?: pulumi.Input<string>;
            runtimeClassName?: pulumi.Input<string>;
            schedulerName?: pulumi.Input<string>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecSecuritycontextArgs>;
            serviceAccount?: pulumi.Input<string>;
            serviceAccountName?: pulumi.Input<string>;
            setHostnameAsFQDN?: pulumi.Input<boolean>;
            shareProcessNamespace?: pulumi.Input<boolean>;
            subdomain?: pulumi.Input<string>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecTolerationsArgs>[]>;
            topologySpreadConstraints?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecTopologyspreadconstraintsArgs>[]>;
            volumes?: pulumi.Input<{[key: string]: any}>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaceSelector?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaceSelector?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaceSelector?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaceSelector?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersEnvfromSecretrefArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * analysisRunSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgsProvideDefaults sets the appropriate defaults for AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgs
         */
        export function analysisRunSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgsProvideDefaults(val: AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgs): AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: any}>;
            requests?: pulumi.Input<{[key: string]: any}>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            hostProcess?: pulumi.Input<boolean>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecContainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecDnsconfigArgs {
            nameservers?: pulumi.Input<pulumi.Input<string>[]>;
            options?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecDnsconfigOptionsArgs>[]>;
            searches?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecDnsconfigOptionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            targetContainerName?: pulumi.Input<string>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvfromSecretrefArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * analysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgsProvideDefaults sets the appropriate defaults for AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgs
         */
        export function analysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgsProvideDefaults(val: AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgs): AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: any}>;
            requests?: pulumi.Input<{[key: string]: any}>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            hostProcess?: pulumi.Input<boolean>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecHostaliasesArgs {
            hostnames?: pulumi.Input<pulumi.Input<string>[]>;
            ip?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvfromSecretrefArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * analysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgsProvideDefaults sets the appropriate defaults for AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgs
         */
        export function analysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgsProvideDefaults(val: AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgs): AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: any}>;
            requests?: pulumi.Input<{[key: string]: any}>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            hostProcess?: pulumi.Input<boolean>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecInitcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecOsArgs {
            name: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecReadinessgatesArgs {
            conditionType: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecSecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecSecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecSecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecSecuritycontextWindowsoptionsArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecSecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            hostProcess?: pulumi.Input<boolean>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecTopologyspreadconstraintsArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecTopologyspreadconstraintsLabelselectorArgs>;
            maxSkew: pulumi.Input<number>;
            minDomains?: pulumi.Input<number>;
            topologyKey: pulumi.Input<string>;
            whenUnsatisfiable: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecTopologyspreadconstraintsLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderJobSpecTemplateSpecTopologyspreadconstraintsLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisRunSpecMetricsProviderJobSpecTemplateSpecTopologyspreadconstraintsLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisRunSpecMetricsProviderKayentaArgs {
            address: pulumi.Input<string>;
            application: pulumi.Input<string>;
            canaryConfigName: pulumi.Input<string>;
            configurationAccountName: pulumi.Input<string>;
            metricsAccountName: pulumi.Input<string>;
            scopes: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderKayentaScopesArgs>[]>;
            storageAccountName: pulumi.Input<string>;
            threshold: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderKayentaThresholdArgs>;
        }

        export interface AnalysisRunSpecMetricsProviderKayentaScopesArgs {
            controlScope: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderKayentaScopesControlscopeArgs>;
            experimentScope: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderKayentaScopesExperimentscopeArgs>;
            name: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderKayentaScopesControlscopeArgs {
            end: pulumi.Input<string>;
            region: pulumi.Input<string>;
            scope: pulumi.Input<string>;
            start: pulumi.Input<string>;
            step: pulumi.Input<number>;
        }

        export interface AnalysisRunSpecMetricsProviderKayentaScopesExperimentscopeArgs {
            end: pulumi.Input<string>;
            region: pulumi.Input<string>;
            scope: pulumi.Input<string>;
            start: pulumi.Input<string>;
            step: pulumi.Input<number>;
        }

        export interface AnalysisRunSpecMetricsProviderKayentaThresholdArgs {
            marginal: pulumi.Input<number>;
            pass: pulumi.Input<number>;
        }

        export interface AnalysisRunSpecMetricsProviderNewrelicArgs {
            profile?: pulumi.Input<string>;
            query: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderPrometheusArgs {
            address?: pulumi.Input<string>;
            query?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderWavefrontArgs {
            address?: pulumi.Input<string>;
            query?: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderWebArgs {
            body?: pulumi.Input<string>;
            headers?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunSpecMetricsProviderWebHeadersArgs>[]>;
            insecure?: pulumi.Input<boolean>;
            jsonPath?: pulumi.Input<string>;
            method?: pulumi.Input<string>;
            timeoutSeconds?: pulumi.Input<number>;
            url: pulumi.Input<string>;
        }

        export interface AnalysisRunSpecMetricsProviderWebHeadersArgs {
            key: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisRunStatusArgs {
            dryRunSummary?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunStatusDryrunsummaryArgs>;
            message?: pulumi.Input<string>;
            metricResults?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunStatusMetricresultsArgs>[]>;
            phase: pulumi.Input<string>;
            runSummary?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunStatusRunsummaryArgs>;
            startedAt?: pulumi.Input<string>;
        }

        export interface AnalysisRunStatusDryrunsummaryArgs {
            count?: pulumi.Input<number>;
            error?: pulumi.Input<number>;
            failed?: pulumi.Input<number>;
            inconclusive?: pulumi.Input<number>;
            successful?: pulumi.Input<number>;
        }

        export interface AnalysisRunStatusMetricresultsArgs {
            consecutiveError?: pulumi.Input<number>;
            count?: pulumi.Input<number>;
            dryRun?: pulumi.Input<boolean>;
            error?: pulumi.Input<number>;
            failed?: pulumi.Input<number>;
            inconclusive?: pulumi.Input<number>;
            measurements?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisRunStatusMetricresultsMeasurementsArgs>[]>;
            message?: pulumi.Input<string>;
            metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name: pulumi.Input<string>;
            phase: pulumi.Input<string>;
            successful?: pulumi.Input<number>;
        }

        export interface AnalysisRunStatusMetricresultsMeasurementsArgs {
            finishedAt?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            phase: pulumi.Input<string>;
            resumeAt?: pulumi.Input<string>;
            startedAt?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface AnalysisRunStatusRunsummaryArgs {
            count?: pulumi.Input<number>;
            error?: pulumi.Input<number>;
            failed?: pulumi.Input<number>;
            inconclusive?: pulumi.Input<number>;
            successful?: pulumi.Input<number>;
        }

        export interface AnalysisTemplateSpecArgs {
            args?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecArgsArgs>[]>;
            dryRun?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecDryrunArgs>[]>;
            measurementRetention?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMeasurementretentionArgs>[]>;
            metrics: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsArgs>[]>;
        }

        export interface AnalysisTemplateSpecArgsArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecArgsValuefromArgs>;
        }

        export interface AnalysisTemplateSpecArgsValuefromArgs {
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecArgsValuefromFieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecArgsValuefromSecretkeyrefArgs>;
        }

        export interface AnalysisTemplateSpecArgsValuefromFieldrefArgs {
            fieldPath: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecArgsValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecDryrunArgs {
            metricName: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMeasurementretentionArgs {
            limit: pulumi.Input<number>;
            metricName: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsArgs {
            consecutiveErrorLimit?: pulumi.Input<number | string>;
            count?: pulumi.Input<number | string>;
            failureCondition?: pulumi.Input<string>;
            failureLimit?: pulumi.Input<number | string>;
            inconclusiveLimit?: pulumi.Input<number | string>;
            initialDelay?: pulumi.Input<string>;
            interval?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            provider: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderArgs>;
            successCondition?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderArgs {
            cloudWatch?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderCloudwatchArgs>;
            datadog?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderDatadogArgs>;
            graphite?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderGraphiteArgs>;
            influxdb?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderInfluxdbArgs>;
            job?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobArgs>;
            kayenta?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderKayentaArgs>;
            newRelic?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderNewrelicArgs>;
            prometheus?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderPrometheusArgs>;
            wavefront?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderWavefrontArgs>;
            web?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderWebArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderCloudwatchArgs {
            interval?: pulumi.Input<string>;
            metricDataQueries: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderCloudwatchMetricdataqueriesArgs>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderCloudwatchMetricdataqueriesArgs {
            expression?: pulumi.Input<string>;
            id?: pulumi.Input<string>;
            label?: pulumi.Input<string>;
            metricStat?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderCloudwatchMetricdataqueriesMetricstatArgs>;
            period?: pulumi.Input<number | string>;
            returnData?: pulumi.Input<boolean>;
        }

        export interface AnalysisTemplateSpecMetricsProviderCloudwatchMetricdataqueriesMetricstatArgs {
            metric?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderCloudwatchMetricdataqueriesMetricstatMetricArgs>;
            period?: pulumi.Input<number | string>;
            stat?: pulumi.Input<string>;
            unit?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderCloudwatchMetricdataqueriesMetricstatMetricArgs {
            dimensions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderCloudwatchMetricdataqueriesMetricstatMetricDimensionsArgs>[]>;
            metricName?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderCloudwatchMetricdataqueriesMetricstatMetricDimensionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderDatadogArgs {
            interval?: pulumi.Input<string>;
            query: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderGraphiteArgs {
            address?: pulumi.Input<string>;
            query?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderInfluxdbArgs {
            profile?: pulumi.Input<string>;
            query?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobArgs {
            metadata?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecArgs {
            activeDeadlineSeconds?: pulumi.Input<number>;
            backoffLimit?: pulumi.Input<number>;
            completionMode?: pulumi.Input<string>;
            completions?: pulumi.Input<number>;
            manualSelector?: pulumi.Input<boolean>;
            parallelism?: pulumi.Input<number>;
            selector?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecSelectorArgs>;
            suspend?: pulumi.Input<boolean>;
            template: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateArgs>;
            ttlSecondsAfterFinished?: pulumi.Input<number>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateArgs {
            metadata?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateMetadataArgs>;
            spec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecArgs {
            activeDeadlineSeconds?: pulumi.Input<number>;
            affinity?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityArgs>;
            automountServiceAccountToken?: pulumi.Input<boolean>;
            containers: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersArgs>[]>;
            dnsConfig?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecDnsconfigArgs>;
            dnsPolicy?: pulumi.Input<string>;
            enableServiceLinks?: pulumi.Input<boolean>;
            ephemeralContainers?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersArgs>[]>;
            hostAliases?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecHostaliasesArgs>[]>;
            hostIPC?: pulumi.Input<boolean>;
            hostNetwork?: pulumi.Input<boolean>;
            hostPID?: pulumi.Input<boolean>;
            hostname?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecImagepullsecretsArgs>[]>;
            initContainers?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersArgs>[]>;
            nodeName?: pulumi.Input<string>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            os?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecOsArgs>;
            overhead?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            preemptionPolicy?: pulumi.Input<string>;
            priority?: pulumi.Input<number>;
            priorityClassName?: pulumi.Input<string>;
            readinessGates?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecReadinessgatesArgs>[]>;
            restartPolicy?: pulumi.Input<string>;
            runtimeClassName?: pulumi.Input<string>;
            schedulerName?: pulumi.Input<string>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecSecuritycontextArgs>;
            serviceAccount?: pulumi.Input<string>;
            serviceAccountName?: pulumi.Input<string>;
            setHostnameAsFQDN?: pulumi.Input<boolean>;
            shareProcessNamespace?: pulumi.Input<boolean>;
            subdomain?: pulumi.Input<string>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecTolerationsArgs>[]>;
            topologySpreadConstraints?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecTopologyspreadconstraintsArgs>[]>;
            volumes?: pulumi.Input<{[key: string]: any}>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaceSelector?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaceSelector?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaceSelector?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaceSelector?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvfromSecretrefArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * analysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgsProvideDefaults sets the appropriate defaults for AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgs
         */
        export function analysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgsProvideDefaults(val: AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgs): AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: any}>;
            requests?: pulumi.Input<{[key: string]: any}>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            hostProcess?: pulumi.Input<boolean>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecDnsconfigArgs {
            nameservers?: pulumi.Input<pulumi.Input<string>[]>;
            options?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecDnsconfigOptionsArgs>[]>;
            searches?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecDnsconfigOptionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            targetContainerName?: pulumi.Input<string>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvfromSecretrefArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * analysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgsProvideDefaults sets the appropriate defaults for AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgs
         */
        export function analysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgsProvideDefaults(val: AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgs): AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: any}>;
            requests?: pulumi.Input<{[key: string]: any}>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            hostProcess?: pulumi.Input<boolean>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecHostaliasesArgs {
            hostnames?: pulumi.Input<pulumi.Input<string>[]>;
            ip?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvfromSecretrefArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * analysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgsProvideDefaults sets the appropriate defaults for AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgs
         */
        export function analysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgsProvideDefaults(val: AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgs): AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: any}>;
            requests?: pulumi.Input<{[key: string]: any}>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            hostProcess?: pulumi.Input<boolean>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecOsArgs {
            name: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecReadinessgatesArgs {
            conditionType: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecSecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecSecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecSecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecSecuritycontextWindowsoptionsArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecSecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            hostProcess?: pulumi.Input<boolean>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecTopologyspreadconstraintsArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecTopologyspreadconstraintsLabelselectorArgs>;
            maxSkew: pulumi.Input<number>;
            minDomains?: pulumi.Input<number>;
            topologyKey: pulumi.Input<string>;
            whenUnsatisfiable: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecTopologyspreadconstraintsLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecTopologyspreadconstraintsLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface AnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecTopologyspreadconstraintsLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface AnalysisTemplateSpecMetricsProviderKayentaArgs {
            address: pulumi.Input<string>;
            application: pulumi.Input<string>;
            canaryConfigName: pulumi.Input<string>;
            configurationAccountName: pulumi.Input<string>;
            metricsAccountName: pulumi.Input<string>;
            scopes: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderKayentaScopesArgs>[]>;
            storageAccountName: pulumi.Input<string>;
            threshold: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderKayentaThresholdArgs>;
        }

        export interface AnalysisTemplateSpecMetricsProviderKayentaScopesArgs {
            controlScope: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderKayentaScopesControlscopeArgs>;
            experimentScope: pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderKayentaScopesExperimentscopeArgs>;
            name: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderKayentaScopesControlscopeArgs {
            end: pulumi.Input<string>;
            region: pulumi.Input<string>;
            scope: pulumi.Input<string>;
            start: pulumi.Input<string>;
            step: pulumi.Input<number>;
        }

        export interface AnalysisTemplateSpecMetricsProviderKayentaScopesExperimentscopeArgs {
            end: pulumi.Input<string>;
            region: pulumi.Input<string>;
            scope: pulumi.Input<string>;
            start: pulumi.Input<string>;
            step: pulumi.Input<number>;
        }

        export interface AnalysisTemplateSpecMetricsProviderKayentaThresholdArgs {
            marginal: pulumi.Input<number>;
            pass: pulumi.Input<number>;
        }

        export interface AnalysisTemplateSpecMetricsProviderNewrelicArgs {
            profile?: pulumi.Input<string>;
            query: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderPrometheusArgs {
            address?: pulumi.Input<string>;
            query?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderWavefrontArgs {
            address?: pulumi.Input<string>;
            query?: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderWebArgs {
            body?: pulumi.Input<string>;
            headers?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AnalysisTemplateSpecMetricsProviderWebHeadersArgs>[]>;
            insecure?: pulumi.Input<boolean>;
            jsonPath?: pulumi.Input<string>;
            method?: pulumi.Input<string>;
            timeoutSeconds?: pulumi.Input<number>;
            url: pulumi.Input<string>;
        }

        export interface AnalysisTemplateSpecMetricsProviderWebHeadersArgs {
            key: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * AppProjectSpec is the specification of an AppProject
         */
        export interface AppProjectSpecArgs {
            /**
             * ClusterResourceBlacklist contains list of blacklisted cluster level resources
             */
            clusterResourceBlacklist?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AppProjectSpecClusterresourceblacklistArgs>[]>;
            /**
             * ClusterResourceWhitelist contains list of whitelisted cluster level resources
             */
            clusterResourceWhitelist?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AppProjectSpecClusterresourcewhitelistArgs>[]>;
            /**
             * Description contains optional project description
             */
            description?: pulumi.Input<string>;
            /**
             * Destinations contains list of destinations available for deployment
             */
            destinations?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AppProjectSpecDestinationsArgs>[]>;
            /**
             * NamespaceResourceBlacklist contains list of blacklisted namespace level resources
             */
            namespaceResourceBlacklist?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AppProjectSpecNamespaceresourceblacklistArgs>[]>;
            /**
             * NamespaceResourceWhitelist contains list of whitelisted namespace level resources
             */
            namespaceResourceWhitelist?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AppProjectSpecNamespaceresourcewhitelistArgs>[]>;
            /**
             * OrphanedResources specifies if controller should monitor orphaned resources of apps in this project
             */
            orphanedResources?: pulumi.Input<inputs.argoproj.v1alpha1.AppProjectSpecOrphanedresourcesArgs>;
            /**
             * Roles are user defined RBAC roles associated with this project
             */
            roles?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AppProjectSpecRolesArgs>[]>;
            /**
             * SignatureKeys contains a list of PGP key IDs that commits in Git must be signed with in order to be allowed for sync
             */
            signatureKeys?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AppProjectSpecSignaturekeysArgs>[]>;
            /**
             * SourceRepos contains list of repository URLs which can be used for deployment
             */
            sourceRepos?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * SyncWindows controls when syncs can be run for apps in this project
             */
            syncWindows?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AppProjectSpecSyncwindowsArgs>[]>;
        }

        /**
         * GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
         */
        export interface AppProjectSpecClusterresourceblacklistArgs {
            group: pulumi.Input<string>;
            kind: pulumi.Input<string>;
        }

        /**
         * GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
         */
        export interface AppProjectSpecClusterresourcewhitelistArgs {
            group: pulumi.Input<string>;
            kind: pulumi.Input<string>;
        }

        /**
         * ApplicationDestination holds information about the application's destination
         */
        export interface AppProjectSpecDestinationsArgs {
            /**
             * Name is an alternate way of specifying the target cluster by its symbolic name
             */
            name?: pulumi.Input<string>;
            /**
             * Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
             */
            namespace?: pulumi.Input<string>;
            /**
             * Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
             */
            server?: pulumi.Input<string>;
        }

        /**
         * GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
         */
        export interface AppProjectSpecNamespaceresourceblacklistArgs {
            group: pulumi.Input<string>;
            kind: pulumi.Input<string>;
        }

        /**
         * GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
         */
        export interface AppProjectSpecNamespaceresourcewhitelistArgs {
            group: pulumi.Input<string>;
            kind: pulumi.Input<string>;
        }

        /**
         * OrphanedResources specifies if controller should monitor orphaned resources of apps in this project
         */
        export interface AppProjectSpecOrphanedresourcesArgs {
            /**
             * Ignore contains a list of resources that are to be excluded from orphaned resources monitoring
             */
            ignore?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AppProjectSpecOrphanedresourcesIgnoreArgs>[]>;
            /**
             * Warn indicates if warning condition should be created for apps which have orphaned resources
             */
            warn?: pulumi.Input<boolean>;
        }

        /**
         * OrphanedResourceKey is a reference to a resource to be ignored from
         */
        export interface AppProjectSpecOrphanedresourcesIgnoreArgs {
            group?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            name?: pulumi.Input<string>;
        }

        /**
         * ProjectRole represents a role that has access to a project
         */
        export interface AppProjectSpecRolesArgs {
            /**
             * Description is a description of the role
             */
            description?: pulumi.Input<string>;
            /**
             * Groups are a list of OIDC group claims bound to this role
             */
            groups?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * JWTTokens are a list of generated JWT tokens bound to this role
             */
            jwtTokens?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AppProjectSpecRolesJwttokensArgs>[]>;
            /**
             * Name is a name for this role
             */
            name: pulumi.Input<string>;
            /**
             * Policies Stores a list of casbin formatted strings that define access policies for the role in the project
             */
            policies?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * JWTToken holds the issuedAt and expiresAt values of a token
         */
        export interface AppProjectSpecRolesJwttokensArgs {
            exp?: pulumi.Input<number>;
            iat: pulumi.Input<number>;
            id?: pulumi.Input<string>;
        }

        /**
         * SignatureKey is the specification of a key required to verify commit signatures with
         */
        export interface AppProjectSpecSignaturekeysArgs {
            /**
             * The ID of the key in hexadecimal notation
             */
            keyID: pulumi.Input<string>;
        }

        /**
         * SyncWindow contains the kind, time, duration and attributes that are used to assign the syncWindows to apps
         */
        export interface AppProjectSpecSyncwindowsArgs {
            /**
             * Applications contains a list of applications that the window will apply to
             */
            applications?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Clusters contains a list of clusters that the window will apply to
             */
            clusters?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Duration is the amount of time the sync window will be open
             */
            duration?: pulumi.Input<string>;
            /**
             * Kind defines if the window allows or blocks syncs
             */
            kind?: pulumi.Input<string>;
            /**
             * ManualSync enables manual syncs when they would otherwise be blocked
             */
            manualSync?: pulumi.Input<boolean>;
            /**
             * Namespaces contains a list of namespaces that the window will apply to
             */
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Schedule is the time the window will begin, specified in cron format
             */
            schedule?: pulumi.Input<string>;
            /**
             * TimeZone of the sync that will be applied to the schedule
             */
            timeZone?: pulumi.Input<string>;
        }

        /**
         * AppProjectStatus contains status information for AppProject CRs
         */
        export interface AppProjectStatusArgs {
            /**
             * JWTTokensByRole contains a list of JWT tokens issued for a given role
             */
            jwtTokensByRole?: pulumi.Input<{[key: string]: pulumi.Input<inputs.argoproj.v1alpha1.AppProjectStatusJwttokensbyroleArgs>}>;
        }

        /**
         * JWTTokens represents a list of JWT tokens
         */
        export interface AppProjectStatusJwttokensbyroleArgs {
            items?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.AppProjectStatusJwttokensbyroleItemsArgs>[]>;
        }

        /**
         * JWTToken holds the issuedAt and expiresAt values of a token
         */
        export interface AppProjectStatusJwttokensbyroleItemsArgs {
            exp?: pulumi.Input<number>;
            iat: pulumi.Input<number>;
            id?: pulumi.Input<string>;
        }

        /**
         * Operation contains information about a requested or running operation
         */
        export interface ApplicationOperationArgs {
            /**
             * Info is a list of informational items for this operation
             */
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationInfoArgs>[]>;
            /**
             * InitiatedBy contains information about who initiated the operations
             */
            initiatedBy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationInitiatedbyArgs>;
            /**
             * Retry controls the strategy to apply if a sync fails
             */
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationRetryArgs>;
            /**
             * Sync contains parameters for the operation
             */
            sync?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationSyncArgs>;
        }

        export interface ApplicationOperationInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * InitiatedBy contains information about who initiated the operations
         */
        export interface ApplicationOperationInitiatedbyArgs {
            /**
             * Automated is set to true if operation was initiated automatically by the application controller.
             */
            automated?: pulumi.Input<boolean>;
            /**
             * Username contains the name of a user who started operation
             */
            username?: pulumi.Input<string>;
        }

        /**
         * Retry controls the strategy to apply if a sync fails
         */
        export interface ApplicationOperationRetryArgs {
            /**
             * Backoff controls how to backoff on subsequent retries of failed syncs
             */
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationRetryBackoffArgs>;
            /**
             * Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
             */
            limit?: pulumi.Input<number>;
        }

        /**
         * Backoff controls how to backoff on subsequent retries of failed syncs
         */
        export interface ApplicationOperationRetryBackoffArgs {
            /**
             * Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
             */
            duration?: pulumi.Input<string>;
            /**
             * Factor is a factor to multiply the base duration after each failed retry
             */
            factor?: pulumi.Input<number>;
            /**
             * MaxDuration is the maximum amount of time allowed for the backoff strategy
             */
            maxDuration?: pulumi.Input<string>;
        }

        /**
         * Sync contains parameters for the operation
         */
        export interface ApplicationOperationSyncArgs {
            /**
             * DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
             */
            dryRun?: pulumi.Input<boolean>;
            /**
             * Manifests is an optional field that overrides sync source with a local directory for development
             */
            manifests?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Prune specifies to delete resources from the cluster that are no longer tracked in git
             */
            prune?: pulumi.Input<boolean>;
            /**
             * Resources describes which resources shall be part of the sync
             */
            resources?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationSyncResourcesArgs>[]>;
            /**
             * Revision is the revision (Git) or chart version (Helm) which to sync the application to If omitted, will use the revision specified in app spec.
             */
            revision?: pulumi.Input<string>;
            /**
             * Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
             */
            source?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationSyncSourceArgs>;
            /**
             * SyncOptions provide per-sync sync-options, e.g. Validate=false
             */
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * SyncStrategy describes how to perform the sync
             */
            syncStrategy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationSyncSyncstrategyArgs>;
        }

        /**
         * SyncOperationResource contains resources to sync.
         */
        export interface ApplicationOperationSyncResourcesArgs {
            group?: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        /**
         * Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
         */
        export interface ApplicationOperationSyncSourceArgs {
            /**
             * Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
             */
            chart?: pulumi.Input<string>;
            /**
             * Directory holds path/directory specific options
             */
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationSyncSourceDirectoryArgs>;
            /**
             * Helm holds helm specific options
             */
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationSyncSourceHelmArgs>;
            /**
             * Ksonnet holds ksonnet specific options
             */
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationSyncSourceKsonnetArgs>;
            /**
             * Kustomize holds kustomize specific options
             */
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationSyncSourceKustomizeArgs>;
            /**
             * Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
             */
            path?: pulumi.Input<string>;
            /**
             * ConfigManagementPlugin holds config management plugin specific options
             */
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationSyncSourcePluginArgs>;
            /**
             * RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
             */
            repoURL: pulumi.Input<string>;
            /**
             * TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
             */
            targetRevision?: pulumi.Input<string>;
        }

        /**
         * Directory holds path/directory specific options
         */
        export interface ApplicationOperationSyncSourceDirectoryArgs {
            /**
             * Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
             */
            exclude?: pulumi.Input<string>;
            /**
             * Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
             */
            include?: pulumi.Input<string>;
            /**
             * Jsonnet holds options specific to Jsonnet
             */
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationSyncSourceDirectoryJsonnetArgs>;
            /**
             * Recurse specifies whether to scan a directory recursively for manifests
             */
            recurse?: pulumi.Input<boolean>;
        }

        /**
         * Jsonnet holds options specific to Jsonnet
         */
        export interface ApplicationOperationSyncSourceDirectoryJsonnetArgs {
            /**
             * ExtVars is a list of Jsonnet External Variables
             */
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationSyncSourceDirectoryJsonnetExtvarsArgs>[]>;
            /**
             * Additional library search dirs
             */
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * TLAS is a list of Jsonnet Top-level Arguments
             */
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationSyncSourceDirectoryJsonnetTlasArgs>[]>;
        }

        /**
         * JsonnetVar represents a variable to be passed to jsonnet during manifest generation
         */
        export interface ApplicationOperationSyncSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * JsonnetVar represents a variable to be passed to jsonnet during manifest generation
         */
        export interface ApplicationOperationSyncSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * Helm holds helm specific options
         */
        export interface ApplicationOperationSyncSourceHelmArgs {
            /**
             * FileParameters are file parameters to the helm template
             */
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationSyncSourceHelmFileparametersArgs>[]>;
            /**
             * IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
             */
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            /**
             * Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
             */
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationSyncSourceHelmParametersArgs>[]>;
            /**
             * PassCredentials pass credentials to all domains (Helm's --pass-credentials)
             */
            passCredentials?: pulumi.Input<boolean>;
            /**
             * ReleaseName is the Helm release name to use. If omitted it will use the application name
             */
            releaseName?: pulumi.Input<string>;
            /**
             * SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
             */
            skipCrds?: pulumi.Input<boolean>;
            /**
             * ValuesFiles is a list of Helm value files to use when generating a template
             */
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Values specifies Helm values to be passed to helm template, typically defined as a block
             */
            values?: pulumi.Input<string>;
            /**
             * Version is the Helm version to use for templating (either "2" or "3")
             */
            version?: pulumi.Input<string>;
        }

        /**
         * HelmFileParameter is a file parameter that's passed to helm template during manifest generation
         */
        export interface ApplicationOperationSyncSourceHelmFileparametersArgs {
            /**
             * Name is the name of the Helm parameter
             */
            name?: pulumi.Input<string>;
            /**
             * Path is the path to the file containing the values for the Helm parameter
             */
            path?: pulumi.Input<string>;
        }

        /**
         * HelmParameter is a parameter that's passed to helm template during manifest generation
         */
        export interface ApplicationOperationSyncSourceHelmParametersArgs {
            /**
             * ForceString determines whether to tell Helm to interpret booleans and numbers as strings
             */
            forceString?: pulumi.Input<boolean>;
            /**
             * Name is the name of the Helm parameter
             */
            name?: pulumi.Input<string>;
            /**
             * Value is the value for the Helm parameter
             */
            value?: pulumi.Input<string>;
        }

        /**
         * Ksonnet holds ksonnet specific options
         */
        export interface ApplicationOperationSyncSourceKsonnetArgs {
            /**
             * Environment is a ksonnet application environment name
             */
            environment?: pulumi.Input<string>;
            /**
             * Parameters are a list of ksonnet component parameter override values
             */
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationSyncSourceKsonnetParametersArgs>[]>;
        }

        /**
         * KsonnetParameter is a ksonnet component parameter
         */
        export interface ApplicationOperationSyncSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * Kustomize holds kustomize specific options
         */
        export interface ApplicationOperationSyncSourceKustomizeArgs {
            /**
             * CommonAnnotations is a list of additional annotations to add to rendered manifests
             */
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * CommonLabels is a list of additional labels to add to rendered manifests
             */
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
             */
            forceCommonAnnotations?: pulumi.Input<boolean>;
            /**
             * ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
             */
            forceCommonLabels?: pulumi.Input<boolean>;
            /**
             * Images is a list of Kustomize image override specifications
             */
            images?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * NamePrefix is a prefix appended to resources for Kustomize apps
             */
            namePrefix?: pulumi.Input<string>;
            /**
             * NameSuffix is a suffix appended to resources for Kustomize apps
             */
            nameSuffix?: pulumi.Input<string>;
            /**
             * Version controls which version of Kustomize to use for rendering manifests
             */
            version?: pulumi.Input<string>;
        }

        /**
         * ConfigManagementPlugin holds config management plugin specific options
         */
        export interface ApplicationOperationSyncSourcePluginArgs {
            /**
             * Env is a list of environment variable entries
             */
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationSyncSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        /**
         * EnvEntry represents an entry in the application's environment
         */
        export interface ApplicationOperationSyncSourcePluginEnvArgs {
            /**
             * Name is the name of the variable, usually expressed in uppercase
             */
            name: pulumi.Input<string>;
            /**
             * Value is the value of the variable
             */
            value: pulumi.Input<string>;
        }

        /**
         * SyncStrategy describes how to perform the sync
         */
        export interface ApplicationOperationSyncSyncstrategyArgs {
            /**
             * Apply will perform a `kubectl apply` to perform the sync.
             */
            apply?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationSyncSyncstrategyApplyArgs>;
            /**
             * Hook will submit any referenced resources to perform the sync. This is the default strategy
             */
            hook?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationOperationSyncSyncstrategyHookArgs>;
        }

        /**
         * Apply will perform a `kubectl apply` to perform the sync.
         */
        export interface ApplicationOperationSyncSyncstrategyApplyArgs {
            /**
             * Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
             */
            force?: pulumi.Input<boolean>;
        }

        /**
         * Hook will submit any referenced resources to perform the sync. This is the default strategy
         */
        export interface ApplicationOperationSyncSyncstrategyHookArgs {
            /**
             * Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
             */
            force?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecArgs {
            generators: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsArgs>[]>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecSyncpolicyArgs>;
            template: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateArgs>;
        }

        export interface ApplicationSetSpecGeneratorsArgs {
            clusterDecisionResource?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceArgs>;
            clusters?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersArgs>;
            git?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitArgs>;
            list?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListArgs>;
            matrix?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixArgs>;
            merge?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeArgs>;
            pullRequest?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestArgs>;
            scmProvider?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderArgs>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceArgs {
            configMapRef: pulumi.Input<string>;
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceLabelselectorArgs>;
            name?: pulumi.Input<string>;
            requeueAfterSeconds?: pulumi.Input<number>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateArgs>;
            values?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClustersArgs {
            selector?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersSelectorArgs>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateArgs>;
            values?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ApplicationSetSpecGeneratorsClustersSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ApplicationSetSpecGeneratorsClustersSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsClustersTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecGeneratorsClustersTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsGitArgs {
            directories?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitDirectoriesArgs>[]>;
            files?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitFilesArgs>[]>;
            repoURL: pulumi.Input<string>;
            requeueAfterSeconds?: pulumi.Input<number>;
            revision: pulumi.Input<string>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateArgs>;
        }

        export interface ApplicationSetSpecGeneratorsGitDirectoriesArgs {
            exclude?: pulumi.Input<boolean>;
            path: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsGitFilesArgs {
            path: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsGitTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecGeneratorsGitTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsListArgs {
            elements: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateArgs>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsListTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecGeneratorsListTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixArgs {
            generators: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsArgs>[]>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsArgs {
            clusterDecisionResource?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceArgs>;
            clusters?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersArgs>;
            git?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitArgs>;
            list?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListArgs>;
            matrix?: pulumi.Input<{[key: string]: any}>;
            merge?: pulumi.Input<{[key: string]: any}>;
            pullRequest?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestArgs>;
            scmProvider?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceArgs {
            configMapRef: pulumi.Input<string>;
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceLabelselectorArgs>;
            name?: pulumi.Input<string>;
            requeueAfterSeconds?: pulumi.Input<number>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateArgs>;
            values?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersArgs {
            selector?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersSelectorArgs>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateArgs>;
            values?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsClustersTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitArgs {
            directories?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitDirectoriesArgs>[]>;
            files?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitFilesArgs>[]>;
            repoURL: pulumi.Input<string>;
            requeueAfterSeconds?: pulumi.Input<number>;
            revision: pulumi.Input<string>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitDirectoriesArgs {
            exclude?: pulumi.Input<boolean>;
            path: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitFilesArgs {
            path: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsGitTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListArgs {
            elements: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsListTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestArgs {
            github?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestGithubArgs>;
            requeueAfterSeconds?: pulumi.Input<number>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestGithubArgs {
            api?: pulumi.Input<string>;
            labels?: pulumi.Input<pulumi.Input<string>[]>;
            owner: pulumi.Input<string>;
            repo: pulumi.Input<string>;
            tokenRef?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestGithubTokenrefArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestGithubTokenrefArgs {
            key: pulumi.Input<string>;
            secretName: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsPullrequestTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderArgs {
            cloneProtocol?: pulumi.Input<string>;
            filters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderFiltersArgs>[]>;
            github?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderGithubArgs>;
            gitlab?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderGitlabArgs>;
            requeueAfterSeconds?: pulumi.Input<number>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderFiltersArgs {
            branchMatch?: pulumi.Input<string>;
            labelMatch?: pulumi.Input<string>;
            pathsExist?: pulumi.Input<pulumi.Input<string>[]>;
            repositoryMatch?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderGithubArgs {
            allBranches?: pulumi.Input<boolean>;
            api?: pulumi.Input<string>;
            organization: pulumi.Input<string>;
            tokenRef?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderGithubTokenrefArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderGithubTokenrefArgs {
            key: pulumi.Input<string>;
            secretName: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderGitlabArgs {
            allBranches?: pulumi.Input<boolean>;
            api?: pulumi.Input<string>;
            group: pulumi.Input<string>;
            includeSubgroups?: pulumi.Input<boolean>;
            tokenRef?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderGitlabTokenrefArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderGitlabTokenrefArgs {
            key: pulumi.Input<string>;
            secretName: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixGeneratorsScmproviderTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMatrixTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecGeneratorsMatrixTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeArgs {
            generators: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsArgs>[]>;
            mergeKeys: pulumi.Input<pulumi.Input<string>[]>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsArgs {
            clusterDecisionResource?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceArgs>;
            clusters?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersArgs>;
            git?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitArgs>;
            list?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListArgs>;
            matrix?: pulumi.Input<{[key: string]: any}>;
            merge?: pulumi.Input<{[key: string]: any}>;
            pullRequest?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestArgs>;
            scmProvider?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceArgs {
            configMapRef: pulumi.Input<string>;
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceLabelselectorArgs>;
            name?: pulumi.Input<string>;
            requeueAfterSeconds?: pulumi.Input<number>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateArgs>;
            values?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClusterdecisionresourceTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersArgs {
            selector?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersSelectorArgs>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateArgs>;
            values?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsClustersTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitArgs {
            directories?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitDirectoriesArgs>[]>;
            files?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitFilesArgs>[]>;
            repoURL: pulumi.Input<string>;
            requeueAfterSeconds?: pulumi.Input<number>;
            revision: pulumi.Input<string>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitDirectoriesArgs {
            exclude?: pulumi.Input<boolean>;
            path: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitFilesArgs {
            path: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsGitTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListArgs {
            elements: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsListTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestArgs {
            github?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestGithubArgs>;
            requeueAfterSeconds?: pulumi.Input<number>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestGithubArgs {
            api?: pulumi.Input<string>;
            labels?: pulumi.Input<pulumi.Input<string>[]>;
            owner: pulumi.Input<string>;
            repo: pulumi.Input<string>;
            tokenRef?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestGithubTokenrefArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestGithubTokenrefArgs {
            key: pulumi.Input<string>;
            secretName: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsPullrequestTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderArgs {
            cloneProtocol?: pulumi.Input<string>;
            filters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderFiltersArgs>[]>;
            github?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderGithubArgs>;
            gitlab?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderGitlabArgs>;
            requeueAfterSeconds?: pulumi.Input<number>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderFiltersArgs {
            branchMatch?: pulumi.Input<string>;
            labelMatch?: pulumi.Input<string>;
            pathsExist?: pulumi.Input<pulumi.Input<string>[]>;
            repositoryMatch?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderGithubArgs {
            allBranches?: pulumi.Input<boolean>;
            api?: pulumi.Input<string>;
            organization: pulumi.Input<string>;
            tokenRef?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderGithubTokenrefArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderGithubTokenrefArgs {
            key: pulumi.Input<string>;
            secretName: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderGitlabArgs {
            allBranches?: pulumi.Input<boolean>;
            api?: pulumi.Input<string>;
            group: pulumi.Input<string>;
            includeSubgroups?: pulumi.Input<boolean>;
            tokenRef?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderGitlabTokenrefArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderGitlabTokenrefArgs {
            key: pulumi.Input<string>;
            secretName: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecGeneratorsMergeGeneratorsScmproviderTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsMergeTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecGeneratorsMergeTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestArgs {
            github?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestGithubArgs>;
            requeueAfterSeconds?: pulumi.Input<number>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateArgs>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestGithubArgs {
            api?: pulumi.Input<string>;
            labels?: pulumi.Input<pulumi.Input<string>[]>;
            owner: pulumi.Input<string>;
            repo: pulumi.Input<string>;
            tokenRef?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestGithubTokenrefArgs>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestGithubTokenrefArgs {
            key: pulumi.Input<string>;
            secretName: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsPullrequestTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecGeneratorsPullrequestTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderArgs {
            cloneProtocol?: pulumi.Input<string>;
            filters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderFiltersArgs>[]>;
            github?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderGithubArgs>;
            gitlab?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderGitlabArgs>;
            requeueAfterSeconds?: pulumi.Input<number>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateArgs>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderFiltersArgs {
            branchMatch?: pulumi.Input<string>;
            labelMatch?: pulumi.Input<string>;
            pathsExist?: pulumi.Input<pulumi.Input<string>[]>;
            repositoryMatch?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderGithubArgs {
            allBranches?: pulumi.Input<boolean>;
            api?: pulumi.Input<string>;
            organization: pulumi.Input<string>;
            tokenRef?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderGithubTokenrefArgs>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderGithubTokenrefArgs {
            key: pulumi.Input<string>;
            secretName: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderGitlabArgs {
            allBranches?: pulumi.Input<boolean>;
            api?: pulumi.Input<string>;
            group: pulumi.Input<string>;
            includeSubgroups?: pulumi.Input<boolean>;
            tokenRef?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderGitlabTokenrefArgs>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderGitlabTokenrefArgs {
            key: pulumi.Input<string>;
            secretName: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecGeneratorsScmproviderTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecGeneratorsScmproviderTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecSyncpolicyArgs {
            preserveResourcesOnDeletion?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecTemplateArgs {
            metadata: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecArgs>;
        }

        export interface ApplicationSetSpecTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecTemplateSpecArgs {
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecDestinationArgs>;
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecIgnoredifferencesArgs>[]>;
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecInfoArgs>[]>;
            project: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecSourceArgs>;
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecSyncpolicyArgs>;
        }

        export interface ApplicationSetSpecTemplateSpecDestinationArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            server?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecTemplateSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecTemplateSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecTemplateSpecSourceArgs {
            chart?: pulumi.Input<string>;
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecSourceDirectoryArgs>;
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecSourceHelmArgs>;
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecSourceKsonnetArgs>;
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecSourceKustomizeArgs>;
            path?: pulumi.Input<string>;
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecSourcePluginArgs>;
            repoURL: pulumi.Input<string>;
            targetRevision?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecTemplateSpecSourceDirectoryArgs {
            exclude?: pulumi.Input<string>;
            include?: pulumi.Input<string>;
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecSourceDirectoryJsonnetArgs>;
            recurse?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecTemplateSpecSourceDirectoryJsonnetArgs {
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        export interface ApplicationSetSpecTemplateSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecTemplateSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecTemplateSpecSourceHelmArgs {
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecSourceHelmFileparametersArgs>[]>;
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecSourceHelmParametersArgs>[]>;
            passCredentials?: pulumi.Input<boolean>;
            releaseName?: pulumi.Input<string>;
            skipCrds?: pulumi.Input<boolean>;
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            values?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecTemplateSpecSourceHelmFileparametersArgs {
            name?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecTemplateSpecSourceHelmParametersArgs {
            forceString?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecTemplateSpecSourceKsonnetArgs {
            environment?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecSourceKsonnetParametersArgs>[]>;
        }

        export interface ApplicationSetSpecTemplateSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecTemplateSpecSourceKustomizeArgs {
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            forceCommonAnnotations?: pulumi.Input<boolean>;
            forceCommonLabels?: pulumi.Input<boolean>;
            images?: pulumi.Input<pulumi.Input<string>[]>;
            namePrefix?: pulumi.Input<string>;
            nameSuffix?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecTemplateSpecSourcePluginArgs {
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecTemplateSpecSourcePluginEnvArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ApplicationSetSpecTemplateSpecSyncpolicyArgs {
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecSyncpolicyAutomatedArgs>;
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecSyncpolicyRetryArgs>;
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ApplicationSetSpecTemplateSpecSyncpolicyAutomatedArgs {
            allowEmpty?: pulumi.Input<boolean>;
            prune?: pulumi.Input<boolean>;
            selfHeal?: pulumi.Input<boolean>;
        }

        export interface ApplicationSetSpecTemplateSpecSyncpolicyRetryArgs {
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetSpecTemplateSpecSyncpolicyRetryBackoffArgs>;
            limit?: pulumi.Input<number>;
        }

        export interface ApplicationSetSpecTemplateSpecSyncpolicyRetryBackoffArgs {
            duration?: pulumi.Input<string>;
            factor?: pulumi.Input<number>;
            maxDuration?: pulumi.Input<string>;
        }

        export interface ApplicationSetStatusArgs {
            conditions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSetStatusConditionsArgs>[]>;
        }

        export interface ApplicationSetStatusConditionsArgs {
            lastTransitionTime?: pulumi.Input<string>;
            message: pulumi.Input<string>;
            reason: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        /**
         * ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
         */
        export interface ApplicationSpecArgs {
            /**
             * Destination is a reference to the target Kubernetes server and namespace
             */
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSpecDestinationArgs>;
            /**
             * IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
             */
            ignoreDifferences?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSpecIgnoredifferencesArgs>[]>;
            /**
             * Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
             */
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSpecInfoArgs>[]>;
            /**
             * Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
             */
            project: pulumi.Input<string>;
            /**
             * RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
             */
            revisionHistoryLimit?: pulumi.Input<number>;
            /**
             * Source is a reference to the location of the application's manifests or chart
             */
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSpecSourceArgs>;
            /**
             * SyncPolicy controls when and how a sync will be performed
             */
            syncPolicy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSpecSyncpolicyArgs>;
        }

        /**
         * Destination is a reference to the target Kubernetes server and namespace
         */
        export interface ApplicationSpecDestinationArgs {
            /**
             * Name is an alternate way of specifying the target cluster by its symbolic name
             */
            name?: pulumi.Input<string>;
            /**
             * Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
             */
            namespace?: pulumi.Input<string>;
            /**
             * Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
             */
            server?: pulumi.Input<string>;
        }

        /**
         * ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
         */
        export interface ApplicationSpecIgnoredifferencesArgs {
            group?: pulumi.Input<string>;
            jqPathExpressions?: pulumi.Input<pulumi.Input<string>[]>;
            jsonPointers?: pulumi.Input<pulumi.Input<string>[]>;
            kind: pulumi.Input<string>;
            /**
             * ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the desired state defined in the SCM and won't be displayed in diffs
             */
            managedFieldsManagers?: pulumi.Input<pulumi.Input<string>[]>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ApplicationSpecInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * Source is a reference to the location of the application's manifests or chart
         */
        export interface ApplicationSpecSourceArgs {
            /**
             * Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
             */
            chart?: pulumi.Input<string>;
            /**
             * Directory holds path/directory specific options
             */
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSpecSourceDirectoryArgs>;
            /**
             * Helm holds helm specific options
             */
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSpecSourceHelmArgs>;
            /**
             * Ksonnet holds ksonnet specific options
             */
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSpecSourceKsonnetArgs>;
            /**
             * Kustomize holds kustomize specific options
             */
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSpecSourceKustomizeArgs>;
            /**
             * Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
             */
            path?: pulumi.Input<string>;
            /**
             * ConfigManagementPlugin holds config management plugin specific options
             */
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSpecSourcePluginArgs>;
            /**
             * RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
             */
            repoURL: pulumi.Input<string>;
            /**
             * TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
             */
            targetRevision?: pulumi.Input<string>;
        }

        /**
         * Directory holds path/directory specific options
         */
        export interface ApplicationSpecSourceDirectoryArgs {
            /**
             * Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
             */
            exclude?: pulumi.Input<string>;
            /**
             * Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
             */
            include?: pulumi.Input<string>;
            /**
             * Jsonnet holds options specific to Jsonnet
             */
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSpecSourceDirectoryJsonnetArgs>;
            /**
             * Recurse specifies whether to scan a directory recursively for manifests
             */
            recurse?: pulumi.Input<boolean>;
        }

        /**
         * Jsonnet holds options specific to Jsonnet
         */
        export interface ApplicationSpecSourceDirectoryJsonnetArgs {
            /**
             * ExtVars is a list of Jsonnet External Variables
             */
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSpecSourceDirectoryJsonnetExtvarsArgs>[]>;
            /**
             * Additional library search dirs
             */
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * TLAS is a list of Jsonnet Top-level Arguments
             */
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSpecSourceDirectoryJsonnetTlasArgs>[]>;
        }

        /**
         * JsonnetVar represents a variable to be passed to jsonnet during manifest generation
         */
        export interface ApplicationSpecSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * JsonnetVar represents a variable to be passed to jsonnet during manifest generation
         */
        export interface ApplicationSpecSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * Helm holds helm specific options
         */
        export interface ApplicationSpecSourceHelmArgs {
            /**
             * FileParameters are file parameters to the helm template
             */
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSpecSourceHelmFileparametersArgs>[]>;
            /**
             * IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
             */
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            /**
             * Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
             */
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSpecSourceHelmParametersArgs>[]>;
            /**
             * PassCredentials pass credentials to all domains (Helm's --pass-credentials)
             */
            passCredentials?: pulumi.Input<boolean>;
            /**
             * ReleaseName is the Helm release name to use. If omitted it will use the application name
             */
            releaseName?: pulumi.Input<string>;
            /**
             * SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
             */
            skipCrds?: pulumi.Input<boolean>;
            /**
             * ValuesFiles is a list of Helm value files to use when generating a template
             */
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Values specifies Helm values to be passed to helm template, typically defined as a block
             */
            values?: pulumi.Input<string>;
            /**
             * Version is the Helm version to use for templating (either "2" or "3")
             */
            version?: pulumi.Input<string>;
        }

        /**
         * HelmFileParameter is a file parameter that's passed to helm template during manifest generation
         */
        export interface ApplicationSpecSourceHelmFileparametersArgs {
            /**
             * Name is the name of the Helm parameter
             */
            name?: pulumi.Input<string>;
            /**
             * Path is the path to the file containing the values for the Helm parameter
             */
            path?: pulumi.Input<string>;
        }

        /**
         * HelmParameter is a parameter that's passed to helm template during manifest generation
         */
        export interface ApplicationSpecSourceHelmParametersArgs {
            /**
             * ForceString determines whether to tell Helm to interpret booleans and numbers as strings
             */
            forceString?: pulumi.Input<boolean>;
            /**
             * Name is the name of the Helm parameter
             */
            name?: pulumi.Input<string>;
            /**
             * Value is the value for the Helm parameter
             */
            value?: pulumi.Input<string>;
        }

        /**
         * Ksonnet holds ksonnet specific options
         */
        export interface ApplicationSpecSourceKsonnetArgs {
            /**
             * Environment is a ksonnet application environment name
             */
            environment?: pulumi.Input<string>;
            /**
             * Parameters are a list of ksonnet component parameter override values
             */
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSpecSourceKsonnetParametersArgs>[]>;
        }

        /**
         * KsonnetParameter is a ksonnet component parameter
         */
        export interface ApplicationSpecSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * Kustomize holds kustomize specific options
         */
        export interface ApplicationSpecSourceKustomizeArgs {
            /**
             * CommonAnnotations is a list of additional annotations to add to rendered manifests
             */
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * CommonLabels is a list of additional labels to add to rendered manifests
             */
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
             */
            forceCommonAnnotations?: pulumi.Input<boolean>;
            /**
             * ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
             */
            forceCommonLabels?: pulumi.Input<boolean>;
            /**
             * Images is a list of Kustomize image override specifications
             */
            images?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * NamePrefix is a prefix appended to resources for Kustomize apps
             */
            namePrefix?: pulumi.Input<string>;
            /**
             * NameSuffix is a suffix appended to resources for Kustomize apps
             */
            nameSuffix?: pulumi.Input<string>;
            /**
             * Version controls which version of Kustomize to use for rendering manifests
             */
            version?: pulumi.Input<string>;
        }

        /**
         * ConfigManagementPlugin holds config management plugin specific options
         */
        export interface ApplicationSpecSourcePluginArgs {
            /**
             * Env is a list of environment variable entries
             */
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSpecSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        /**
         * EnvEntry represents an entry in the application's environment
         */
        export interface ApplicationSpecSourcePluginEnvArgs {
            /**
             * Name is the name of the variable, usually expressed in uppercase
             */
            name: pulumi.Input<string>;
            /**
             * Value is the value of the variable
             */
            value: pulumi.Input<string>;
        }

        /**
         * SyncPolicy controls when and how a sync will be performed
         */
        export interface ApplicationSpecSyncpolicyArgs {
            /**
             * Automated will keep an application synced to the target revision
             */
            automated?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSpecSyncpolicyAutomatedArgs>;
            /**
             * Retry controls failed sync retry behavior
             */
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSpecSyncpolicyRetryArgs>;
            /**
             * Options allow you to specify whole app sync-options
             */
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Automated will keep an application synced to the target revision
         */
        export interface ApplicationSpecSyncpolicyAutomatedArgs {
            /**
             * AllowEmpty allows apps have zero live resources (default: false)
             */
            allowEmpty?: pulumi.Input<boolean>;
            /**
             * Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)
             */
            prune?: pulumi.Input<boolean>;
            /**
             * SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)
             */
            selfHeal?: pulumi.Input<boolean>;
        }

        /**
         * Retry controls failed sync retry behavior
         */
        export interface ApplicationSpecSyncpolicyRetryArgs {
            /**
             * Backoff controls how to backoff on subsequent retries of failed syncs
             */
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationSpecSyncpolicyRetryBackoffArgs>;
            /**
             * Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
             */
            limit?: pulumi.Input<number>;
        }

        /**
         * Backoff controls how to backoff on subsequent retries of failed syncs
         */
        export interface ApplicationSpecSyncpolicyRetryBackoffArgs {
            /**
             * Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
             */
            duration?: pulumi.Input<string>;
            /**
             * Factor is a factor to multiply the base duration after each failed retry
             */
            factor?: pulumi.Input<number>;
            /**
             * MaxDuration is the maximum amount of time allowed for the backoff strategy
             */
            maxDuration?: pulumi.Input<string>;
        }

        /**
         * ApplicationStatus contains status information for the application
         */
        export interface ApplicationStatusArgs {
            /**
             * Conditions is a list of currently observed application conditions
             */
            conditions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusConditionsArgs>[]>;
            /**
             * Health contains information about the application's current health status
             */
            health?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusHealthArgs>;
            /**
             * History contains information about the application's sync history
             */
            history?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusHistoryArgs>[]>;
            /**
             * ObservedAt indicates when the application state was updated without querying latest git state Deprecated: controller no longer updates ObservedAt field
             */
            observedAt?: pulumi.Input<string>;
            /**
             * OperationState contains information about any ongoing operations, such as a sync
             */
            operationState?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateArgs>;
            /**
             * ReconciledAt indicates when the application state was reconciled using the latest git version
             */
            reconciledAt?: pulumi.Input<string>;
            /**
             * Resources is a list of Kubernetes resources managed by this application
             */
            resources?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusResourcesArgs>[]>;
            /**
             * SourceType specifies the type of this application
             */
            sourceType?: pulumi.Input<string>;
            /**
             * Summary contains a list of URLs and container images used by this application
             */
            summary?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusSummaryArgs>;
            /**
             * Sync contains information about the application's current sync status
             */
            sync?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusSyncArgs>;
        }

        /**
         * ApplicationCondition contains details about an application condition, which is usually an error or warning
         */
        export interface ApplicationStatusConditionsArgs {
            /**
             * LastTransitionTime is the time the condition was last observed
             */
            lastTransitionTime?: pulumi.Input<string>;
            /**
             * Message contains human-readable message indicating details about condition
             */
            message: pulumi.Input<string>;
            /**
             * Type is an application condition type
             */
            type: pulumi.Input<string>;
        }

        /**
         * Health contains information about the application's current health status
         */
        export interface ApplicationStatusHealthArgs {
            /**
             * Message is a human-readable informational message describing the health status
             */
            message?: pulumi.Input<string>;
            /**
             * Status holds the status code of the application or resource
             */
            status?: pulumi.Input<string>;
        }

        /**
         * RevisionHistory contains history information about a previous sync
         */
        export interface ApplicationStatusHistoryArgs {
            /**
             * DeployStartedAt holds the time the sync operation started
             */
            deployStartedAt?: pulumi.Input<string>;
            /**
             * DeployedAt holds the time the sync operation completed
             */
            deployedAt: pulumi.Input<string>;
            /**
             * ID is an auto incrementing identifier of the RevisionHistory
             */
            id: pulumi.Input<number>;
            /**
             * Revision holds the revision the sync was performed against
             */
            revision: pulumi.Input<string>;
            /**
             * Source is a reference to the application source used for the sync operation
             */
            source?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusHistorySourceArgs>;
        }

        /**
         * Source is a reference to the application source used for the sync operation
         */
        export interface ApplicationStatusHistorySourceArgs {
            /**
             * Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
             */
            chart?: pulumi.Input<string>;
            /**
             * Directory holds path/directory specific options
             */
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusHistorySourceDirectoryArgs>;
            /**
             * Helm holds helm specific options
             */
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusHistorySourceHelmArgs>;
            /**
             * Ksonnet holds ksonnet specific options
             */
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusHistorySourceKsonnetArgs>;
            /**
             * Kustomize holds kustomize specific options
             */
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusHistorySourceKustomizeArgs>;
            /**
             * Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
             */
            path?: pulumi.Input<string>;
            /**
             * ConfigManagementPlugin holds config management plugin specific options
             */
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusHistorySourcePluginArgs>;
            /**
             * RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
             */
            repoURL: pulumi.Input<string>;
            /**
             * TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
             */
            targetRevision?: pulumi.Input<string>;
        }

        /**
         * Directory holds path/directory specific options
         */
        export interface ApplicationStatusHistorySourceDirectoryArgs {
            /**
             * Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
             */
            exclude?: pulumi.Input<string>;
            /**
             * Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
             */
            include?: pulumi.Input<string>;
            /**
             * Jsonnet holds options specific to Jsonnet
             */
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusHistorySourceDirectoryJsonnetArgs>;
            /**
             * Recurse specifies whether to scan a directory recursively for manifests
             */
            recurse?: pulumi.Input<boolean>;
        }

        /**
         * Jsonnet holds options specific to Jsonnet
         */
        export interface ApplicationStatusHistorySourceDirectoryJsonnetArgs {
            /**
             * ExtVars is a list of Jsonnet External Variables
             */
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusHistorySourceDirectoryJsonnetExtvarsArgs>[]>;
            /**
             * Additional library search dirs
             */
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * TLAS is a list of Jsonnet Top-level Arguments
             */
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusHistorySourceDirectoryJsonnetTlasArgs>[]>;
        }

        /**
         * JsonnetVar represents a variable to be passed to jsonnet during manifest generation
         */
        export interface ApplicationStatusHistorySourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * JsonnetVar represents a variable to be passed to jsonnet during manifest generation
         */
        export interface ApplicationStatusHistorySourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * Helm holds helm specific options
         */
        export interface ApplicationStatusHistorySourceHelmArgs {
            /**
             * FileParameters are file parameters to the helm template
             */
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusHistorySourceHelmFileparametersArgs>[]>;
            /**
             * IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
             */
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            /**
             * Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
             */
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusHistorySourceHelmParametersArgs>[]>;
            /**
             * PassCredentials pass credentials to all domains (Helm's --pass-credentials)
             */
            passCredentials?: pulumi.Input<boolean>;
            /**
             * ReleaseName is the Helm release name to use. If omitted it will use the application name
             */
            releaseName?: pulumi.Input<string>;
            /**
             * SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
             */
            skipCrds?: pulumi.Input<boolean>;
            /**
             * ValuesFiles is a list of Helm value files to use when generating a template
             */
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Values specifies Helm values to be passed to helm template, typically defined as a block
             */
            values?: pulumi.Input<string>;
            /**
             * Version is the Helm version to use for templating (either "2" or "3")
             */
            version?: pulumi.Input<string>;
        }

        /**
         * HelmFileParameter is a file parameter that's passed to helm template during manifest generation
         */
        export interface ApplicationStatusHistorySourceHelmFileparametersArgs {
            /**
             * Name is the name of the Helm parameter
             */
            name?: pulumi.Input<string>;
            /**
             * Path is the path to the file containing the values for the Helm parameter
             */
            path?: pulumi.Input<string>;
        }

        /**
         * HelmParameter is a parameter that's passed to helm template during manifest generation
         */
        export interface ApplicationStatusHistorySourceHelmParametersArgs {
            /**
             * ForceString determines whether to tell Helm to interpret booleans and numbers as strings
             */
            forceString?: pulumi.Input<boolean>;
            /**
             * Name is the name of the Helm parameter
             */
            name?: pulumi.Input<string>;
            /**
             * Value is the value for the Helm parameter
             */
            value?: pulumi.Input<string>;
        }

        /**
         * Ksonnet holds ksonnet specific options
         */
        export interface ApplicationStatusHistorySourceKsonnetArgs {
            /**
             * Environment is a ksonnet application environment name
             */
            environment?: pulumi.Input<string>;
            /**
             * Parameters are a list of ksonnet component parameter override values
             */
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusHistorySourceKsonnetParametersArgs>[]>;
        }

        /**
         * KsonnetParameter is a ksonnet component parameter
         */
        export interface ApplicationStatusHistorySourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * Kustomize holds kustomize specific options
         */
        export interface ApplicationStatusHistorySourceKustomizeArgs {
            /**
             * CommonAnnotations is a list of additional annotations to add to rendered manifests
             */
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * CommonLabels is a list of additional labels to add to rendered manifests
             */
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
             */
            forceCommonAnnotations?: pulumi.Input<boolean>;
            /**
             * ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
             */
            forceCommonLabels?: pulumi.Input<boolean>;
            /**
             * Images is a list of Kustomize image override specifications
             */
            images?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * NamePrefix is a prefix appended to resources for Kustomize apps
             */
            namePrefix?: pulumi.Input<string>;
            /**
             * NameSuffix is a suffix appended to resources for Kustomize apps
             */
            nameSuffix?: pulumi.Input<string>;
            /**
             * Version controls which version of Kustomize to use for rendering manifests
             */
            version?: pulumi.Input<string>;
        }

        /**
         * ConfigManagementPlugin holds config management plugin specific options
         */
        export interface ApplicationStatusHistorySourcePluginArgs {
            /**
             * Env is a list of environment variable entries
             */
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusHistorySourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        /**
         * EnvEntry represents an entry in the application's environment
         */
        export interface ApplicationStatusHistorySourcePluginEnvArgs {
            /**
             * Name is the name of the variable, usually expressed in uppercase
             */
            name: pulumi.Input<string>;
            /**
             * Value is the value of the variable
             */
            value: pulumi.Input<string>;
        }

        /**
         * OperationState contains information about any ongoing operations, such as a sync
         */
        export interface ApplicationStatusOperationstateArgs {
            /**
             * FinishedAt contains time of operation completion
             */
            finishedAt?: pulumi.Input<string>;
            /**
             * Message holds any pertinent messages when attempting to perform operation (typically errors).
             */
            message?: pulumi.Input<string>;
            /**
             * Operation is the original requested operation
             */
            operation: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationArgs>;
            /**
             * Phase is the current phase of the operation
             */
            phase: pulumi.Input<string>;
            /**
             * RetryCount contains time of operation retries
             */
            retryCount?: pulumi.Input<number>;
            /**
             * StartedAt contains time of operation start
             */
            startedAt: pulumi.Input<string>;
            /**
             * SyncResult is the result of a Sync operation
             */
            syncResult?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateSyncresultArgs>;
        }

        /**
         * Operation is the original requested operation
         */
        export interface ApplicationStatusOperationstateOperationArgs {
            /**
             * Info is a list of informational items for this operation
             */
            info?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationInfoArgs>[]>;
            /**
             * InitiatedBy contains information about who initiated the operations
             */
            initiatedBy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationInitiatedbyArgs>;
            /**
             * Retry controls the strategy to apply if a sync fails
             */
            retry?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationRetryArgs>;
            /**
             * Sync contains parameters for the operation
             */
            sync?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationSyncArgs>;
        }

        export interface ApplicationStatusOperationstateOperationInfoArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * InitiatedBy contains information about who initiated the operations
         */
        export interface ApplicationStatusOperationstateOperationInitiatedbyArgs {
            /**
             * Automated is set to true if operation was initiated automatically by the application controller.
             */
            automated?: pulumi.Input<boolean>;
            /**
             * Username contains the name of a user who started operation
             */
            username?: pulumi.Input<string>;
        }

        /**
         * Retry controls the strategy to apply if a sync fails
         */
        export interface ApplicationStatusOperationstateOperationRetryArgs {
            /**
             * Backoff controls how to backoff on subsequent retries of failed syncs
             */
            backoff?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationRetryBackoffArgs>;
            /**
             * Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
             */
            limit?: pulumi.Input<number>;
        }

        /**
         * Backoff controls how to backoff on subsequent retries of failed syncs
         */
        export interface ApplicationStatusOperationstateOperationRetryBackoffArgs {
            /**
             * Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
             */
            duration?: pulumi.Input<string>;
            /**
             * Factor is a factor to multiply the base duration after each failed retry
             */
            factor?: pulumi.Input<number>;
            /**
             * MaxDuration is the maximum amount of time allowed for the backoff strategy
             */
            maxDuration?: pulumi.Input<string>;
        }

        /**
         * Sync contains parameters for the operation
         */
        export interface ApplicationStatusOperationstateOperationSyncArgs {
            /**
             * DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
             */
            dryRun?: pulumi.Input<boolean>;
            /**
             * Manifests is an optional field that overrides sync source with a local directory for development
             */
            manifests?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Prune specifies to delete resources from the cluster that are no longer tracked in git
             */
            prune?: pulumi.Input<boolean>;
            /**
             * Resources describes which resources shall be part of the sync
             */
            resources?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationSyncResourcesArgs>[]>;
            /**
             * Revision is the revision (Git) or chart version (Helm) which to sync the application to If omitted, will use the revision specified in app spec.
             */
            revision?: pulumi.Input<string>;
            /**
             * Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
             */
            source?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationSyncSourceArgs>;
            /**
             * SyncOptions provide per-sync sync-options, e.g. Validate=false
             */
            syncOptions?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * SyncStrategy describes how to perform the sync
             */
            syncStrategy?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationSyncSyncstrategyArgs>;
        }

        /**
         * SyncOperationResource contains resources to sync.
         */
        export interface ApplicationStatusOperationstateOperationSyncResourcesArgs {
            group?: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        /**
         * Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
         */
        export interface ApplicationStatusOperationstateOperationSyncSourceArgs {
            /**
             * Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
             */
            chart?: pulumi.Input<string>;
            /**
             * Directory holds path/directory specific options
             */
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationSyncSourceDirectoryArgs>;
            /**
             * Helm holds helm specific options
             */
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationSyncSourceHelmArgs>;
            /**
             * Ksonnet holds ksonnet specific options
             */
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationSyncSourceKsonnetArgs>;
            /**
             * Kustomize holds kustomize specific options
             */
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationSyncSourceKustomizeArgs>;
            /**
             * Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
             */
            path?: pulumi.Input<string>;
            /**
             * ConfigManagementPlugin holds config management plugin specific options
             */
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationSyncSourcePluginArgs>;
            /**
             * RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
             */
            repoURL: pulumi.Input<string>;
            /**
             * TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
             */
            targetRevision?: pulumi.Input<string>;
        }

        /**
         * Directory holds path/directory specific options
         */
        export interface ApplicationStatusOperationstateOperationSyncSourceDirectoryArgs {
            /**
             * Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
             */
            exclude?: pulumi.Input<string>;
            /**
             * Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
             */
            include?: pulumi.Input<string>;
            /**
             * Jsonnet holds options specific to Jsonnet
             */
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationSyncSourceDirectoryJsonnetArgs>;
            /**
             * Recurse specifies whether to scan a directory recursively for manifests
             */
            recurse?: pulumi.Input<boolean>;
        }

        /**
         * Jsonnet holds options specific to Jsonnet
         */
        export interface ApplicationStatusOperationstateOperationSyncSourceDirectoryJsonnetArgs {
            /**
             * ExtVars is a list of Jsonnet External Variables
             */
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationSyncSourceDirectoryJsonnetExtvarsArgs>[]>;
            /**
             * Additional library search dirs
             */
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * TLAS is a list of Jsonnet Top-level Arguments
             */
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationSyncSourceDirectoryJsonnetTlasArgs>[]>;
        }

        /**
         * JsonnetVar represents a variable to be passed to jsonnet during manifest generation
         */
        export interface ApplicationStatusOperationstateOperationSyncSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * JsonnetVar represents a variable to be passed to jsonnet during manifest generation
         */
        export interface ApplicationStatusOperationstateOperationSyncSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * Helm holds helm specific options
         */
        export interface ApplicationStatusOperationstateOperationSyncSourceHelmArgs {
            /**
             * FileParameters are file parameters to the helm template
             */
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationSyncSourceHelmFileparametersArgs>[]>;
            /**
             * IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
             */
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            /**
             * Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
             */
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationSyncSourceHelmParametersArgs>[]>;
            /**
             * PassCredentials pass credentials to all domains (Helm's --pass-credentials)
             */
            passCredentials?: pulumi.Input<boolean>;
            /**
             * ReleaseName is the Helm release name to use. If omitted it will use the application name
             */
            releaseName?: pulumi.Input<string>;
            /**
             * SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
             */
            skipCrds?: pulumi.Input<boolean>;
            /**
             * ValuesFiles is a list of Helm value files to use when generating a template
             */
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Values specifies Helm values to be passed to helm template, typically defined as a block
             */
            values?: pulumi.Input<string>;
            /**
             * Version is the Helm version to use for templating (either "2" or "3")
             */
            version?: pulumi.Input<string>;
        }

        /**
         * HelmFileParameter is a file parameter that's passed to helm template during manifest generation
         */
        export interface ApplicationStatusOperationstateOperationSyncSourceHelmFileparametersArgs {
            /**
             * Name is the name of the Helm parameter
             */
            name?: pulumi.Input<string>;
            /**
             * Path is the path to the file containing the values for the Helm parameter
             */
            path?: pulumi.Input<string>;
        }

        /**
         * HelmParameter is a parameter that's passed to helm template during manifest generation
         */
        export interface ApplicationStatusOperationstateOperationSyncSourceHelmParametersArgs {
            /**
             * ForceString determines whether to tell Helm to interpret booleans and numbers as strings
             */
            forceString?: pulumi.Input<boolean>;
            /**
             * Name is the name of the Helm parameter
             */
            name?: pulumi.Input<string>;
            /**
             * Value is the value for the Helm parameter
             */
            value?: pulumi.Input<string>;
        }

        /**
         * Ksonnet holds ksonnet specific options
         */
        export interface ApplicationStatusOperationstateOperationSyncSourceKsonnetArgs {
            /**
             * Environment is a ksonnet application environment name
             */
            environment?: pulumi.Input<string>;
            /**
             * Parameters are a list of ksonnet component parameter override values
             */
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationSyncSourceKsonnetParametersArgs>[]>;
        }

        /**
         * KsonnetParameter is a ksonnet component parameter
         */
        export interface ApplicationStatusOperationstateOperationSyncSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * Kustomize holds kustomize specific options
         */
        export interface ApplicationStatusOperationstateOperationSyncSourceKustomizeArgs {
            /**
             * CommonAnnotations is a list of additional annotations to add to rendered manifests
             */
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * CommonLabels is a list of additional labels to add to rendered manifests
             */
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
             */
            forceCommonAnnotations?: pulumi.Input<boolean>;
            /**
             * ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
             */
            forceCommonLabels?: pulumi.Input<boolean>;
            /**
             * Images is a list of Kustomize image override specifications
             */
            images?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * NamePrefix is a prefix appended to resources for Kustomize apps
             */
            namePrefix?: pulumi.Input<string>;
            /**
             * NameSuffix is a suffix appended to resources for Kustomize apps
             */
            nameSuffix?: pulumi.Input<string>;
            /**
             * Version controls which version of Kustomize to use for rendering manifests
             */
            version?: pulumi.Input<string>;
        }

        /**
         * ConfigManagementPlugin holds config management plugin specific options
         */
        export interface ApplicationStatusOperationstateOperationSyncSourcePluginArgs {
            /**
             * Env is a list of environment variable entries
             */
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationSyncSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        /**
         * EnvEntry represents an entry in the application's environment
         */
        export interface ApplicationStatusOperationstateOperationSyncSourcePluginEnvArgs {
            /**
             * Name is the name of the variable, usually expressed in uppercase
             */
            name: pulumi.Input<string>;
            /**
             * Value is the value of the variable
             */
            value: pulumi.Input<string>;
        }

        /**
         * SyncStrategy describes how to perform the sync
         */
        export interface ApplicationStatusOperationstateOperationSyncSyncstrategyArgs {
            /**
             * Apply will perform a `kubectl apply` to perform the sync.
             */
            apply?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationSyncSyncstrategyApplyArgs>;
            /**
             * Hook will submit any referenced resources to perform the sync. This is the default strategy
             */
            hook?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateOperationSyncSyncstrategyHookArgs>;
        }

        /**
         * Apply will perform a `kubectl apply` to perform the sync.
         */
        export interface ApplicationStatusOperationstateOperationSyncSyncstrategyApplyArgs {
            /**
             * Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
             */
            force?: pulumi.Input<boolean>;
        }

        /**
         * Hook will submit any referenced resources to perform the sync. This is the default strategy
         */
        export interface ApplicationStatusOperationstateOperationSyncSyncstrategyHookArgs {
            /**
             * Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
             */
            force?: pulumi.Input<boolean>;
        }

        /**
         * SyncResult is the result of a Sync operation
         */
        export interface ApplicationStatusOperationstateSyncresultArgs {
            /**
             * Resources contains a list of sync result items for each individual resource in a sync operation
             */
            resources?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateSyncresultResourcesArgs>[]>;
            /**
             * Revision holds the revision this sync operation was performed to
             */
            revision: pulumi.Input<string>;
            /**
             * Source records the application source information of the sync, used for comparing auto-sync
             */
            source?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateSyncresultSourceArgs>;
        }

        /**
         * ResourceResult holds the operation result details of a specific resource
         */
        export interface ApplicationStatusOperationstateSyncresultResourcesArgs {
            /**
             * Group specifies the API group of the resource
             */
            group: pulumi.Input<string>;
            /**
             * HookPhase contains the state of any operation associated with this resource OR hook This can also contain values for non-hook resources.
             */
            hookPhase?: pulumi.Input<string>;
            /**
             * HookType specifies the type of the hook. Empty for non-hook resources
             */
            hookType?: pulumi.Input<string>;
            /**
             * Kind specifies the API kind of the resource
             */
            kind: pulumi.Input<string>;
            /**
             * Message contains an informational or error message for the last sync OR operation
             */
            message?: pulumi.Input<string>;
            /**
             * Name specifies the name of the resource
             */
            name: pulumi.Input<string>;
            /**
             * Namespace specifies the target namespace of the resource
             */
            namespace: pulumi.Input<string>;
            /**
             * Status holds the final result of the sync. Will be empty if the resources is yet to be applied/pruned and is always zero-value for hooks
             */
            status?: pulumi.Input<string>;
            /**
             * SyncPhase indicates the particular phase of the sync that this result was acquired in
             */
            syncPhase?: pulumi.Input<string>;
            /**
             * Version specifies the API version of the resource
             */
            version: pulumi.Input<string>;
        }

        /**
         * Source records the application source information of the sync, used for comparing auto-sync
         */
        export interface ApplicationStatusOperationstateSyncresultSourceArgs {
            /**
             * Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
             */
            chart?: pulumi.Input<string>;
            /**
             * Directory holds path/directory specific options
             */
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateSyncresultSourceDirectoryArgs>;
            /**
             * Helm holds helm specific options
             */
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateSyncresultSourceHelmArgs>;
            /**
             * Ksonnet holds ksonnet specific options
             */
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateSyncresultSourceKsonnetArgs>;
            /**
             * Kustomize holds kustomize specific options
             */
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateSyncresultSourceKustomizeArgs>;
            /**
             * Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
             */
            path?: pulumi.Input<string>;
            /**
             * ConfigManagementPlugin holds config management plugin specific options
             */
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateSyncresultSourcePluginArgs>;
            /**
             * RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
             */
            repoURL: pulumi.Input<string>;
            /**
             * TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
             */
            targetRevision?: pulumi.Input<string>;
        }

        /**
         * Directory holds path/directory specific options
         */
        export interface ApplicationStatusOperationstateSyncresultSourceDirectoryArgs {
            /**
             * Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
             */
            exclude?: pulumi.Input<string>;
            /**
             * Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
             */
            include?: pulumi.Input<string>;
            /**
             * Jsonnet holds options specific to Jsonnet
             */
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateSyncresultSourceDirectoryJsonnetArgs>;
            /**
             * Recurse specifies whether to scan a directory recursively for manifests
             */
            recurse?: pulumi.Input<boolean>;
        }

        /**
         * Jsonnet holds options specific to Jsonnet
         */
        export interface ApplicationStatusOperationstateSyncresultSourceDirectoryJsonnetArgs {
            /**
             * ExtVars is a list of Jsonnet External Variables
             */
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateSyncresultSourceDirectoryJsonnetExtvarsArgs>[]>;
            /**
             * Additional library search dirs
             */
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * TLAS is a list of Jsonnet Top-level Arguments
             */
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateSyncresultSourceDirectoryJsonnetTlasArgs>[]>;
        }

        /**
         * JsonnetVar represents a variable to be passed to jsonnet during manifest generation
         */
        export interface ApplicationStatusOperationstateSyncresultSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * JsonnetVar represents a variable to be passed to jsonnet during manifest generation
         */
        export interface ApplicationStatusOperationstateSyncresultSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * Helm holds helm specific options
         */
        export interface ApplicationStatusOperationstateSyncresultSourceHelmArgs {
            /**
             * FileParameters are file parameters to the helm template
             */
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateSyncresultSourceHelmFileparametersArgs>[]>;
            /**
             * IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
             */
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            /**
             * Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
             */
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateSyncresultSourceHelmParametersArgs>[]>;
            /**
             * PassCredentials pass credentials to all domains (Helm's --pass-credentials)
             */
            passCredentials?: pulumi.Input<boolean>;
            /**
             * ReleaseName is the Helm release name to use. If omitted it will use the application name
             */
            releaseName?: pulumi.Input<string>;
            /**
             * SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
             */
            skipCrds?: pulumi.Input<boolean>;
            /**
             * ValuesFiles is a list of Helm value files to use when generating a template
             */
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Values specifies Helm values to be passed to helm template, typically defined as a block
             */
            values?: pulumi.Input<string>;
            /**
             * Version is the Helm version to use for templating (either "2" or "3")
             */
            version?: pulumi.Input<string>;
        }

        /**
         * HelmFileParameter is a file parameter that's passed to helm template during manifest generation
         */
        export interface ApplicationStatusOperationstateSyncresultSourceHelmFileparametersArgs {
            /**
             * Name is the name of the Helm parameter
             */
            name?: pulumi.Input<string>;
            /**
             * Path is the path to the file containing the values for the Helm parameter
             */
            path?: pulumi.Input<string>;
        }

        /**
         * HelmParameter is a parameter that's passed to helm template during manifest generation
         */
        export interface ApplicationStatusOperationstateSyncresultSourceHelmParametersArgs {
            /**
             * ForceString determines whether to tell Helm to interpret booleans and numbers as strings
             */
            forceString?: pulumi.Input<boolean>;
            /**
             * Name is the name of the Helm parameter
             */
            name?: pulumi.Input<string>;
            /**
             * Value is the value for the Helm parameter
             */
            value?: pulumi.Input<string>;
        }

        /**
         * Ksonnet holds ksonnet specific options
         */
        export interface ApplicationStatusOperationstateSyncresultSourceKsonnetArgs {
            /**
             * Environment is a ksonnet application environment name
             */
            environment?: pulumi.Input<string>;
            /**
             * Parameters are a list of ksonnet component parameter override values
             */
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateSyncresultSourceKsonnetParametersArgs>[]>;
        }

        /**
         * KsonnetParameter is a ksonnet component parameter
         */
        export interface ApplicationStatusOperationstateSyncresultSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * Kustomize holds kustomize specific options
         */
        export interface ApplicationStatusOperationstateSyncresultSourceKustomizeArgs {
            /**
             * CommonAnnotations is a list of additional annotations to add to rendered manifests
             */
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * CommonLabels is a list of additional labels to add to rendered manifests
             */
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
             */
            forceCommonAnnotations?: pulumi.Input<boolean>;
            /**
             * ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
             */
            forceCommonLabels?: pulumi.Input<boolean>;
            /**
             * Images is a list of Kustomize image override specifications
             */
            images?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * NamePrefix is a prefix appended to resources for Kustomize apps
             */
            namePrefix?: pulumi.Input<string>;
            /**
             * NameSuffix is a suffix appended to resources for Kustomize apps
             */
            nameSuffix?: pulumi.Input<string>;
            /**
             * Version controls which version of Kustomize to use for rendering manifests
             */
            version?: pulumi.Input<string>;
        }

        /**
         * ConfigManagementPlugin holds config management plugin specific options
         */
        export interface ApplicationStatusOperationstateSyncresultSourcePluginArgs {
            /**
             * Env is a list of environment variable entries
             */
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusOperationstateSyncresultSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        /**
         * EnvEntry represents an entry in the application's environment
         */
        export interface ApplicationStatusOperationstateSyncresultSourcePluginEnvArgs {
            /**
             * Name is the name of the variable, usually expressed in uppercase
             */
            name: pulumi.Input<string>;
            /**
             * Value is the value of the variable
             */
            value: pulumi.Input<string>;
        }

        /**
         * ResourceStatus holds the current sync and health status of a resource TODO: describe members of this type
         */
        export interface ApplicationStatusResourcesArgs {
            group?: pulumi.Input<string>;
            /**
             * HealthStatus contains information about the currently observed health state of an application or resource
             */
            health?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusResourcesHealthArgs>;
            hook?: pulumi.Input<boolean>;
            kind?: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            requiresPruning?: pulumi.Input<boolean>;
            /**
             * SyncStatusCode is a type which represents possible comparison results
             */
            status?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        /**
         * HealthStatus contains information about the currently observed health state of an application or resource
         */
        export interface ApplicationStatusResourcesHealthArgs {
            /**
             * Message is a human-readable informational message describing the health status
             */
            message?: pulumi.Input<string>;
            /**
             * Status holds the status code of the application or resource
             */
            status?: pulumi.Input<string>;
        }

        /**
         * Summary contains a list of URLs and container images used by this application
         */
        export interface ApplicationStatusSummaryArgs {
            /**
             * ExternalURLs holds all external URLs of application child resources.
             */
            externalURLs?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Images holds all images of application child resources.
             */
            images?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Sync contains information about the application's current sync status
         */
        export interface ApplicationStatusSyncArgs {
            /**
             * ComparedTo contains information about what has been compared
             */
            comparedTo?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusSyncComparedtoArgs>;
            /**
             * Revision contains information about the revision the comparison has been performed to
             */
            revision?: pulumi.Input<string>;
            /**
             * Status is the sync state of the comparison
             */
            status: pulumi.Input<string>;
        }

        /**
         * ComparedTo contains information about what has been compared
         */
        export interface ApplicationStatusSyncComparedtoArgs {
            /**
             * Destination is a reference to the application's destination used for comparison
             */
            destination: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusSyncComparedtoDestinationArgs>;
            /**
             * Source is a reference to the application's source used for comparison
             */
            source: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusSyncComparedtoSourceArgs>;
        }

        /**
         * Destination is a reference to the application's destination used for comparison
         */
        export interface ApplicationStatusSyncComparedtoDestinationArgs {
            /**
             * Name is an alternate way of specifying the target cluster by its symbolic name
             */
            name?: pulumi.Input<string>;
            /**
             * Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
             */
            namespace?: pulumi.Input<string>;
            /**
             * Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
             */
            server?: pulumi.Input<string>;
        }

        /**
         * Source is a reference to the application's source used for comparison
         */
        export interface ApplicationStatusSyncComparedtoSourceArgs {
            /**
             * Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
             */
            chart?: pulumi.Input<string>;
            /**
             * Directory holds path/directory specific options
             */
            directory?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusSyncComparedtoSourceDirectoryArgs>;
            /**
             * Helm holds helm specific options
             */
            helm?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusSyncComparedtoSourceHelmArgs>;
            /**
             * Ksonnet holds ksonnet specific options
             */
            ksonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusSyncComparedtoSourceKsonnetArgs>;
            /**
             * Kustomize holds kustomize specific options
             */
            kustomize?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusSyncComparedtoSourceKustomizeArgs>;
            /**
             * Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
             */
            path?: pulumi.Input<string>;
            /**
             * ConfigManagementPlugin holds config management plugin specific options
             */
            plugin?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusSyncComparedtoSourcePluginArgs>;
            /**
             * RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
             */
            repoURL: pulumi.Input<string>;
            /**
             * TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
             */
            targetRevision?: pulumi.Input<string>;
        }

        /**
         * Directory holds path/directory specific options
         */
        export interface ApplicationStatusSyncComparedtoSourceDirectoryArgs {
            /**
             * Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
             */
            exclude?: pulumi.Input<string>;
            /**
             * Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
             */
            include?: pulumi.Input<string>;
            /**
             * Jsonnet holds options specific to Jsonnet
             */
            jsonnet?: pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusSyncComparedtoSourceDirectoryJsonnetArgs>;
            /**
             * Recurse specifies whether to scan a directory recursively for manifests
             */
            recurse?: pulumi.Input<boolean>;
        }

        /**
         * Jsonnet holds options specific to Jsonnet
         */
        export interface ApplicationStatusSyncComparedtoSourceDirectoryJsonnetArgs {
            /**
             * ExtVars is a list of Jsonnet External Variables
             */
            extVars?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusSyncComparedtoSourceDirectoryJsonnetExtvarsArgs>[]>;
            /**
             * Additional library search dirs
             */
            libs?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * TLAS is a list of Jsonnet Top-level Arguments
             */
            tlas?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusSyncComparedtoSourceDirectoryJsonnetTlasArgs>[]>;
        }

        /**
         * JsonnetVar represents a variable to be passed to jsonnet during manifest generation
         */
        export interface ApplicationStatusSyncComparedtoSourceDirectoryJsonnetExtvarsArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * JsonnetVar represents a variable to be passed to jsonnet during manifest generation
         */
        export interface ApplicationStatusSyncComparedtoSourceDirectoryJsonnetTlasArgs {
            code?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * Helm holds helm specific options
         */
        export interface ApplicationStatusSyncComparedtoSourceHelmArgs {
            /**
             * FileParameters are file parameters to the helm template
             */
            fileParameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusSyncComparedtoSourceHelmFileparametersArgs>[]>;
            /**
             * IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
             */
            ignoreMissingValueFiles?: pulumi.Input<boolean>;
            /**
             * Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
             */
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusSyncComparedtoSourceHelmParametersArgs>[]>;
            /**
             * PassCredentials pass credentials to all domains (Helm's --pass-credentials)
             */
            passCredentials?: pulumi.Input<boolean>;
            /**
             * ReleaseName is the Helm release name to use. If omitted it will use the application name
             */
            releaseName?: pulumi.Input<string>;
            /**
             * SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
             */
            skipCrds?: pulumi.Input<boolean>;
            /**
             * ValuesFiles is a list of Helm value files to use when generating a template
             */
            valueFiles?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Values specifies Helm values to be passed to helm template, typically defined as a block
             */
            values?: pulumi.Input<string>;
            /**
             * Version is the Helm version to use for templating (either "2" or "3")
             */
            version?: pulumi.Input<string>;
        }

        /**
         * HelmFileParameter is a file parameter that's passed to helm template during manifest generation
         */
        export interface ApplicationStatusSyncComparedtoSourceHelmFileparametersArgs {
            /**
             * Name is the name of the Helm parameter
             */
            name?: pulumi.Input<string>;
            /**
             * Path is the path to the file containing the values for the Helm parameter
             */
            path?: pulumi.Input<string>;
        }

        /**
         * HelmParameter is a parameter that's passed to helm template during manifest generation
         */
        export interface ApplicationStatusSyncComparedtoSourceHelmParametersArgs {
            /**
             * ForceString determines whether to tell Helm to interpret booleans and numbers as strings
             */
            forceString?: pulumi.Input<boolean>;
            /**
             * Name is the name of the Helm parameter
             */
            name?: pulumi.Input<string>;
            /**
             * Value is the value for the Helm parameter
             */
            value?: pulumi.Input<string>;
        }

        /**
         * Ksonnet holds ksonnet specific options
         */
        export interface ApplicationStatusSyncComparedtoSourceKsonnetArgs {
            /**
             * Environment is a ksonnet application environment name
             */
            environment?: pulumi.Input<string>;
            /**
             * Parameters are a list of ksonnet component parameter override values
             */
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusSyncComparedtoSourceKsonnetParametersArgs>[]>;
        }

        /**
         * KsonnetParameter is a ksonnet component parameter
         */
        export interface ApplicationStatusSyncComparedtoSourceKsonnetParametersArgs {
            component?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        /**
         * Kustomize holds kustomize specific options
         */
        export interface ApplicationStatusSyncComparedtoSourceKustomizeArgs {
            /**
             * CommonAnnotations is a list of additional annotations to add to rendered manifests
             */
            commonAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * CommonLabels is a list of additional labels to add to rendered manifests
             */
            commonLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
             */
            forceCommonAnnotations?: pulumi.Input<boolean>;
            /**
             * ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
             */
            forceCommonLabels?: pulumi.Input<boolean>;
            /**
             * Images is a list of Kustomize image override specifications
             */
            images?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * NamePrefix is a prefix appended to resources for Kustomize apps
             */
            namePrefix?: pulumi.Input<string>;
            /**
             * NameSuffix is a suffix appended to resources for Kustomize apps
             */
            nameSuffix?: pulumi.Input<string>;
            /**
             * Version controls which version of Kustomize to use for rendering manifests
             */
            version?: pulumi.Input<string>;
        }

        /**
         * ConfigManagementPlugin holds config management plugin specific options
         */
        export interface ApplicationStatusSyncComparedtoSourcePluginArgs {
            /**
             * Env is a list of environment variable entries
             */
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ApplicationStatusSyncComparedtoSourcePluginEnvArgs>[]>;
            name?: pulumi.Input<string>;
        }

        /**
         * EnvEntry represents an entry in the application's environment
         */
        export interface ApplicationStatusSyncComparedtoSourcePluginEnvArgs {
            /**
             * Name is the name of the variable, usually expressed in uppercase
             */
            name: pulumi.Input<string>;
            /**
             * Value is the value of the variable
             */
            value: pulumi.Input<string>;
        }

        /**
         * ArgoCDExtensionSpec defines the desired state of ArgoCDExtension
         */
        export interface ArgoCDExtensionSpecArgs {
            /**
             * Sources specifies where the extension should come from
             */
            sources: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ArgoCDExtensionSpecSourcesArgs>[]>;
        }

        /**
         * ExtensionSource specifies where the extension should be sourced from
         */
        export interface ArgoCDExtensionSpecSourcesArgs {
            /**
             * Git is specified if the extension should be sourced from a git repository
             */
            git?: pulumi.Input<inputs.argoproj.v1alpha1.ArgoCDExtensionSpecSourcesGitArgs>;
            /**
             * Web is specified if the extension should be sourced from a web file
             */
            web?: pulumi.Input<inputs.argoproj.v1alpha1.ArgoCDExtensionSpecSourcesWebArgs>;
        }

        /**
         * Git is specified if the extension should be sourced from a git repository
         */
        export interface ArgoCDExtensionSpecSourcesGitArgs {
            /**
             * Revision specifies the revision of the Repository to fetch
             */
            revision?: pulumi.Input<string>;
            /**
             * URL specifies the Git repository URL to fetch
             */
            url?: pulumi.Input<string>;
        }

        /**
         * Web is specified if the extension should be sourced from a web file
         */
        export interface ArgoCDExtensionSpecSourcesWebArgs {
            /**
             * URK specifies the remote file URL
             */
            url?: pulumi.Input<string>;
        }

        /**
         * ArgoCDExtensionStatus defines the observed state of ArgoCDExtension
         */
        export interface ArgoCDExtensionStatusArgs {
            conditions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ArgoCDExtensionStatusConditionsArgs>[]>;
        }

        export interface ArgoCDExtensionStatusConditionsArgs {
            /**
             * Message contains human-readable message indicating details about condition
             */
            message: pulumi.Input<string>;
            /**
             * Boolean status describing if the condition is currently true
             */
            status: pulumi.Input<string>;
            /**
             * Type is an ArgoCDExtension condition type
             */
            type: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecArgs {
            args?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecArgsArgs>[]>;
            dryRun?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecDryrunArgs>[]>;
            measurementRetention?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMeasurementretentionArgs>[]>;
            metrics: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsArgs>[]>;
        }

        export interface ClusterAnalysisTemplateSpecArgsArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecArgsValuefromArgs>;
        }

        export interface ClusterAnalysisTemplateSpecArgsValuefromArgs {
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecArgsValuefromFieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecArgsValuefromSecretkeyrefArgs>;
        }

        export interface ClusterAnalysisTemplateSpecArgsValuefromFieldrefArgs {
            fieldPath: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecArgsValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecDryrunArgs {
            metricName: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMeasurementretentionArgs {
            limit: pulumi.Input<number>;
            metricName: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsArgs {
            consecutiveErrorLimit?: pulumi.Input<number | string>;
            count?: pulumi.Input<number | string>;
            failureCondition?: pulumi.Input<string>;
            failureLimit?: pulumi.Input<number | string>;
            inconclusiveLimit?: pulumi.Input<number | string>;
            initialDelay?: pulumi.Input<string>;
            interval?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            provider: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderArgs>;
            successCondition?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderArgs {
            cloudWatch?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderCloudwatchArgs>;
            datadog?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderDatadogArgs>;
            graphite?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderGraphiteArgs>;
            influxdb?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderInfluxdbArgs>;
            job?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobArgs>;
            kayenta?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderKayentaArgs>;
            newRelic?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderNewrelicArgs>;
            prometheus?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderPrometheusArgs>;
            wavefront?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderWavefrontArgs>;
            web?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderWebArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderCloudwatchArgs {
            interval?: pulumi.Input<string>;
            metricDataQueries: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderCloudwatchMetricdataqueriesArgs>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderCloudwatchMetricdataqueriesArgs {
            expression?: pulumi.Input<string>;
            id?: pulumi.Input<string>;
            label?: pulumi.Input<string>;
            metricStat?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderCloudwatchMetricdataqueriesMetricstatArgs>;
            period?: pulumi.Input<number | string>;
            returnData?: pulumi.Input<boolean>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderCloudwatchMetricdataqueriesMetricstatArgs {
            metric?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderCloudwatchMetricdataqueriesMetricstatMetricArgs>;
            period?: pulumi.Input<number | string>;
            stat?: pulumi.Input<string>;
            unit?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderCloudwatchMetricdataqueriesMetricstatMetricArgs {
            dimensions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderCloudwatchMetricdataqueriesMetricstatMetricDimensionsArgs>[]>;
            metricName?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderCloudwatchMetricdataqueriesMetricstatMetricDimensionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderDatadogArgs {
            interval?: pulumi.Input<string>;
            query: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderGraphiteArgs {
            address?: pulumi.Input<string>;
            query?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderInfluxdbArgs {
            profile?: pulumi.Input<string>;
            query?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobArgs {
            metadata?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobMetadataArgs>;
            spec: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecArgs {
            activeDeadlineSeconds?: pulumi.Input<number>;
            backoffLimit?: pulumi.Input<number>;
            completionMode?: pulumi.Input<string>;
            completions?: pulumi.Input<number>;
            manualSelector?: pulumi.Input<boolean>;
            parallelism?: pulumi.Input<number>;
            selector?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecSelectorArgs>;
            suspend?: pulumi.Input<boolean>;
            template: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateArgs>;
            ttlSecondsAfterFinished?: pulumi.Input<number>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateArgs {
            metadata?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateMetadataArgs>;
            spec?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecArgs {
            activeDeadlineSeconds?: pulumi.Input<number>;
            affinity?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityArgs>;
            automountServiceAccountToken?: pulumi.Input<boolean>;
            containers: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersArgs>[]>;
            dnsConfig?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecDnsconfigArgs>;
            dnsPolicy?: pulumi.Input<string>;
            enableServiceLinks?: pulumi.Input<boolean>;
            ephemeralContainers?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersArgs>[]>;
            hostAliases?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecHostaliasesArgs>[]>;
            hostIPC?: pulumi.Input<boolean>;
            hostNetwork?: pulumi.Input<boolean>;
            hostPID?: pulumi.Input<boolean>;
            hostname?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecImagepullsecretsArgs>[]>;
            initContainers?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersArgs>[]>;
            nodeName?: pulumi.Input<string>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            os?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecOsArgs>;
            overhead?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            preemptionPolicy?: pulumi.Input<string>;
            priority?: pulumi.Input<number>;
            priorityClassName?: pulumi.Input<string>;
            readinessGates?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecReadinessgatesArgs>[]>;
            restartPolicy?: pulumi.Input<string>;
            runtimeClassName?: pulumi.Input<string>;
            schedulerName?: pulumi.Input<string>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecSecuritycontextArgs>;
            serviceAccount?: pulumi.Input<string>;
            serviceAccountName?: pulumi.Input<string>;
            setHostnameAsFQDN?: pulumi.Input<boolean>;
            shareProcessNamespace?: pulumi.Input<boolean>;
            subdomain?: pulumi.Input<string>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecTolerationsArgs>[]>;
            topologySpreadConstraints?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecTopologyspreadconstraintsArgs>[]>;
            volumes?: pulumi.Input<{[key: string]: any}>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaceSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaceSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaceSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaceSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvfromSecretrefArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * clusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgsProvideDefaults sets the appropriate defaults for ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgs
         */
        export function clusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgsProvideDefaults(val: ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgs): ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: any}>;
            requests?: pulumi.Input<{[key: string]: any}>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            hostProcess?: pulumi.Input<boolean>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecContainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecDnsconfigArgs {
            nameservers?: pulumi.Input<pulumi.Input<string>[]>;
            options?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecDnsconfigOptionsArgs>[]>;
            searches?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecDnsconfigOptionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            targetContainerName?: pulumi.Input<string>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvfromSecretrefArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * clusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgsProvideDefaults sets the appropriate defaults for ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgs
         */
        export function clusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgsProvideDefaults(val: ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgs): ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: any}>;
            requests?: pulumi.Input<{[key: string]: any}>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            hostProcess?: pulumi.Input<boolean>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecEphemeralcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecHostaliasesArgs {
            hostnames?: pulumi.Input<pulumi.Input<string>[]>;
            ip?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvfromSecretrefArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * clusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgsProvideDefaults sets the appropriate defaults for ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgs
         */
        export function clusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgsProvideDefaults(val: ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgs): ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: any}>;
            requests?: pulumi.Input<{[key: string]: any}>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            hostProcess?: pulumi.Input<boolean>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecInitcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecOsArgs {
            name: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecReadinessgatesArgs {
            conditionType: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecSecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecSecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecSecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecSecuritycontextWindowsoptionsArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecSecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            hostProcess?: pulumi.Input<boolean>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecTopologyspreadconstraintsArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecTopologyspreadconstraintsLabelselectorArgs>;
            maxSkew: pulumi.Input<number>;
            minDomains?: pulumi.Input<number>;
            topologyKey: pulumi.Input<string>;
            whenUnsatisfiable: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecTopologyspreadconstraintsLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecTopologyspreadconstraintsLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderJobSpecTemplateSpecTopologyspreadconstraintsLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderKayentaArgs {
            address: pulumi.Input<string>;
            application: pulumi.Input<string>;
            canaryConfigName: pulumi.Input<string>;
            configurationAccountName: pulumi.Input<string>;
            metricsAccountName: pulumi.Input<string>;
            scopes: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderKayentaScopesArgs>[]>;
            storageAccountName: pulumi.Input<string>;
            threshold: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderKayentaThresholdArgs>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderKayentaScopesArgs {
            controlScope: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderKayentaScopesControlscopeArgs>;
            experimentScope: pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderKayentaScopesExperimentscopeArgs>;
            name: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderKayentaScopesControlscopeArgs {
            end: pulumi.Input<string>;
            region: pulumi.Input<string>;
            scope: pulumi.Input<string>;
            start: pulumi.Input<string>;
            step: pulumi.Input<number>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderKayentaScopesExperimentscopeArgs {
            end: pulumi.Input<string>;
            region: pulumi.Input<string>;
            scope: pulumi.Input<string>;
            start: pulumi.Input<string>;
            step: pulumi.Input<number>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderKayentaThresholdArgs {
            marginal: pulumi.Input<number>;
            pass: pulumi.Input<number>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderNewrelicArgs {
            profile?: pulumi.Input<string>;
            query: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderPrometheusArgs {
            address?: pulumi.Input<string>;
            query?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderWavefrontArgs {
            address?: pulumi.Input<string>;
            query?: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderWebArgs {
            body?: pulumi.Input<string>;
            headers?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ClusterAnalysisTemplateSpecMetricsProviderWebHeadersArgs>[]>;
            insecure?: pulumi.Input<boolean>;
            jsonPath?: pulumi.Input<string>;
            method?: pulumi.Input<string>;
            timeoutSeconds?: pulumi.Input<number>;
            url: pulumi.Input<string>;
        }

        export interface ClusterAnalysisTemplateSpecMetricsProviderWebHeadersArgs {
            key: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ExperimentSpecArgs {
            analyses?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecAnalysesArgs>[]>;
            dryRun?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecDryrunArgs>[]>;
            duration?: pulumi.Input<string>;
            measurementRetention?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecMeasurementretentionArgs>[]>;
            progressDeadlineSeconds?: pulumi.Input<number>;
            scaleDownDelaySeconds?: pulumi.Input<number>;
            templates: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesArgs>[]>;
            terminate?: pulumi.Input<boolean>;
        }

        export interface ExperimentSpecAnalysesArgs {
            args?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecAnalysesArgsArgs>[]>;
            clusterScope?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            requiredForCompletion?: pulumi.Input<boolean>;
            templateName: pulumi.Input<string>;
        }

        export interface ExperimentSpecAnalysesArgsArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecAnalysesArgsValuefromArgs>;
        }

        export interface ExperimentSpecAnalysesArgsValuefromArgs {
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecAnalysesArgsValuefromFieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecAnalysesArgsValuefromSecretkeyrefArgs>;
        }

        export interface ExperimentSpecAnalysesArgsValuefromFieldrefArgs {
            fieldPath: pulumi.Input<string>;
        }

        export interface ExperimentSpecAnalysesArgsValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface ExperimentSpecDryrunArgs {
            metricName: pulumi.Input<string>;
        }

        export interface ExperimentSpecMeasurementretentionArgs {
            limit: pulumi.Input<number>;
            metricName: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesArgs {
            minReadySeconds?: pulumi.Input<number>;
            name: pulumi.Input<string>;
            replicas?: pulumi.Input<number>;
            selector: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesSelectorArgs>;
            service?: pulumi.Input<{[key: string]: any}>;
            template: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateArgs>;
        }

        export interface ExperimentSpecTemplatesSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ExperimentSpecTemplatesSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateArgs {
            metadata?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateMetadataArgs>;
            spec?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecArgs {
            activeDeadlineSeconds?: pulumi.Input<number>;
            affinity?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityArgs>;
            automountServiceAccountToken?: pulumi.Input<boolean>;
            containers: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersArgs>[]>;
            dnsConfig?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecDnsconfigArgs>;
            dnsPolicy?: pulumi.Input<string>;
            enableServiceLinks?: pulumi.Input<boolean>;
            ephemeralContainers?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersArgs>[]>;
            hostAliases?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecHostaliasesArgs>[]>;
            hostIPC?: pulumi.Input<boolean>;
            hostNetwork?: pulumi.Input<boolean>;
            hostPID?: pulumi.Input<boolean>;
            hostname?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecImagepullsecretsArgs>[]>;
            initContainers?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersArgs>[]>;
            nodeName?: pulumi.Input<string>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            os?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecOsArgs>;
            overhead?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            preemptionPolicy?: pulumi.Input<string>;
            priority?: pulumi.Input<number>;
            priorityClassName?: pulumi.Input<string>;
            readinessGates?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecReadinessgatesArgs>[]>;
            restartPolicy?: pulumi.Input<string>;
            runtimeClassName?: pulumi.Input<string>;
            schedulerName?: pulumi.Input<string>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecSecuritycontextArgs>;
            serviceAccount?: pulumi.Input<string>;
            serviceAccountName?: pulumi.Input<string>;
            setHostnameAsFQDN?: pulumi.Input<boolean>;
            shareProcessNamespace?: pulumi.Input<boolean>;
            subdomain?: pulumi.Input<string>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecTolerationsArgs>[]>;
            topologySpreadConstraints?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecTopologyspreadconstraintsArgs>[]>;
            volumes?: pulumi.Input<{[key: string]: any}>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaceSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaceSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaceSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaceSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersEnvValuefromArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersEnvfromSecretrefArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersLifecyclePrestopArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersLivenessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersLivenessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersLivenessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * experimentSpecTemplatesTemplateSpecContainersPortsArgsProvideDefaults sets the appropriate defaults for ExperimentSpecTemplatesTemplateSpecContainersPortsArgs
         */
        export function experimentSpecTemplatesTemplateSpecContainersPortsArgsProvideDefaults(val: ExperimentSpecTemplatesTemplateSpecContainersPortsArgs): ExperimentSpecTemplatesTemplateSpecContainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersReadinessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersReadinessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersReadinessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: any}>;
            requests?: pulumi.Input<{[key: string]: any}>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            hostProcess?: pulumi.Input<boolean>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersStartupprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersStartupprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersStartupprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecContainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecContainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecDnsconfigArgs {
            nameservers?: pulumi.Input<pulumi.Input<string>[]>;
            options?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecDnsconfigOptionsArgs>[]>;
            searches?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecDnsconfigOptionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            targetContainerName?: pulumi.Input<string>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersEnvValuefromArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersEnvfromSecretrefArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecyclePrestopArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLivenessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLivenessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLivenessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * experimentSpecTemplatesTemplateSpecEphemeralcontainersPortsArgsProvideDefaults sets the appropriate defaults for ExperimentSpecTemplatesTemplateSpecEphemeralcontainersPortsArgs
         */
        export function experimentSpecTemplatesTemplateSpecEphemeralcontainersPortsArgsProvideDefaults(val: ExperimentSpecTemplatesTemplateSpecEphemeralcontainersPortsArgs): ExperimentSpecTemplatesTemplateSpecEphemeralcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersReadinessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersReadinessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersReadinessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: any}>;
            requests?: pulumi.Input<{[key: string]: any}>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            hostProcess?: pulumi.Input<boolean>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersStartupprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersStartupprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersStartupprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecEphemeralcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecEphemeralcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecHostaliasesArgs {
            hostnames?: pulumi.Input<pulumi.Input<string>[]>;
            ip?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersEnvValuefromArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersEnvfromSecretrefArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersLifecyclePrestopArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersLivenessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersLivenessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersLivenessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * experimentSpecTemplatesTemplateSpecInitcontainersPortsArgsProvideDefaults sets the appropriate defaults for ExperimentSpecTemplatesTemplateSpecInitcontainersPortsArgs
         */
        export function experimentSpecTemplatesTemplateSpecInitcontainersPortsArgsProvideDefaults(val: ExperimentSpecTemplatesTemplateSpecInitcontainersPortsArgs): ExperimentSpecTemplatesTemplateSpecInitcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersReadinessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersReadinessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersReadinessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: any}>;
            requests?: pulumi.Input<{[key: string]: any}>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            hostProcess?: pulumi.Input<boolean>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersStartupprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersStartupprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersStartupprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecInitcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecInitcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecOsArgs {
            name: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecReadinessgatesArgs {
            conditionType: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecSecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecSecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecSecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecSecuritycontextWindowsoptionsArgs>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecSecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            hostProcess?: pulumi.Input<boolean>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecTopologyspreadconstraintsArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecTopologyspreadconstraintsLabelselectorArgs>;
            maxSkew: pulumi.Input<number>;
            minDomains?: pulumi.Input<number>;
            topologyKey: pulumi.Input<string>;
            whenUnsatisfiable: pulumi.Input<string>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecTopologyspreadconstraintsLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentSpecTemplatesTemplateSpecTopologyspreadconstraintsLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface ExperimentSpecTemplatesTemplateSpecTopologyspreadconstraintsLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ExperimentStatusArgs {
            analysisRuns?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentStatusAnalysisrunsArgs>[]>;
            availableAt?: pulumi.Input<string>;
            conditions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentStatusConditionsArgs>[]>;
            message?: pulumi.Input<string>;
            phase?: pulumi.Input<string>;
            templateStatuses?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.ExperimentStatusTemplatestatusesArgs>[]>;
        }

        export interface ExperimentStatusAnalysisrunsArgs {
            analysisRun: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            phase: pulumi.Input<string>;
        }

        export interface ExperimentStatusConditionsArgs {
            lastTransitionTime: pulumi.Input<string>;
            lastUpdateTime: pulumi.Input<string>;
            message: pulumi.Input<string>;
            reason: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface ExperimentStatusTemplatestatusesArgs {
            availableReplicas: pulumi.Input<number>;
            collisionCount?: pulumi.Input<number>;
            lastTransitionTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            podTemplateHash?: pulumi.Input<string>;
            readyReplicas: pulumi.Input<number>;
            replicas: pulumi.Input<number>;
            serviceName?: pulumi.Input<string>;
            status?: pulumi.Input<string>;
            updatedReplicas: pulumi.Input<number>;
        }

        export interface RolloutSpecArgs {
            analysis?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecAnalysisArgs>;
            minReadySeconds?: pulumi.Input<number>;
            paused?: pulumi.Input<boolean>;
            progressDeadlineAbort?: pulumi.Input<boolean>;
            progressDeadlineSeconds?: pulumi.Input<number>;
            replicas?: pulumi.Input<number>;
            restartAt?: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            selector?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecSelectorArgs>;
            strategy?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyArgs>;
            template?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateArgs>;
            workloadRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecWorkloadrefArgs>;
        }

        export interface RolloutSpecAnalysisArgs {
            successfulRunHistoryLimit?: pulumi.Input<number>;
            unsuccessfulRunHistoryLimit?: pulumi.Input<number>;
        }

        export interface RolloutSpecSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecStrategyArgs {
            blueGreen?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBluegreenArgs>;
            canary?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryArgs>;
        }

        export interface RolloutSpecStrategyBluegreenArgs {
            abortScaleDownDelaySeconds?: pulumi.Input<number>;
            activeMetadata?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBluegreenActivemetadataArgs>;
            activeService: pulumi.Input<string>;
            antiAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBluegreenAntiaffinityArgs>;
            autoPromotionEnabled?: pulumi.Input<boolean>;
            autoPromotionSeconds?: pulumi.Input<number>;
            maxUnavailable?: pulumi.Input<number | string>;
            postPromotionAnalysis?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBluegreenPostpromotionanalysisArgs>;
            prePromotionAnalysis?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBluegreenPrepromotionanalysisArgs>;
            previewMetadata?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBluegreenPreviewmetadataArgs>;
            previewReplicaCount?: pulumi.Input<number>;
            previewService?: pulumi.Input<string>;
            scaleDownDelayRevisionLimit?: pulumi.Input<number>;
            scaleDownDelaySeconds?: pulumi.Input<number>;
        }

        export interface RolloutSpecStrategyBluegreenActivemetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecStrategyBluegreenAntiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBluegreenAntiaffinityPreferredduringschedulingignoredduringexecutionArgs>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<{[key: string]: any}>;
        }

        export interface RolloutSpecStrategyBluegreenAntiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            weight: pulumi.Input<number>;
        }

        export interface RolloutSpecStrategyBluegreenPostpromotionanalysisArgs {
            args?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBluegreenPostpromotionanalysisArgsArgs>[]>;
            dryRun?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBluegreenPostpromotionanalysisDryrunArgs>[]>;
            measurementRetention?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBluegreenPostpromotionanalysisMeasurementretentionArgs>[]>;
            templates?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBluegreenPostpromotionanalysisTemplatesArgs>[]>;
        }

        export interface RolloutSpecStrategyBluegreenPostpromotionanalysisArgsArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBluegreenPostpromotionanalysisArgsValuefromArgs>;
        }

        export interface RolloutSpecStrategyBluegreenPostpromotionanalysisArgsValuefromArgs {
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBluegreenPostpromotionanalysisArgsValuefromFieldrefArgs>;
            podTemplateHashValue?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyBluegreenPostpromotionanalysisArgsValuefromFieldrefArgs {
            fieldPath: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyBluegreenPostpromotionanalysisDryrunArgs {
            metricName: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyBluegreenPostpromotionanalysisMeasurementretentionArgs {
            limit: pulumi.Input<number>;
            metricName: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyBluegreenPostpromotionanalysisTemplatesArgs {
            clusterScope?: pulumi.Input<boolean>;
            templateName?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyBluegreenPrepromotionanalysisArgs {
            args?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBluegreenPrepromotionanalysisArgsArgs>[]>;
            dryRun?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBluegreenPrepromotionanalysisDryrunArgs>[]>;
            measurementRetention?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBluegreenPrepromotionanalysisMeasurementretentionArgs>[]>;
            templates?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBluegreenPrepromotionanalysisTemplatesArgs>[]>;
        }

        export interface RolloutSpecStrategyBluegreenPrepromotionanalysisArgsArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBluegreenPrepromotionanalysisArgsValuefromArgs>;
        }

        export interface RolloutSpecStrategyBluegreenPrepromotionanalysisArgsValuefromArgs {
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBluegreenPrepromotionanalysisArgsValuefromFieldrefArgs>;
            podTemplateHashValue?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyBluegreenPrepromotionanalysisArgsValuefromFieldrefArgs {
            fieldPath: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyBluegreenPrepromotionanalysisDryrunArgs {
            metricName: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyBluegreenPrepromotionanalysisMeasurementretentionArgs {
            limit: pulumi.Input<number>;
            metricName: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyBluegreenPrepromotionanalysisTemplatesArgs {
            clusterScope?: pulumi.Input<boolean>;
            templateName?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyBluegreenPreviewmetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecStrategyCanaryArgs {
            abortScaleDownDelaySeconds?: pulumi.Input<number>;
            analysis?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAnalysisArgs>;
            antiAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAntiaffinityArgs>;
            canaryMetadata?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryCanarymetadataArgs>;
            canaryService?: pulumi.Input<string>;
            dynamicStableScale?: pulumi.Input<boolean>;
            maxSurge?: pulumi.Input<number | string>;
            maxUnavailable?: pulumi.Input<number | string>;
            pingPong?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryPingpongArgs>;
            scaleDownDelayRevisionLimit?: pulumi.Input<number>;
            scaleDownDelaySeconds?: pulumi.Input<number>;
            stableMetadata?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStablemetadataArgs>;
            stableService?: pulumi.Input<string>;
            steps?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsArgs>[]>;
            trafficRouting?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficroutingArgs>;
        }

        export interface RolloutSpecStrategyCanaryAnalysisArgs {
            args?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAnalysisArgsArgs>[]>;
            dryRun?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAnalysisDryrunArgs>[]>;
            measurementRetention?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAnalysisMeasurementretentionArgs>[]>;
            startingStep?: pulumi.Input<number>;
            templates?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAnalysisTemplatesArgs>[]>;
        }

        export interface RolloutSpecStrategyCanaryAnalysisArgsArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAnalysisArgsValuefromArgs>;
        }

        export interface RolloutSpecStrategyCanaryAnalysisArgsValuefromArgs {
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAnalysisArgsValuefromFieldrefArgs>;
            podTemplateHashValue?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryAnalysisArgsValuefromFieldrefArgs {
            fieldPath: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryAnalysisDryrunArgs {
            metricName: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryAnalysisMeasurementretentionArgs {
            limit: pulumi.Input<number>;
            metricName: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryAnalysisTemplatesArgs {
            clusterScope?: pulumi.Input<boolean>;
            templateName?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryAntiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAntiaffinityPreferredduringschedulingignoredduringexecutionArgs>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<{[key: string]: any}>;
        }

        export interface RolloutSpecStrategyCanaryAntiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            weight: pulumi.Input<number>;
        }

        export interface RolloutSpecStrategyCanaryCanarymetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecStrategyCanaryPingpongArgs {
            pingService: pulumi.Input<string>;
            pongService: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryStablemetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecStrategyCanaryStepsArgs {
            analysis?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsAnalysisArgs>;
            experiment?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentArgs>;
            pause?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsPauseArgs>;
            setCanaryScale?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsSetcanaryscaleArgs>;
            setHeaderRoute?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsSetheaderrouteArgs>;
            setMirrorRoute?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsSetmirrorrouteArgs>;
            setWeight?: pulumi.Input<number>;
        }

        export interface RolloutSpecStrategyCanaryStepsAnalysisArgs {
            args?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsAnalysisArgsArgs>[]>;
            dryRun?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsAnalysisDryrunArgs>[]>;
            measurementRetention?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsAnalysisMeasurementretentionArgs>[]>;
            templates?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsAnalysisTemplatesArgs>[]>;
        }

        export interface RolloutSpecStrategyCanaryStepsAnalysisArgsArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsAnalysisArgsValuefromArgs>;
        }

        export interface RolloutSpecStrategyCanaryStepsAnalysisArgsValuefromArgs {
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsAnalysisArgsValuefromFieldrefArgs>;
            podTemplateHashValue?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryStepsAnalysisArgsValuefromFieldrefArgs {
            fieldPath: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryStepsAnalysisDryrunArgs {
            metricName: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryStepsAnalysisMeasurementretentionArgs {
            limit: pulumi.Input<number>;
            metricName: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryStepsAnalysisTemplatesArgs {
            clusterScope?: pulumi.Input<boolean>;
            templateName?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentArgs {
            analyses?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentAnalysesArgs>[]>;
            duration?: pulumi.Input<string>;
            templates: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentTemplatesArgs>[]>;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentAnalysesArgs {
            args?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentAnalysesArgsArgs>[]>;
            clusterScope?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            requiredForCompletion?: pulumi.Input<boolean>;
            templateName: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentAnalysesArgsArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentAnalysesArgsValuefromArgs>;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentAnalysesArgsValuefromArgs {
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentAnalysesArgsValuefromFieldrefArgs>;
            podTemplateHashValue?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentAnalysesArgsValuefromFieldrefArgs {
            fieldPath: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentTemplatesArgs {
            metadata?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentTemplatesMetadataArgs>;
            name: pulumi.Input<string>;
            replicas?: pulumi.Input<number>;
            selector?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentTemplatesSelectorArgs>;
            specRef: pulumi.Input<string>;
            weight?: pulumi.Input<number>;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentTemplatesMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentTemplatesSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentTemplatesSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentTemplatesSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecStrategyCanaryStepsPauseArgs {
            duration?: pulumi.Input<number | string>;
        }

        export interface RolloutSpecStrategyCanaryStepsSetcanaryscaleArgs {
            matchTrafficWeight?: pulumi.Input<boolean>;
            replicas?: pulumi.Input<number>;
            weight?: pulumi.Input<number>;
        }

        export interface RolloutSpecStrategyCanaryStepsSetheaderrouteArgs {
            match?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsSetheaderrouteMatchArgs>[]>;
            name?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryStepsSetheaderrouteMatchArgs {
            headerName: pulumi.Input<string>;
            headerValue: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsSetheaderrouteMatchHeadervalueArgs>;
        }

        export interface RolloutSpecStrategyCanaryStepsSetheaderrouteMatchHeadervalueArgs {
            exact?: pulumi.Input<string>;
            prefix?: pulumi.Input<string>;
            regex?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryStepsSetmirrorrouteArgs {
            match?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsSetmirrorrouteMatchArgs>[]>;
            name: pulumi.Input<string>;
            percentage?: pulumi.Input<number>;
        }

        export interface RolloutSpecStrategyCanaryStepsSetmirrorrouteMatchArgs {
            headers?: pulumi.Input<{[key: string]: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsSetmirrorrouteMatchHeadersArgs>}>;
            method?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsSetmirrorrouteMatchMethodArgs>;
            path?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsSetmirrorrouteMatchPathArgs>;
        }

        export interface RolloutSpecStrategyCanaryStepsSetmirrorrouteMatchHeadersArgs {
            exact?: pulumi.Input<string>;
            prefix?: pulumi.Input<string>;
            regex?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryStepsSetmirrorrouteMatchMethodArgs {
            exact?: pulumi.Input<string>;
            prefix?: pulumi.Input<string>;
            regex?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryStepsSetmirrorrouteMatchPathArgs {
            exact?: pulumi.Input<string>;
            prefix?: pulumi.Input<string>;
            regex?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryTrafficroutingArgs {
            alb?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficroutingAlbArgs>;
            ambassador?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficroutingAmbassadorArgs>;
            appMesh?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficroutingAppmeshArgs>;
            istio?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficroutingIstioArgs>;
            managedRoutes?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficroutingManagedroutesArgs>[]>;
            nginx?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficroutingNginxArgs>;
            smi?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficroutingSmiArgs>;
            traefik?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficroutingTraefikArgs>;
        }

        export interface RolloutSpecStrategyCanaryTrafficroutingAlbArgs {
            annotationPrefix?: pulumi.Input<string>;
            ingress: pulumi.Input<string>;
            rootService?: pulumi.Input<string>;
            servicePort: pulumi.Input<number>;
            stickinessConfig?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficroutingAlbStickinessconfigArgs>;
        }

        export interface RolloutSpecStrategyCanaryTrafficroutingAlbStickinessconfigArgs {
            durationSeconds: pulumi.Input<number>;
            enabled: pulumi.Input<boolean>;
        }

        export interface RolloutSpecStrategyCanaryTrafficroutingAmbassadorArgs {
            mappings: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecStrategyCanaryTrafficroutingAppmeshArgs {
            virtualNodeGroup?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficroutingAppmeshVirtualnodegroupArgs>;
            virtualService?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficroutingAppmeshVirtualserviceArgs>;
        }

        export interface RolloutSpecStrategyCanaryTrafficroutingAppmeshVirtualnodegroupArgs {
            canaryVirtualNodeRef: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficroutingAppmeshVirtualnodegroupCanaryvirtualnoderefArgs>;
            stableVirtualNodeRef: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficroutingAppmeshVirtualnodegroupStablevirtualnoderefArgs>;
        }

        export interface RolloutSpecStrategyCanaryTrafficroutingAppmeshVirtualnodegroupCanaryvirtualnoderefArgs {
            name: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryTrafficroutingAppmeshVirtualnodegroupStablevirtualnoderefArgs {
            name: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryTrafficroutingAppmeshVirtualserviceArgs {
            name: pulumi.Input<string>;
            routes?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecStrategyCanaryTrafficroutingIstioArgs {
            destinationRule?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficroutingIstioDestinationruleArgs>;
            virtualService?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficroutingIstioVirtualserviceArgs>;
            virtualServices?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficroutingIstioVirtualservicesArgs>[]>;
        }

        export interface RolloutSpecStrategyCanaryTrafficroutingIstioDestinationruleArgs {
            canarySubsetName: pulumi.Input<string>;
            name: pulumi.Input<string>;
            stableSubsetName: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryTrafficroutingIstioVirtualserviceArgs {
            name: pulumi.Input<string>;
            routes?: pulumi.Input<pulumi.Input<string>[]>;
            tlsRoutes?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficroutingIstioVirtualserviceTlsroutesArgs>[]>;
        }

        export interface RolloutSpecStrategyCanaryTrafficroutingIstioVirtualserviceTlsroutesArgs {
            port?: pulumi.Input<number>;
            sniHosts?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecStrategyCanaryTrafficroutingIstioVirtualservicesArgs {
            name: pulumi.Input<string>;
            routes?: pulumi.Input<pulumi.Input<string>[]>;
            tlsRoutes?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficroutingIstioVirtualservicesTlsroutesArgs>[]>;
        }

        export interface RolloutSpecStrategyCanaryTrafficroutingIstioVirtualservicesTlsroutesArgs {
            port?: pulumi.Input<number>;
            sniHosts?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecStrategyCanaryTrafficroutingManagedroutesArgs {
            name: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryTrafficroutingNginxArgs {
            additionalIngressAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            annotationPrefix?: pulumi.Input<string>;
            stableIngress: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryTrafficroutingSmiArgs {
            rootService?: pulumi.Input<string>;
            trafficSplitName?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryTrafficroutingTraefikArgs {
            weightedTraefikServiceName: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateArgs {
            metadata?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateMetadataArgs>;
            spec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecArgs>;
        }

        export interface RolloutSpecTemplateMetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecTemplateSpecArgs {
            activeDeadlineSeconds?: pulumi.Input<number>;
            affinity?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityArgs>;
            automountServiceAccountToken?: pulumi.Input<boolean>;
            containers: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersArgs>[]>;
            dnsConfig?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecDnsconfigArgs>;
            dnsPolicy?: pulumi.Input<string>;
            enableServiceLinks?: pulumi.Input<boolean>;
            ephemeralContainers?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersArgs>[]>;
            hostAliases?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecHostaliasesArgs>[]>;
            hostIPC?: pulumi.Input<boolean>;
            hostNetwork?: pulumi.Input<boolean>;
            hostPID?: pulumi.Input<boolean>;
            hostname?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecImagepullsecretsArgs>[]>;
            initContainers?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersArgs>[]>;
            nodeName?: pulumi.Input<string>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            os?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecOsArgs>;
            overhead?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            preemptionPolicy?: pulumi.Input<string>;
            priority?: pulumi.Input<number>;
            priorityClassName?: pulumi.Input<string>;
            readinessGates?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecReadinessgatesArgs>[]>;
            restartPolicy?: pulumi.Input<string>;
            runtimeClassName?: pulumi.Input<string>;
            schedulerName?: pulumi.Input<string>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecSecuritycontextArgs>;
            serviceAccount?: pulumi.Input<string>;
            serviceAccountName?: pulumi.Input<string>;
            setHostnameAsFQDN?: pulumi.Input<boolean>;
            shareProcessNamespace?: pulumi.Input<boolean>;
            subdomain?: pulumi.Input<string>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecTolerationsArgs>[]>;
            topologySpreadConstraints?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecTopologyspreadconstraintsArgs>[]>;
            volumes?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodantiaffinityArgs>;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaceSelector?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaceSelector?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaceSelector?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaceSelector?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecContainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvValuefromArgs>;
        }

        export interface RolloutSpecTemplateSpecContainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface RolloutSpecTemplateSpecContainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecContainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecContainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvfromSecretrefArgs>;
        }

        export interface RolloutSpecTemplateSpecContainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecContainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePrestopArgs>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface RolloutSpecTemplateSpecContainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLivenessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLivenessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecContainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecContainersLivenessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface RolloutSpecTemplateSpecContainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * rolloutSpecTemplateSpecContainersPortsArgsProvideDefaults sets the appropriate defaults for RolloutSpecTemplateSpecContainersPortsArgs
         */
        export function rolloutSpecTemplateSpecContainersPortsArgsProvideDefaults(val: RolloutSpecTemplateSpecContainersPortsArgs): RolloutSpecTemplateSpecContainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface RolloutSpecTemplateSpecContainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersReadinessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersReadinessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecContainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecContainersReadinessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface RolloutSpecTemplateSpecContainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: any}>;
            requests?: pulumi.Input<{[key: string]: any}>;
        }

        export interface RolloutSpecTemplateSpecContainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface RolloutSpecTemplateSpecContainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecContainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            hostProcess?: pulumi.Input<boolean>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersStartupprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersStartupprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecContainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecContainersStartupprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface RolloutSpecTemplateSpecContainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecDnsconfigArgs {
            nameservers?: pulumi.Input<pulumi.Input<string>[]>;
            options?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecDnsconfigOptionsArgs>[]>;
            searches?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecDnsconfigOptionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            targetContainerName?: pulumi.Input<string>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersEnvValuefromArgs>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersEnvfromSecretrefArgs>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersLifecyclePrestopArgs>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersLivenessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersLivenessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersLivenessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * rolloutSpecTemplateSpecEphemeralcontainersPortsArgsProvideDefaults sets the appropriate defaults for RolloutSpecTemplateSpecEphemeralcontainersPortsArgs
         */
        export function rolloutSpecTemplateSpecEphemeralcontainersPortsArgsProvideDefaults(val: RolloutSpecTemplateSpecEphemeralcontainersPortsArgs): RolloutSpecTemplateSpecEphemeralcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersReadinessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersReadinessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersReadinessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: any}>;
            requests?: pulumi.Input<{[key: string]: any}>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            hostProcess?: pulumi.Input<boolean>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersStartupprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersStartupprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersStartupprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecHostaliasesArgs {
            hostnames?: pulumi.Input<pulumi.Input<string>[]>;
            ip?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersEnvValuefromArgs>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersEnvfromSecretrefArgs>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersLifecyclePrestopArgs>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersLivenessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersLivenessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersLivenessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * rolloutSpecTemplateSpecInitcontainersPortsArgsProvideDefaults sets the appropriate defaults for RolloutSpecTemplateSpecInitcontainersPortsArgs
         */
        export function rolloutSpecTemplateSpecInitcontainersPortsArgsProvideDefaults(val: RolloutSpecTemplateSpecInitcontainersPortsArgs): RolloutSpecTemplateSpecInitcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface RolloutSpecTemplateSpecInitcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersReadinessprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersReadinessprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersReadinessprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: any}>;
            requests?: pulumi.Input<{[key: string]: any}>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            hostProcess?: pulumi.Input<boolean>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            grpc?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersStartupprobeGrpcArgs>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersStartupprobeTcpsocketArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersStartupprobeGrpcArgs {
            port: pulumi.Input<number>;
            service?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecOsArgs {
            name: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecReadinessgatesArgs {
            conditionType: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecSecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecSecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecSecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecSecuritycontextWindowsoptionsArgs>;
        }

        export interface RolloutSpecTemplateSpecSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecSecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            hostProcess?: pulumi.Input<boolean>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecTopologyspreadconstraintsArgs {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecTopologyspreadconstraintsLabelselectorArgs>;
            maxSkew: pulumi.Input<number>;
            minDomains?: pulumi.Input<number>;
            topologyKey: pulumi.Input<string>;
            whenUnsatisfiable: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecTopologyspreadconstraintsLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecTopologyspreadconstraintsLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecTemplateSpecTopologyspreadconstraintsLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecWorkloadrefArgs {
            apiVersion?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            name?: pulumi.Input<string>;
        }

        export interface RolloutStatusArgs {
            HPAReplicas?: pulumi.Input<number>;
            abort?: pulumi.Input<boolean>;
            abortedAt?: pulumi.Input<string>;
            alb?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusAlbArgs>;
            availableReplicas?: pulumi.Input<number>;
            blueGreen?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusBluegreenArgs>;
            canary?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusCanaryArgs>;
            collisionCount?: pulumi.Input<number>;
            conditions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusConditionsArgs>[]>;
            controllerPause?: pulumi.Input<boolean>;
            currentPodHash?: pulumi.Input<string>;
            currentStepHash?: pulumi.Input<string>;
            currentStepIndex?: pulumi.Input<number>;
            message?: pulumi.Input<string>;
            observedGeneration?: pulumi.Input<string>;
            pauseConditions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusPauseconditionsArgs>[]>;
            phase?: pulumi.Input<string>;
            promoteFull?: pulumi.Input<boolean>;
            readyReplicas?: pulumi.Input<number>;
            replicas?: pulumi.Input<number>;
            restartedAt?: pulumi.Input<string>;
            selector?: pulumi.Input<string>;
            stableRS?: pulumi.Input<string>;
            updatedReplicas?: pulumi.Input<number>;
            workloadObservedGeneration?: pulumi.Input<string>;
        }

        export interface RolloutStatusAlbArgs {
            canaryTargetGroup?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusAlbCanarytargetgroupArgs>;
            loadBalancer?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusAlbLoadbalancerArgs>;
            stableTargetGroup?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusAlbStabletargetgroupArgs>;
        }

        export interface RolloutStatusAlbCanarytargetgroupArgs {
            arn: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface RolloutStatusAlbLoadbalancerArgs {
            arn: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface RolloutStatusAlbStabletargetgroupArgs {
            arn: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface RolloutStatusBluegreenArgs {
            activeSelector?: pulumi.Input<string>;
            postPromotionAnalysisRunStatus?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusBluegreenPostpromotionanalysisrunstatusArgs>;
            prePromotionAnalysisRunStatus?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusBluegreenPrepromotionanalysisrunstatusArgs>;
            previewSelector?: pulumi.Input<string>;
            scaleUpPreviewCheckPoint?: pulumi.Input<boolean>;
        }

        export interface RolloutStatusBluegreenPostpromotionanalysisrunstatusArgs {
            message?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            status: pulumi.Input<string>;
        }

        export interface RolloutStatusBluegreenPrepromotionanalysisrunstatusArgs {
            message?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            status: pulumi.Input<string>;
        }

        export interface RolloutStatusCanaryArgs {
            currentBackgroundAnalysisRunStatus?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusCanaryCurrentbackgroundanalysisrunstatusArgs>;
            currentExperiment?: pulumi.Input<string>;
            currentStepAnalysisRunStatus?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusCanaryCurrentstepanalysisrunstatusArgs>;
            stablePingPong?: pulumi.Input<string>;
            weights?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusCanaryWeightsArgs>;
        }

        export interface RolloutStatusCanaryCurrentbackgroundanalysisrunstatusArgs {
            message?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            status: pulumi.Input<string>;
        }

        export interface RolloutStatusCanaryCurrentstepanalysisrunstatusArgs {
            message?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            status: pulumi.Input<string>;
        }

        export interface RolloutStatusCanaryWeightsArgs {
            additional?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusCanaryWeightsAdditionalArgs>[]>;
            canary: pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusCanaryWeightsCanaryArgs>;
            stable: pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusCanaryWeightsStableArgs>;
            verified?: pulumi.Input<boolean>;
        }

        export interface RolloutStatusCanaryWeightsAdditionalArgs {
            podTemplateHash?: pulumi.Input<string>;
            serviceName?: pulumi.Input<string>;
            weight: pulumi.Input<number>;
        }

        export interface RolloutStatusCanaryWeightsCanaryArgs {
            podTemplateHash?: pulumi.Input<string>;
            serviceName?: pulumi.Input<string>;
            weight: pulumi.Input<number>;
        }

        export interface RolloutStatusCanaryWeightsStableArgs {
            podTemplateHash?: pulumi.Input<string>;
            serviceName?: pulumi.Input<string>;
            weight: pulumi.Input<number>;
        }

        export interface RolloutStatusConditionsArgs {
            lastTransitionTime: pulumi.Input<string>;
            lastUpdateTime: pulumi.Input<string>;
            message: pulumi.Input<string>;
            reason: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface RolloutStatusPauseconditionsArgs {
            reason: pulumi.Input<string>;
            startTime: pulumi.Input<string>;
        }

        export interface WorkflowTaskResultOutputsArgs {
            artifacts?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsArgs>[]>;
            exitCode?: pulumi.Input<string>;
            parameters?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsParametersArgs>[]>;
            result?: pulumi.Input<string>;
        }

        export interface WorkflowTaskResultOutputsArtifactsArgs {
            archive?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsArchiveArgs>;
            archiveLogs?: pulumi.Input<boolean>;
            artifactGC?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsArtifactgcArgs>;
            artifactory?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsArtifactoryArgs>;
            azure?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsAzureArgs>;
            deleted?: pulumi.Input<boolean>;
            from?: pulumi.Input<string>;
            fromExpression?: pulumi.Input<string>;
            gcs?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsGcsArgs>;
            git?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsGitArgs>;
            globalName?: pulumi.Input<string>;
            hdfs?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsHdfsArgs>;
            http?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsHttpArgs>;
            mode?: pulumi.Input<number>;
            name: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
            oss?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsOssArgs>;
            path?: pulumi.Input<string>;
            raw?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsRawArgs>;
            recurseMode?: pulumi.Input<boolean>;
            s3?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsS3Args>;
            subPath?: pulumi.Input<string>;
        }

        export interface WorkflowTaskResultOutputsArtifactsArchiveArgs {
            none?: pulumi.Input<{[key: string]: any}>;
            tar?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsArchiveTarArgs>;
            zip?: pulumi.Input<{[key: string]: any}>;
        }

        export interface WorkflowTaskResultOutputsArtifactsArchiveTarArgs {
            compressionLevel?: pulumi.Input<number>;
        }

        export interface WorkflowTaskResultOutputsArtifactsArtifactgcArgs {
            podMetadata?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsArtifactgcPodmetadataArgs>;
            serviceAccountName?: pulumi.Input<string>;
            strategy?: pulumi.Input<string>;
        }

        export interface WorkflowTaskResultOutputsArtifactsArtifactgcPodmetadataArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface WorkflowTaskResultOutputsArtifactsArtifactoryArgs {
            passwordSecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsArtifactoryPasswordsecretArgs>;
            url: pulumi.Input<string>;
            usernameSecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsArtifactoryUsernamesecretArgs>;
        }

        export interface WorkflowTaskResultOutputsArtifactsArtifactoryPasswordsecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsArtifactoryUsernamesecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsAzureArgs {
            accountKeySecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsAzureAccountkeysecretArgs>;
            blob: pulumi.Input<string>;
            container: pulumi.Input<string>;
            endpoint: pulumi.Input<string>;
            useSDKCreds?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsAzureAccountkeysecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsGcsArgs {
            bucket?: pulumi.Input<string>;
            key: pulumi.Input<string>;
            serviceAccountKeySecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsGcsServiceaccountkeysecretArgs>;
        }

        export interface WorkflowTaskResultOutputsArtifactsGcsServiceaccountkeysecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsGitArgs {
            branch?: pulumi.Input<string>;
            depth?: pulumi.Input<number>;
            disableSubmodules?: pulumi.Input<boolean>;
            fetch?: pulumi.Input<pulumi.Input<string>[]>;
            insecureIgnoreHostKey?: pulumi.Input<boolean>;
            passwordSecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsGitPasswordsecretArgs>;
            repo: pulumi.Input<string>;
            revision?: pulumi.Input<string>;
            singleBranch?: pulumi.Input<boolean>;
            sshPrivateKeySecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsGitSshprivatekeysecretArgs>;
            usernameSecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsGitUsernamesecretArgs>;
        }

        export interface WorkflowTaskResultOutputsArtifactsGitPasswordsecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsGitSshprivatekeysecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsGitUsernamesecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsHdfsArgs {
            addresses?: pulumi.Input<pulumi.Input<string>[]>;
            force?: pulumi.Input<boolean>;
            hdfsUser?: pulumi.Input<string>;
            krbCCacheSecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsHdfsKrbccachesecretArgs>;
            krbConfigConfigMap?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsHdfsKrbconfigconfigmapArgs>;
            krbKeytabSecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsHdfsKrbkeytabsecretArgs>;
            krbRealm?: pulumi.Input<string>;
            krbServicePrincipalName?: pulumi.Input<string>;
            krbUsername?: pulumi.Input<string>;
            path: pulumi.Input<string>;
        }

        export interface WorkflowTaskResultOutputsArtifactsHdfsKrbccachesecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsHdfsKrbconfigconfigmapArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsHdfsKrbkeytabsecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsHttpArgs {
            auth?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsHttpAuthArgs>;
            headers?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsHttpHeadersArgs>[]>;
            url: pulumi.Input<string>;
        }

        export interface WorkflowTaskResultOutputsArtifactsHttpAuthArgs {
            basicAuth?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsHttpAuthBasicauthArgs>;
            clientCert?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsHttpAuthClientcertArgs>;
            oauth2?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsHttpAuthOauth2Args>;
        }

        export interface WorkflowTaskResultOutputsArtifactsHttpAuthBasicauthArgs {
            passwordSecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsHttpAuthBasicauthPasswordsecretArgs>;
            usernameSecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsHttpAuthBasicauthUsernamesecretArgs>;
        }

        export interface WorkflowTaskResultOutputsArtifactsHttpAuthBasicauthPasswordsecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsHttpAuthBasicauthUsernamesecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsHttpAuthClientcertArgs {
            clientCertSecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsHttpAuthClientcertClientcertsecretArgs>;
            clientKeySecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsHttpAuthClientcertClientkeysecretArgs>;
        }

        export interface WorkflowTaskResultOutputsArtifactsHttpAuthClientcertClientcertsecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsHttpAuthClientcertClientkeysecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsHttpAuthOauth2Args {
            clientIDSecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsHttpAuthOauth2ClientidsecretArgs>;
            clientSecretSecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsHttpAuthOauth2ClientsecretsecretArgs>;
            endpointParams?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsHttpAuthOauth2EndpointparamsArgs>[]>;
            scopes?: pulumi.Input<pulumi.Input<string>[]>;
            tokenURLSecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsHttpAuthOauth2TokenurlsecretArgs>;
        }

        export interface WorkflowTaskResultOutputsArtifactsHttpAuthOauth2ClientidsecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsHttpAuthOauth2ClientsecretsecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsHttpAuthOauth2EndpointparamsArgs {
            key: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface WorkflowTaskResultOutputsArtifactsHttpAuthOauth2TokenurlsecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsHttpHeadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface WorkflowTaskResultOutputsArtifactsOssArgs {
            accessKeySecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsOssAccesskeysecretArgs>;
            bucket?: pulumi.Input<string>;
            createBucketIfNotPresent?: pulumi.Input<boolean>;
            endpoint?: pulumi.Input<string>;
            key: pulumi.Input<string>;
            lifecycleRule?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsOssLifecycleruleArgs>;
            secretKeySecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsOssSecretkeysecretArgs>;
            securityToken?: pulumi.Input<string>;
        }

        export interface WorkflowTaskResultOutputsArtifactsOssAccesskeysecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsOssLifecycleruleArgs {
            markDeletionAfterDays?: pulumi.Input<number>;
            markInfrequentAccessAfterDays?: pulumi.Input<number>;
        }

        export interface WorkflowTaskResultOutputsArtifactsOssSecretkeysecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsRawArgs {
            data: pulumi.Input<string>;
        }

        export interface WorkflowTaskResultOutputsArtifactsS3Args {
            accessKeySecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsS3AccesskeysecretArgs>;
            bucket?: pulumi.Input<string>;
            createBucketIfNotPresent?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsS3CreatebucketifnotpresentArgs>;
            encryptionOptions?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsS3EncryptionoptionsArgs>;
            endpoint?: pulumi.Input<string>;
            insecure?: pulumi.Input<boolean>;
            key?: pulumi.Input<string>;
            region?: pulumi.Input<string>;
            roleARN?: pulumi.Input<string>;
            secretKeySecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsS3SecretkeysecretArgs>;
            useSDKCreds?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsS3AccesskeysecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsS3CreatebucketifnotpresentArgs {
            objectLocking?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsS3EncryptionoptionsArgs {
            enableEncryption?: pulumi.Input<boolean>;
            kmsEncryptionContext?: pulumi.Input<string>;
            kmsKeyId?: pulumi.Input<string>;
            serverSideCustomerKeySecret?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsArtifactsS3EncryptionoptionsServersidecustomerkeysecretArgs>;
        }

        export interface WorkflowTaskResultOutputsArtifactsS3EncryptionoptionsServersidecustomerkeysecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsArtifactsS3SecretkeysecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface WorkflowTaskResultOutputsParametersArgs {
            description?: pulumi.Input<string>;
            enum?: pulumi.Input<pulumi.Input<string>[]>;
            globalName?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsParametersValuefromArgs>;
        }

        export interface WorkflowTaskResultOutputsParametersValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.WorkflowTaskResultOutputsParametersValuefromConfigmapkeyrefArgs>;
            event?: pulumi.Input<string>;
            expression?: pulumi.Input<string>;
            jqFilter?: pulumi.Input<string>;
            jsonPath?: pulumi.Input<string>;
            parameter?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
            supplied?: pulumi.Input<{[key: string]: any}>;
        }

        export interface WorkflowTaskResultOutputsParametersValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

    }
}

export namespace bitnami {
    export namespace v1alpha1 {
    }
}

export namespace certmanager {
    export namespace v1 {
        /**
         * Desired state of the CertificateRequest resource.
         */
        export interface CertificateRequestSpecArgs {
            /**
             * The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types.
             */
            duration?: pulumi.Input<string>;
            /**
             * Extra contains extra attributes of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.
             */
            extra?: pulumi.Input<{[key: string]: pulumi.Input<pulumi.Input<string>[]>}>;
            /**
             * Groups contains group membership of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.
             */
            groups?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * IsCA will request to mark the certificate as valid for certificate signing when submitting to the issuer. This will automatically add the `cert sign` usage to the list of `usages`.
             */
            isCA?: pulumi.Input<boolean>;
            /**
             * IssuerRef is a reference to the issuer for this CertificateRequest.  If the `kind` field is not set, or set to `Issuer`, an Issuer resource with the given name in the same namespace as the CertificateRequest will be used.  If the `kind` field is set to `ClusterIssuer`, a ClusterIssuer with the provided name will be used. The `name` field in this stanza is required at all times. The group field refers to the API group of the issuer which defaults to `cert-manager.io` if empty.
             */
            issuerRef: pulumi.Input<inputs.certmanager.v1.CertificateRequestSpecIssuerrefArgs>;
            /**
             * The PEM-encoded x509 certificate signing request to be submitted to the CA for signing.
             */
            request: pulumi.Input<string>;
            /**
             * UID contains the uid of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.
             */
            uid?: pulumi.Input<string>;
            /**
             * Usages is the set of x509 usages that are requested for the certificate. If usages are set they SHOULD be encoded inside the CSR spec Defaults to `digital signature` and `key encipherment` if not specified.
             */
            usages?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Username contains the name of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.
             */
            username?: pulumi.Input<string>;
        }

        /**
         * IssuerRef is a reference to the issuer for this CertificateRequest.  If the `kind` field is not set, or set to `Issuer`, an Issuer resource with the given name in the same namespace as the CertificateRequest will be used.  If the `kind` field is set to `ClusterIssuer`, a ClusterIssuer with the provided name will be used. The `name` field in this stanza is required at all times. The group field refers to the API group of the issuer which defaults to `cert-manager.io` if empty.
         */
        export interface CertificateRequestSpecIssuerrefArgs {
            /**
             * Group of the resource being referred to.
             */
            group?: pulumi.Input<string>;
            /**
             * Kind of the resource being referred to.
             */
            kind?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to.
             */
            name: pulumi.Input<string>;
        }

        /**
         * Status of the CertificateRequest. This is set and managed automatically.
         */
        export interface CertificateRequestStatusArgs {
            /**
             * The PEM encoded x509 certificate of the signer, also known as the CA (Certificate Authority). This is set on a best-effort basis by different issuers. If not set, the CA is assumed to be unknown/not available.
             */
            ca?: pulumi.Input<string>;
            /**
             * The PEM encoded x509 certificate resulting from the certificate signing request. If not set, the CertificateRequest has either not been completed or has failed. More information on failure can be found by checking the `conditions` field.
             */
            certificate?: pulumi.Input<string>;
            /**
             * List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.
             */
            conditions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.CertificateRequestStatusConditionsArgs>[]>;
            /**
             * FailureTime stores the time that this CertificateRequest failed. This is used to influence garbage collection and back-off.
             */
            failureTime?: pulumi.Input<string>;
        }

        /**
         * CertificateRequestCondition contains condition information for a CertificateRequest.
         */
        export interface CertificateRequestStatusConditionsArgs {
            /**
             * LastTransitionTime is the timestamp corresponding to the last status change of this condition.
             */
            lastTransitionTime?: pulumi.Input<string>;
            /**
             * Message is a human readable description of the details of the last transition, complementing reason.
             */
            message?: pulumi.Input<string>;
            /**
             * Reason is a brief machine readable explanation for the condition's last transition.
             */
            reason?: pulumi.Input<string>;
            /**
             * Status of the condition, one of (`True`, `False`, `Unknown`).
             */
            status: pulumi.Input<string>;
            /**
             * Type of the condition, known values are (`Ready`, `InvalidRequest`, `Approved`, `Denied`).
             */
            type: pulumi.Input<string>;
        }

        /**
         * Desired state of the Certificate resource.
         */
        export interface CertificateSpecArgs {
            /**
             * AdditionalOutputFormats defines extra output formats of the private key and signed certificate chain to be written to this Certificate's target Secret. This is an Alpha Feature and is only enabled with the `--feature-gates=AdditionalCertificateOutputFormats=true` option on both the controller and webhook components.
             */
            additionalOutputFormats?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.CertificateSpecAdditionaloutputformatsArgs>[]>;
            /**
             * CommonName is a common name to be used on the Certificate. The CommonName should have a length of 64 characters or fewer to avoid generating invalid CSRs. This value is ignored by TLS clients when any subject alt name is set. This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4
             */
            commonName?: pulumi.Input<string>;
            /**
             * DNSNames is a list of DNS subjectAltNames to be set on the Certificate.
             */
            dnsNames?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types. If unset this defaults to 90 days. Certificate will be renewed either 2/3 through its duration or `renewBefore` period before its expiry, whichever is later. Minimum accepted duration is 1 hour. Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration
             */
            duration?: pulumi.Input<string>;
            /**
             * EmailAddresses is a list of email subjectAltNames to be set on the Certificate.
             */
            emailAddresses?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * EncodeUsagesInRequest controls whether key usages should be present in the CertificateRequest
             */
            encodeUsagesInRequest?: pulumi.Input<boolean>;
            /**
             * IPAddresses is a list of IP address subjectAltNames to be set on the Certificate.
             */
            ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * IsCA will mark this Certificate as valid for certificate signing. This will automatically add the `cert sign` usage to the list of `usages`.
             */
            isCA?: pulumi.Input<boolean>;
            /**
             * IssuerRef is a reference to the issuer for this certificate. If the `kind` field is not set, or set to `Issuer`, an Issuer resource with the given name in the same namespace as the Certificate will be used. If the `kind` field is set to `ClusterIssuer`, a ClusterIssuer with the provided name will be used. The `name` field in this stanza is required at all times.
             */
            issuerRef: pulumi.Input<inputs.certmanager.v1.CertificateSpecIssuerrefArgs>;
            /**
             * Keystores configures additional keystore output formats stored in the `secretName` Secret resource.
             */
            keystores?: pulumi.Input<inputs.certmanager.v1.CertificateSpecKeystoresArgs>;
            /**
             * LiteralSubject is an LDAP formatted string that represents the [X.509 Subject field](https://datatracker.ietf.org/doc/html/rfc5280#"section-4.1.2.6). Use this *instead* of the Subject field if you need to ensure the correct ordering of the RDN sequence, such as when issuing certs for LDAP authentication. See https://github.com/cert-manager/cert-manager/issues/3203, https"://github.com/cert-manager/cert-manager/issues/4424. This field is alpha level and is only supported by cert-manager installations where LiteralCertificateSubject feature gate is enabled on both cert-manager controller and webhook.
             */
            literalSubject?: pulumi.Input<string>;
            /**
             * Options to control private keys used for the Certificate.
             */
            privateKey?: pulumi.Input<inputs.certmanager.v1.CertificateSpecPrivatekeyArgs>;
            /**
             * How long before the currently issued certificate's expiry "cert-manager should renew the certificate. The default is 2/3 of the issued certificate's duration. Minimum accepted value is 5 minutes. Value must be in units accepted by Go time.ParseDuration https"://golang.org/pkg/time/#ParseDuration
             */
            renewBefore?: pulumi.Input<string>;
            /**
             * revisionHistoryLimit is the maximum number of CertificateRequest revisions that are maintained in the Certificate's history. Each revision represents a single `CertificateRequest` created by this Certificate, either when it was created, renewed, or Spec was changed. Revisions will be removed by oldest first if the number of revisions exceeds this number. If set, revisionHistoryLimit must be a value of `1` or greater. If unset (`nil`), revisions will not be garbage collected. Default value is `nil`.
             */
            revisionHistoryLimit?: pulumi.Input<number>;
            /**
             * SecretName is the name of the secret resource that will be automatically created and managed by this Certificate resource. It will be populated with a private key and certificate, signed by the denoted issuer.
             */
            secretName: pulumi.Input<string>;
            /**
             * SecretTemplate defines annotations and labels to be copied to the Certificate's Secret. Labels and annotations on the Secret will be changed as they appear on the SecretTemplate when added or removed. SecretTemplate annotations are added in conjunction with, and cannot overwrite, the base set of annotations cert-manager sets on the Certificate's Secret.
             */
            secretTemplate?: pulumi.Input<inputs.certmanager.v1.CertificateSpecSecrettemplateArgs>;
            /**
             * Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
             */
            subject?: pulumi.Input<inputs.certmanager.v1.CertificateSpecSubjectArgs>;
            /**
             * URIs is a list of URI subjectAltNames to be set on the Certificate.
             */
            uris?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Usages is the set of x509 usages that are requested for the certificate. Defaults to `digital signature` and `key encipherment` if not specified.
             */
            usages?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * CertificateAdditionalOutputFormat defines an additional output format of a Certificate resource. These contain supplementary data formats of the signed certificate chain and paired private key.
         */
        export interface CertificateSpecAdditionaloutputformatsArgs {
            /**
             * Type is the name of the format type that should be written to the Certificate's target Secret.
             */
            type: pulumi.Input<string>;
        }

        /**
         * IssuerRef is a reference to the issuer for this certificate. If the `kind` field is not set, or set to `Issuer`, an Issuer resource with the given name in the same namespace as the Certificate will be used. If the `kind` field is set to `ClusterIssuer`, a ClusterIssuer with the provided name will be used. The `name` field in this stanza is required at all times.
         */
        export interface CertificateSpecIssuerrefArgs {
            /**
             * Group of the resource being referred to.
             */
            group?: pulumi.Input<string>;
            /**
             * Kind of the resource being referred to.
             */
            kind?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to.
             */
            name: pulumi.Input<string>;
        }

        /**
         * Keystores configures additional keystore output formats stored in the `secretName` Secret resource.
         */
        export interface CertificateSpecKeystoresArgs {
            /**
             * JKS configures options for storing a JKS keystore in the `spec.secretName` Secret resource.
             */
            jks?: pulumi.Input<inputs.certmanager.v1.CertificateSpecKeystoresJksArgs>;
            /**
             * PKCS12 configures options for storing a PKCS12 keystore in the `spec.secretName` Secret resource.
             */
            pkcs12?: pulumi.Input<inputs.certmanager.v1.CertificateSpecKeystoresPkcs12Args>;
        }

        /**
         * JKS configures options for storing a JKS keystore in the `spec.secretName` Secret resource.
         */
        export interface CertificateSpecKeystoresJksArgs {
            /**
             * Create enables JKS keystore creation for the Certificate. If true, a file named `keystore.jks` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will only be updated upon re-issuance. A file named `truststore.jks` will also be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef` containing the issuing Certificate Authority
             */
            create: pulumi.Input<boolean>;
            /**
             * PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the JKS keystore.
             */
            passwordSecretRef: pulumi.Input<inputs.certmanager.v1.CertificateSpecKeystoresJksPasswordsecretrefArgs>;
        }

        /**
         * PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the JKS keystore.
         */
        export interface CertificateSpecKeystoresJksPasswordsecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * PKCS12 configures options for storing a PKCS12 keystore in the `spec.secretName` Secret resource.
         */
        export interface CertificateSpecKeystoresPkcs12Args {
            /**
             * Create enables PKCS12 keystore creation for the Certificate. If true, a file named `keystore.p12` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will only be updated upon re-issuance. A file named `truststore.p12` will also be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef` containing the issuing Certificate Authority
             */
            create: pulumi.Input<boolean>;
            /**
             * PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the PKCS12 keystore.
             */
            passwordSecretRef: pulumi.Input<inputs.certmanager.v1.CertificateSpecKeystoresPkcs12PasswordsecretrefArgs>;
        }

        /**
         * PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the PKCS12 keystore.
         */
        export interface CertificateSpecKeystoresPkcs12PasswordsecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Options to control private keys used for the Certificate.
         */
        export interface CertificateSpecPrivatekeyArgs {
            /**
             * Algorithm is the private key algorithm of the corresponding private key for this certificate. If provided, allowed values are either `RSA`,`Ed25519` or `ECDSA` If `algorithm` is specified and `size` is not provided, key size of 256 will be used for `ECDSA` key algorithm and key size of 2048 will be used for `RSA` key algorithm. key size is ignored when using the `Ed25519` key algorithm.
             */
            algorithm?: pulumi.Input<string>;
            /**
             * The private key cryptography standards (PKCS) encoding for this certificate's private key to be encoded in. If provided, allowed values are `PKCS1` and `PKCS8` standing for PKCS#1 and PKCS#8, respectively. Defaults to `PKCS1` if not specified.
             */
            encoding?: pulumi.Input<string>;
            /**
             * RotationPolicy controls how private keys should be regenerated when a re-issuance is being processed. If set to Never, a private key will only be generated if one does not already exist in the target `spec.secretName`. If one does exists but it does not have the correct algorithm or size, a warning will be raised to await user intervention. If set to Always, a private key matching the specified requirements will be generated whenever a re-issuance occurs. Default is 'Never' for backward compatibility.
             */
            rotationPolicy?: pulumi.Input<string>;
            /**
             * Size is the key bit size of the corresponding private key for this certificate. If `algorithm` is set to `RSA`, valid values are `2048`, `4096` or `8192`, and will default to `2048` if not specified. If `algorithm` is set to `ECDSA`, valid values are `256`, `384` or `521`, and will default to `256` if not specified. If `algorithm` is set to `Ed25519`, Size is ignored. No other values are allowed.
             */
            size?: pulumi.Input<number>;
        }

        /**
         * SecretTemplate defines annotations and labels to be copied to the Certificate's Secret. Labels and annotations on the Secret will be changed as they appear on the SecretTemplate when added or removed. SecretTemplate annotations are added in conjunction with, and cannot overwrite, the base set of annotations cert-manager sets on the Certificate's Secret.
         */
        export interface CertificateSpecSecrettemplateArgs {
            /**
             * Annotations is a key value map to be copied to the target Kubernetes Secret.
             */
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * Labels is a key value map to be copied to the target Kubernetes Secret.
             */
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
         */
        export interface CertificateSpecSubjectArgs {
            /**
             * Countries to be used on the Certificate.
             */
            countries?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Cities to be used on the Certificate.
             */
            localities?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Organizational Units to be used on the Certificate.
             */
            organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Organizations to be used on the Certificate.
             */
            organizations?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Postal codes to be used on the Certificate.
             */
            postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * State/Provinces to be used on the Certificate.
             */
            provinces?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Serial number to be used on the Certificate.
             */
            serialNumber?: pulumi.Input<string>;
            /**
             * Street addresses to be used on the Certificate.
             */
            streetAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Status of the Certificate. This is set and managed automatically.
         */
        export interface CertificateStatusArgs {
            /**
             * List of status conditions to indicate the status of certificates. Known condition types are `Ready` and `Issuing`.
             */
            conditions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.CertificateStatusConditionsArgs>[]>;
            /**
             * The number of continuous failed issuance attempts up till now. This field gets removed (if set) on a successful issuance and gets set to 1 if unset and an issuance has failed. If an issuance has failed, the delay till the next issuance will be calculated using formula time.Hour * 2 ^ (failedIssuanceAttempts - 1).
             */
            failedIssuanceAttempts?: pulumi.Input<number>;
            /**
             * LastFailureTime is the time as recorded by the Certificate controller of the most recent failure to complete a CertificateRequest for this Certificate resource. If set, cert-manager will not re-request another Certificate until 1 hour has elapsed from this time.
             */
            lastFailureTime?: pulumi.Input<string>;
            /**
             * The name of the Secret resource containing the private key to be used for the next certificate iteration. The keymanager controller will automatically set this field if the `Issuing` condition is set to `True`. It will automatically unset this field when the Issuing condition is not set or False.
             */
            nextPrivateKeySecretName?: pulumi.Input<string>;
            /**
             * The expiration time of the certificate stored in the secret named by this resource in `spec.secretName`.
             */
            notAfter?: pulumi.Input<string>;
            /**
             * The time after which the certificate stored in the secret named by this resource in spec.secretName is valid.
             */
            notBefore?: pulumi.Input<string>;
            /**
             * RenewalTime is the time at which the certificate will be next renewed. If not set, no upcoming renewal is scheduled.
             */
            renewalTime?: pulumi.Input<string>;
            /**
             * The current 'revision' of the certificate as issued. 
             *  When a CertificateRequest resource is created, it will have the `cert-manager.io/certificate-revision` set to one greater than the current value of this field. 
             *  Upon issuance, this field will be set to the value of the annotation on the CertificateRequest resource used to issue the certificate. 
             *  Persisting the value on the CertificateRequest resource allows the certificates controller to know whether a request is part of an old issuance or if it is part of the ongoing revision's issuance by checking if the revision value in the annotation is greater than this field.
             */
            revision?: pulumi.Input<number>;
        }

        /**
         * CertificateCondition contains condition information for an Certificate.
         */
        export interface CertificateStatusConditionsArgs {
            /**
             * LastTransitionTime is the timestamp corresponding to the last status change of this condition.
             */
            lastTransitionTime?: pulumi.Input<string>;
            /**
             * Message is a human readable description of the details of the last transition, complementing reason.
             */
            message?: pulumi.Input<string>;
            /**
             * If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Certificate.
             */
            observedGeneration?: pulumi.Input<number>;
            /**
             * Reason is a brief machine readable explanation for the condition's last transition.
             */
            reason?: pulumi.Input<string>;
            /**
             * Status of the condition, one of (`True`, `False`, `Unknown`).
             */
            status: pulumi.Input<string>;
            /**
             * Type of the condition, known values are (`Ready`, `Issuing`).
             */
            type: pulumi.Input<string>;
        }

        /**
         * Desired state of the ClusterIssuer resource.
         */
        export interface ClusterIssuerSpecArgs {
            /**
             * ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
             */
            acme?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeArgs>;
            /**
             * CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
             */
            ca?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecCaArgs>;
            /**
             * SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
             */
            selfSigned?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecSelfsignedArgs>;
            /**
             * Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
             */
            vault?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecVaultArgs>;
            /**
             * Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
             */
            venafi?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecVenafiArgs>;
        }

        /**
         * ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
         */
        export interface ClusterIssuerSpecAcmeArgs {
            /**
             * Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.
             */
            disableAccountKeyGeneration?: pulumi.Input<boolean>;
            /**
             * Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
             */
            email?: pulumi.Input<string>;
            /**
             * Enables requesting a Not After date on certificates that matches the duration of the certificate. This is not supported by all ACME servers like Let's Encrypt. If set to true when the ACME server does not support it it will create an error on the Order. Defaults to false.
             */
            enableDurationFeature?: pulumi.Input<boolean>;
            /**
             * ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
             */
            externalAccountBinding?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeExternalaccountbindingArgs>;
            /**
             * PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: "DST Root CA X3" or "ISRG Root X1" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN
             */
            preferredChain?: pulumi.Input<string>;
            /**
             * PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
             */
            privateKeySecretRef: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmePrivatekeysecretrefArgs>;
            /**
             * Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.
             */
            server: pulumi.Input<string>;
            /**
             * Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.
             */
            skipTLSVerify?: pulumi.Input<boolean>;
            /**
             * Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/
             */
            solvers?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversArgs>[]>;
        }

        /**
         * ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
         */
        export interface ClusterIssuerSpecAcmeExternalaccountbindingArgs {
            /**
             * Deprecated: keyAlgorithm field exists for historical compatibility reasons and should not be used. The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.
             */
            keyAlgorithm?: pulumi.Input<string>;
            /**
             * keyID is the ID of the CA key that the External Account is bound to.
             */
            keyID: pulumi.Input<string>;
            /**
             * keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
             */
            keySecretRef: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeExternalaccountbindingKeysecretrefArgs>;
        }

        /**
         * keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
         */
        export interface ClusterIssuerSpecAcmeExternalaccountbindingKeysecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
         */
        export interface ClusterIssuerSpecAcmePrivatekeysecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * An ACMEChallengeSolver describes how to solve ACME challenges for the issuer it is part of. A selector may be provided to use different solving strategies for different DNS names. Only one of HTTP01 or DNS01 must be provided.
         */
        export interface ClusterIssuerSpecAcmeSolversArgs {
            /**
             * Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
             */
            dns01?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01Args>;
            /**
             * Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
             */
            http01?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01Args>;
            /**
             * Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
             */
            selector?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversSelectorArgs>;
        }

        /**
         * Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
         */
        export interface ClusterIssuerSpecAcmeSolversDns01Args {
            /**
             * Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
             */
            acmeDNS?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01AcmednsArgs>;
            /**
             * Use the Akamai DNS zone management API to manage DNS01 challenge records.
             */
            akamai?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01AkamaiArgs>;
            /**
             * Use the Microsoft Azure DNS API to manage DNS01 challenge records.
             */
            azureDNS?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01AzurednsArgs>;
            /**
             * Use the Google Cloud DNS API to manage DNS01 challenge records.
             */
            cloudDNS?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs>;
            /**
             * Use the Cloudflare API to manage DNS01 challenge records.
             */
            cloudflare?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01CloudflareArgs>;
            /**
             * CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
             */
            cnameStrategy?: pulumi.Input<string>;
            /**
             * Use the DigitalOcean DNS API to manage DNS01 challenge records.
             */
            digitalocean?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs>;
            /**
             * Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
             */
            rfc2136?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01Rfc2136Args>;
            /**
             * Use the AWS Route53 API to manage DNS01 challenge records.
             */
            route53?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01Route53Args>;
            /**
             * Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
             */
            webhook?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01WebhookArgs>;
        }

        /**
         * Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
         */
        export interface ClusterIssuerSpecAcmeSolversDns01AcmednsArgs {
            /**
             * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
             */
            accountSecretRef: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01AcmednsAccountsecretrefArgs>;
            host: pulumi.Input<string>;
        }

        /**
         * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
         */
        export interface ClusterIssuerSpecAcmeSolversDns01AcmednsAccountsecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Use the Akamai DNS zone management API to manage DNS01 challenge records.
         */
        export interface ClusterIssuerSpecAcmeSolversDns01AkamaiArgs {
            /**
             * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
             */
            accessTokenSecretRef: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01AkamaiAccesstokensecretrefArgs>;
            /**
             * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
             */
            clientSecretSecretRef: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01AkamaiClientsecretsecretrefArgs>;
            /**
             * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
             */
            clientTokenSecretRef: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01AkamaiClienttokensecretrefArgs>;
            serviceConsumerDomain: pulumi.Input<string>;
        }

        /**
         * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
         */
        export interface ClusterIssuerSpecAcmeSolversDns01AkamaiAccesstokensecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
         */
        export interface ClusterIssuerSpecAcmeSolversDns01AkamaiClientsecretsecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
         */
        export interface ClusterIssuerSpecAcmeSolversDns01AkamaiClienttokensecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Use the Microsoft Azure DNS API to manage DNS01 challenge records.
         */
        export interface ClusterIssuerSpecAcmeSolversDns01AzurednsArgs {
            /**
             * if both this and ClientSecret are left unset MSI will be used
             */
            clientID?: pulumi.Input<string>;
            /**
             * if both this and ClientID are left unset MSI will be used
             */
            clientSecretSecretRef?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01AzurednsClientsecretsecretrefArgs>;
            /**
             * name of the Azure environment (default AzurePublicCloud)
             */
            environment?: pulumi.Input<string>;
            /**
             * name of the DNS zone that should be used
             */
            hostedZoneName?: pulumi.Input<string>;
            /**
             * managed identity configuration, can not be used at the same time as clientID, clientSecretSecretRef or tenantID
             */
            managedIdentity?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01AzurednsManagedidentityArgs>;
            /**
             * resource group the DNS zone is located in
             */
            resourceGroupName: pulumi.Input<string>;
            /**
             * ID of the Azure subscription
             */
            subscriptionID: pulumi.Input<string>;
            /**
             * when specifying ClientID and ClientSecret then this field is also needed
             */
            tenantID?: pulumi.Input<string>;
        }

        /**
         * if both this and ClientID are left unset MSI will be used
         */
        export interface ClusterIssuerSpecAcmeSolversDns01AzurednsClientsecretsecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * managed identity configuration, can not be used at the same time as clientID, clientSecretSecretRef or tenantID
         */
        export interface ClusterIssuerSpecAcmeSolversDns01AzurednsManagedidentityArgs {
            /**
             * client ID of the managed identity, can not be used at the same time as resourceID
             */
            clientID?: pulumi.Input<string>;
            /**
             * resource ID of the managed identity, can not be used at the same time as clientID
             */
            resourceID?: pulumi.Input<string>;
        }

        /**
         * Use the Google Cloud DNS API to manage DNS01 challenge records.
         */
        export interface ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs {
            /**
             * HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
             */
            hostedZoneName?: pulumi.Input<string>;
            project: pulumi.Input<string>;
            /**
             * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
             */
            serviceAccountSecretRef?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceaccountsecretrefArgs>;
        }

        /**
         * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
         */
        export interface ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceaccountsecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Use the Cloudflare API to manage DNS01 challenge records.
         */
        export interface ClusterIssuerSpecAcmeSolversDns01CloudflareArgs {
            /**
             * API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
             */
            apiKeySecretRef?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01CloudflareApikeysecretrefArgs>;
            /**
             * API token used to authenticate with Cloudflare.
             */
            apiTokenSecretRef?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01CloudflareApitokensecretrefArgs>;
            /**
             * Email of the account, only required when using API key based authentication.
             */
            email?: pulumi.Input<string>;
        }

        /**
         * API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
         */
        export interface ClusterIssuerSpecAcmeSolversDns01CloudflareApikeysecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * API token used to authenticate with Cloudflare.
         */
        export interface ClusterIssuerSpecAcmeSolversDns01CloudflareApitokensecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Use the DigitalOcean DNS API to manage DNS01 challenge records.
         */
        export interface ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs {
            /**
             * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
             */
            tokenSecretRef: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokensecretrefArgs>;
        }

        /**
         * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
         */
        export interface ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokensecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
         */
        export interface ClusterIssuerSpecAcmeSolversDns01Rfc2136Args {
            /**
             * The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
             */
            nameserver: pulumi.Input<string>;
            /**
             * The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
             */
            tsigAlgorithm?: pulumi.Input<string>;
            /**
             * The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
             */
            tsigKeyName?: pulumi.Input<string>;
            /**
             * The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
             */
            tsigSecretSecretRef?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigsecretsecretrefArgs>;
        }

        /**
         * The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
         */
        export interface ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigsecretsecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Use the AWS Route53 API to manage DNS01 challenge records.
         */
        export interface ClusterIssuerSpecAcmeSolversDns01Route53Args {
            /**
             * The AccessKeyID is used for authentication. Cannot be set when SecretAccessKeyID is set. If neither the Access Key nor Key ID are set, we "fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https"://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
             */
            accessKeyID?: pulumi.Input<string>;
            /**
             * The SecretAccessKey is used for authentication. If set, pull the AWS access key ID from a key within a Kubernetes Secret. Cannot be set when AccessKeyID is set. If neither the Access Key nor Key ID are set, we "fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https"://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
             */
            accessKeyIDSecretRef?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01Route53AccesskeyidsecretrefArgs>;
            /**
             * If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
             */
            hostedZoneID?: pulumi.Input<string>;
            /**
             * Always set the region when using AccessKeyID and SecretAccessKey
             */
            region: pulumi.Input<string>;
            /**
             * Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
             */
            role?: pulumi.Input<string>;
            /**
             * The SecretAccessKey is used for authentication. If neither the Access Key nor Key ID are set, we "fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https"://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
             */
            secretAccessKeySecretRef?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversDns01Route53SecretaccesskeysecretrefArgs>;
        }

        /**
         * The SecretAccessKey is used for authentication. If set, pull the AWS access key ID from a key within a Kubernetes Secret. Cannot be set when AccessKeyID is set. If neither the Access Key nor Key ID are set, we "fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https"://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
         */
        export interface ClusterIssuerSpecAcmeSolversDns01Route53AccesskeyidsecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * The SecretAccessKey is used for authentication. If neither the Access Key nor Key ID are set, we "fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https"://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
         */
        export interface ClusterIssuerSpecAcmeSolversDns01Route53SecretaccesskeysecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
         */
        export interface ClusterIssuerSpecAcmeSolversDns01WebhookArgs {
            /**
             * Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
             */
            config?: pulumi.Input<{[key: string]: any}>;
            /**
             * The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
             */
            groupName: pulumi.Input<string>;
            /**
             * The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
             */
            solverName: pulumi.Input<string>;
        }

        /**
         * Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01Args {
            /**
             * The Gateway API is a "sig-network community API that models service networking in Kubernetes (https"://gateway-api.sigs.k8s.io/). The Gateway solver will create HTTPRoutes with the specified labels in the same namespace as the challenge. This solver is experimental, and fields / behaviour may change in the future.
             */
            gatewayHTTPRoute?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01GatewayhttprouteArgs>;
            /**
             * The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
             */
            ingress?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressArgs>;
        }

        /**
         * The Gateway API is a "sig-network community API that models service networking in Kubernetes (https"://gateway-api.sigs.k8s.io/). The Gateway solver will create HTTPRoutes with the specified labels in the same namespace as the challenge. This solver is experimental, and fields / behaviour may change in the future.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01GatewayhttprouteArgs {
            /**
             * Custom labels that will be applied to HTTPRoutes created by cert-manager while solving HTTP-01 challenges.
             */
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * When solving an HTTP-01 challenge, "cert-manager creates an HTTPRoute. cert-manager needs to know which parentRefs should be used when creating the HTTPRoute. Usually, the parentRef references a Gateway. See: https"://gateway-api.sigs.k8s.io/v1alpha2/api-types/httproute/#attaching-to-gateways
             */
            parentRefs?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01GatewayhttprouteParentrefsArgs>[]>;
            /**
             * Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.
             */
            serviceType?: pulumi.Input<string>;
        }

        /**
         * ParentRef identifies an API object (usually a Gateway) that can be considered a parent of this resource (usually a route). The only kind of parent resource with "Core" support is Gateway. This API may be extended in the future to support additional kinds of parent resources, such as HTTPRoute. 
         *  The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid. 
         *  References to objects with invalid Group and Kind are not valid, and must be rejected by the implementation, with appropriate Conditions set on the containing object.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01GatewayhttprouteParentrefsArgs {
            /**
             * Group is the group of the referent. 
             *  Support: Core
             */
            group?: pulumi.Input<string>;
            /**
             * Kind is kind of the referent. 
             *  Support: Core (Gateway) Support: Custom (Other Resources)
             */
            kind?: pulumi.Input<string>;
            /**
             * Name is the name of the referent. 
             *  Support: Core
             */
            name: pulumi.Input<string>;
            /**
             * Namespace is the namespace of the referent. When unspecified (or empty string), this refers to the local namespace of the Route. 
             *  Support: Core
             */
            namespace?: pulumi.Input<string>;
            /**
             * SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: 
             *  * Gateway: Listener Name 
             *  Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. 
             *  When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. 
             *  Support: Core
             */
            sectionName?: pulumi.Input<string>;
        }
        /**
         * clusterIssuerSpecAcmeSolversHttp01GatewayhttprouteParentrefsArgsProvideDefaults sets the appropriate defaults for ClusterIssuerSpecAcmeSolversHttp01GatewayhttprouteParentrefsArgs
         */
        export function clusterIssuerSpecAcmeSolversHttp01GatewayhttprouteParentrefsArgsProvideDefaults(val: ClusterIssuerSpecAcmeSolversHttp01GatewayhttprouteParentrefsArgs): ClusterIssuerSpecAcmeSolversHttp01GatewayhttprouteParentrefsArgs {
            return {
                ...val,
                group: (val.group) ?? "gateway.networking.k8s.io",
                kind: (val.kind) ?? "Gateway",
            };
        }

        /**
         * The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressArgs {
            /**
             * The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
             */
            class?: pulumi.Input<string>;
            /**
             * Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges.
             */
            ingressTemplate?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressIngresstemplateArgs>;
            /**
             * The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
             */
            name?: pulumi.Input<string>;
            /**
             * Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges.
             */
            podTemplate?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateArgs>;
            /**
             * Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.
             */
            serviceType?: pulumi.Input<string>;
        }

        /**
         * Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressIngresstemplateArgs {
            /**
             * ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
             */
            metadata?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressIngresstemplateMetadataArgs>;
        }

        /**
         * ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressIngresstemplateMetadataArgs {
            /**
             * Annotations that should be added to the created ACME HTTP01 solver ingress.
             */
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * Labels that should be added to the created ACME HTTP01 solver ingress.
             */
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateArgs {
            /**
             * ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
             */
            metadata?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateMetadataArgs>;
            /**
             * PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
             */
            spec?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecArgs>;
        }

        /**
         * ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateMetadataArgs {
            /**
             * Annotations that should be added to the create ACME HTTP01 solver pods.
             */
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * Labels that should be added to the created ACME HTTP01 solver pods.
             */
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecArgs {
            /**
             * If specified, the pod's scheduling constraints
             */
            affinity?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityArgs>;
            /**
             * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
             */
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * If specified, the pod's priorityClassName.
             */
            priorityClassName?: pulumi.Input<string>;
            /**
             * If specified, the pod's service account
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * If specified, the pod's tolerations.
             */
            tolerations?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecTolerationsArgs>[]>;
        }

        /**
         * If specified, the pod's scheduling constraints
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityArgs {
            /**
             * Describes node affinity scheduling rules for the pod.
             */
            nodeAffinity?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityArgs>;
            /**
             * Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
             */
            podAffinity?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityArgs>;
            /**
             * Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
             */
            podAntiAffinity?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityArgs>;
        }

        /**
         * Describes node affinity scheduling rules for the pod.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityArgs {
            /**
             * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
             */
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            /**
             * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
             */
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        /**
         * An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            /**
             * A node selector term, associated with the corresponding weight.
             */
            preference: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            /**
             * Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
             */
            weight: pulumi.Input<number>;
        }

        /**
         * A node selector term, associated with the corresponding weight.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            /**
             * A list of node selector requirements by node's labels.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            /**
             * A list of node selector requirements by node's fields.
             */
            matchFields?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        /**
         * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            /**
             * The label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
             */
            operator: pulumi.Input<string>;
            /**
             * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            /**
             * The label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
             */
            operator: pulumi.Input<string>;
            /**
             * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            /**
             * Required. A list of node selector terms. The terms are ORed.
             */
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        /**
         * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            /**
             * A list of node selector requirements by node's labels.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            /**
             * A list of node selector requirements by node's fields.
             */
            matchFields?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        /**
         * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            /**
             * The label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
             */
            operator: pulumi.Input<string>;
            /**
             * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            /**
             * The label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
             */
            operator: pulumi.Input<string>;
            /**
             * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityArgs {
            /**
             * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
             */
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            /**
             * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
             */
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        /**
         * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            /**
             * Required. A pod affinity term, associated with the corresponding weight.
             */
            podAffinityTerm: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            /**
             * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
             */
            weight: pulumi.Input<number>;
        }

        /**
         * Required. A pod affinity term, associated with the corresponding weight.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            /**
             * A label query over a set of resources, in this case pods.
             */
            labelSelector?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            /**
             * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
             */
            namespaceSelector?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs>;
            /**
             * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
             */
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
             */
            topologyKey: pulumi.Input<string>;
        }

        /**
         * A label query over a set of resources, in this case pods.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            /**
             * A label query over a set of resources, in this case pods.
             */
            labelSelector?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            /**
             * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
             */
            namespaceSelector?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs>;
            /**
             * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
             */
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
             */
            topologyKey: pulumi.Input<string>;
        }

        /**
         * A label query over a set of resources, in this case pods.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityArgs {
            /**
             * The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
             */
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            /**
             * If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
             */
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        /**
         * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            /**
             * Required. A pod affinity term, associated with the corresponding weight.
             */
            podAffinityTerm: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            /**
             * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
             */
            weight: pulumi.Input<number>;
        }

        /**
         * Required. A pod affinity term, associated with the corresponding weight.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            /**
             * A label query over a set of resources, in this case pods.
             */
            labelSelector?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            /**
             * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
             */
            namespaceSelector?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs>;
            /**
             * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
             */
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
             */
            topologyKey: pulumi.Input<string>;
        }

        /**
         * A label query over a set of resources, in this case pods.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            /**
             * A label query over a set of resources, in this case pods.
             */
            labelSelector?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            /**
             * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
             */
            namespaceSelector?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs>;
            /**
             * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
             */
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
             */
            topologyKey: pulumi.Input<string>;
        }

        /**
         * A label query over a set of resources, in this case pods.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
         */
        export interface ClusterIssuerSpecAcmeSolversHttp01IngressPodtemplateSpecTolerationsArgs {
            /**
             * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
             */
            effect?: pulumi.Input<string>;
            /**
             * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
             */
            key?: pulumi.Input<string>;
            /**
             * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
             */
            operator?: pulumi.Input<string>;
            /**
             * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
             */
            tolerationSeconds?: pulumi.Input<number>;
            /**
             * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
             */
            value?: pulumi.Input<string>;
        }

        /**
         * Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
         */
        export interface ClusterIssuerSpecAcmeSolversSelectorArgs {
            /**
             * List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
             */
            dnsNames?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
             */
            dnsZones?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
         */
        export interface ClusterIssuerSpecCaArgs {
            /**
             * The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
             */
            crlDistributionPoints?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * The OCSP server list is an X.509 v3 extension that defines a list of URLs of OCSP responders. The OCSP responders can be queried for the revocation status of an issued certificate. If not set, the certificate will be issued with no OCSP servers set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
             */
            ocspServers?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * SecretName is the name of the secret used to sign Certificates issued by this Issuer.
             */
            secretName: pulumi.Input<string>;
        }

        /**
         * SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
         */
        export interface ClusterIssuerSpecSelfsignedArgs {
            /**
             * The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
             */
            crlDistributionPoints?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
         */
        export interface ClusterIssuerSpecVaultArgs {
            /**
             * Auth configures how cert-manager authenticates with the Vault server.
             */
            auth: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecVaultAuthArgs>;
            /**
             * PEM-encoded CA bundle (base64-encoded) used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
             */
            caBundle?: pulumi.Input<string>;
            /**
             * Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure M"ulti-tenancy. e.g: "ns1" More about namespaces can be found here https"://www.vaultproject.io/docs/enterprise/namespaces
             */
            namespace?: pulumi.Input<string>;
            /**
             * Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".
             */
            path: pulumi.Input<string>;
            /**
             * Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
             */
            server: pulumi.Input<string>;
        }

        /**
         * Auth configures how cert-manager authenticates with the Vault server.
         */
        export interface ClusterIssuerSpecVaultAuthArgs {
            /**
             * AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
             */
            appRole?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecVaultAuthApproleArgs>;
            /**
             * Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
             */
            kubernetes?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecVaultAuthKubernetesArgs>;
            /**
             * TokenSecretRef authenticates with Vault by presenting a token.
             */
            tokenSecretRef?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecVaultAuthTokensecretrefArgs>;
        }

        /**
         * AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
         */
        export interface ClusterIssuerSpecVaultAuthApproleArgs {
            /**
             * Path where the App Role authentication backend is mounted in Vault, e.g: "approle"
             */
            path: pulumi.Input<string>;
            /**
             * RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
             */
            roleId: pulumi.Input<string>;
            /**
             * Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
             */
            secretRef: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecVaultAuthApproleSecretrefArgs>;
        }

        /**
         * Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
         */
        export interface ClusterIssuerSpecVaultAuthApproleSecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
         */
        export interface ClusterIssuerSpecVaultAuthKubernetesArgs {
            /**
             * The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
             */
            mountPath?: pulumi.Input<string>;
            /**
             * A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
             */
            role: pulumi.Input<string>;
            /**
             * The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
             */
            secretRef: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecVaultAuthKubernetesSecretrefArgs>;
        }

        /**
         * The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
         */
        export interface ClusterIssuerSpecVaultAuthKubernetesSecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * TokenSecretRef authenticates with Vault by presenting a token.
         */
        export interface ClusterIssuerSpecVaultAuthTokensecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
         */
        export interface ClusterIssuerSpecVenafiArgs {
            /**
             * Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
             */
            cloud?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecVenafiCloudArgs>;
            /**
             * TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
             */
            tpp?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecVenafiTppArgs>;
            /**
             * Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
             */
            zone: pulumi.Input<string>;
        }

        /**
         * Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
         */
        export interface ClusterIssuerSpecVenafiCloudArgs {
            /**
             * APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
             */
            apiTokenSecretRef: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecVenafiCloudApitokensecretrefArgs>;
            /**
             * URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
             */
            url?: pulumi.Input<string>;
        }

        /**
         * APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
         */
        export interface ClusterIssuerSpecVenafiCloudApitokensecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
         */
        export interface ClusterIssuerSpecVenafiTppArgs {
            /**
             * CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.
             */
            caBundle?: pulumi.Input<string>;
            /**
             * CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
             */
            credentialsRef: pulumi.Input<inputs.certmanager.v1.ClusterIssuerSpecVenafiTppCredentialsrefArgs>;
            /**
             * URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".
             */
            url: pulumi.Input<string>;
        }

        /**
         * CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
         */
        export interface ClusterIssuerSpecVenafiTppCredentialsrefArgs {
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Status of the ClusterIssuer. This is set and managed automatically.
         */
        export interface ClusterIssuerStatusArgs {
            /**
             * ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
             */
            acme?: pulumi.Input<inputs.certmanager.v1.ClusterIssuerStatusAcmeArgs>;
            /**
             * List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
             */
            conditions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.ClusterIssuerStatusConditionsArgs>[]>;
        }

        /**
         * ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
         */
        export interface ClusterIssuerStatusAcmeArgs {
            /**
             * LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
             */
            lastRegisteredEmail?: pulumi.Input<string>;
            /**
             * URI is the unique account identifier, which can also be used to retrieve account details from the CA
             */
            uri?: pulumi.Input<string>;
        }

        /**
         * IssuerCondition contains condition information for an Issuer.
         */
        export interface ClusterIssuerStatusConditionsArgs {
            /**
             * LastTransitionTime is the timestamp corresponding to the last status change of this condition.
             */
            lastTransitionTime?: pulumi.Input<string>;
            /**
             * Message is a human readable description of the details of the last transition, complementing reason.
             */
            message?: pulumi.Input<string>;
            /**
             * If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Issuer.
             */
            observedGeneration?: pulumi.Input<number>;
            /**
             * Reason is a brief machine readable explanation for the condition's last transition.
             */
            reason?: pulumi.Input<string>;
            /**
             * Status of the condition, one of (`True`, `False`, `Unknown`).
             */
            status: pulumi.Input<string>;
            /**
             * Type of the condition, known values are (`Ready`).
             */
            type: pulumi.Input<string>;
        }

        /**
         * Desired state of the Issuer resource.
         */
        export interface IssuerSpecArgs {
            /**
             * ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
             */
            acme?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeArgs>;
            /**
             * CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
             */
            ca?: pulumi.Input<inputs.certmanager.v1.IssuerSpecCaArgs>;
            /**
             * SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
             */
            selfSigned?: pulumi.Input<inputs.certmanager.v1.IssuerSpecSelfsignedArgs>;
            /**
             * Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
             */
            vault?: pulumi.Input<inputs.certmanager.v1.IssuerSpecVaultArgs>;
            /**
             * Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
             */
            venafi?: pulumi.Input<inputs.certmanager.v1.IssuerSpecVenafiArgs>;
        }

        /**
         * ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
         */
        export interface IssuerSpecAcmeArgs {
            /**
             * Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.
             */
            disableAccountKeyGeneration?: pulumi.Input<boolean>;
            /**
             * Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
             */
            email?: pulumi.Input<string>;
            /**
             * Enables requesting a Not After date on certificates that matches the duration of the certificate. This is not supported by all ACME servers like Let's Encrypt. If set to true when the ACME server does not support it it will create an error on the Order. Defaults to false.
             */
            enableDurationFeature?: pulumi.Input<boolean>;
            /**
             * ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
             */
            externalAccountBinding?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeExternalaccountbindingArgs>;
            /**
             * PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: "DST Root CA X3" or "ISRG Root X1" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN
             */
            preferredChain?: pulumi.Input<string>;
            /**
             * PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
             */
            privateKeySecretRef: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmePrivatekeysecretrefArgs>;
            /**
             * Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.
             */
            server: pulumi.Input<string>;
            /**
             * Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.
             */
            skipTLSVerify?: pulumi.Input<boolean>;
            /**
             * Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/
             */
            solvers?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversArgs>[]>;
        }

        /**
         * ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
         */
        export interface IssuerSpecAcmeExternalaccountbindingArgs {
            /**
             * Deprecated: keyAlgorithm field exists for historical compatibility reasons and should not be used. The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.
             */
            keyAlgorithm?: pulumi.Input<string>;
            /**
             * keyID is the ID of the CA key that the External Account is bound to.
             */
            keyID: pulumi.Input<string>;
            /**
             * keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
             */
            keySecretRef: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeExternalaccountbindingKeysecretrefArgs>;
        }

        /**
         * keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
         */
        export interface IssuerSpecAcmeExternalaccountbindingKeysecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
         */
        export interface IssuerSpecAcmePrivatekeysecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * An ACMEChallengeSolver describes how to solve ACME challenges for the issuer it is part of. A selector may be provided to use different solving strategies for different DNS names. Only one of HTTP01 or DNS01 must be provided.
         */
        export interface IssuerSpecAcmeSolversArgs {
            /**
             * Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
             */
            dns01?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01Args>;
            /**
             * Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
             */
            http01?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01Args>;
            /**
             * Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
             */
            selector?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversSelectorArgs>;
        }

        /**
         * Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
         */
        export interface IssuerSpecAcmeSolversDns01Args {
            /**
             * Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
             */
            acmeDNS?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01AcmednsArgs>;
            /**
             * Use the Akamai DNS zone management API to manage DNS01 challenge records.
             */
            akamai?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01AkamaiArgs>;
            /**
             * Use the Microsoft Azure DNS API to manage DNS01 challenge records.
             */
            azureDNS?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01AzurednsArgs>;
            /**
             * Use the Google Cloud DNS API to manage DNS01 challenge records.
             */
            cloudDNS?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01ClouddnsArgs>;
            /**
             * Use the Cloudflare API to manage DNS01 challenge records.
             */
            cloudflare?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01CloudflareArgs>;
            /**
             * CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
             */
            cnameStrategy?: pulumi.Input<string>;
            /**
             * Use the DigitalOcean DNS API to manage DNS01 challenge records.
             */
            digitalocean?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01DigitaloceanArgs>;
            /**
             * Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
             */
            rfc2136?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01Rfc2136Args>;
            /**
             * Use the AWS Route53 API to manage DNS01 challenge records.
             */
            route53?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01Route53Args>;
            /**
             * Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
             */
            webhook?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01WebhookArgs>;
        }

        /**
         * Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
         */
        export interface IssuerSpecAcmeSolversDns01AcmednsArgs {
            /**
             * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
             */
            accountSecretRef: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01AcmednsAccountsecretrefArgs>;
            host: pulumi.Input<string>;
        }

        /**
         * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
         */
        export interface IssuerSpecAcmeSolversDns01AcmednsAccountsecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Use the Akamai DNS zone management API to manage DNS01 challenge records.
         */
        export interface IssuerSpecAcmeSolversDns01AkamaiArgs {
            /**
             * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
             */
            accessTokenSecretRef: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01AkamaiAccesstokensecretrefArgs>;
            /**
             * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
             */
            clientSecretSecretRef: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01AkamaiClientsecretsecretrefArgs>;
            /**
             * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
             */
            clientTokenSecretRef: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01AkamaiClienttokensecretrefArgs>;
            serviceConsumerDomain: pulumi.Input<string>;
        }

        /**
         * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
         */
        export interface IssuerSpecAcmeSolversDns01AkamaiAccesstokensecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
         */
        export interface IssuerSpecAcmeSolversDns01AkamaiClientsecretsecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
         */
        export interface IssuerSpecAcmeSolversDns01AkamaiClienttokensecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Use the Microsoft Azure DNS API to manage DNS01 challenge records.
         */
        export interface IssuerSpecAcmeSolversDns01AzurednsArgs {
            /**
             * if both this and ClientSecret are left unset MSI will be used
             */
            clientID?: pulumi.Input<string>;
            /**
             * if both this and ClientID are left unset MSI will be used
             */
            clientSecretSecretRef?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01AzurednsClientsecretsecretrefArgs>;
            /**
             * name of the Azure environment (default AzurePublicCloud)
             */
            environment?: pulumi.Input<string>;
            /**
             * name of the DNS zone that should be used
             */
            hostedZoneName?: pulumi.Input<string>;
            /**
             * managed identity configuration, can not be used at the same time as clientID, clientSecretSecretRef or tenantID
             */
            managedIdentity?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01AzurednsManagedidentityArgs>;
            /**
             * resource group the DNS zone is located in
             */
            resourceGroupName: pulumi.Input<string>;
            /**
             * ID of the Azure subscription
             */
            subscriptionID: pulumi.Input<string>;
            /**
             * when specifying ClientID and ClientSecret then this field is also needed
             */
            tenantID?: pulumi.Input<string>;
        }

        /**
         * if both this and ClientID are left unset MSI will be used
         */
        export interface IssuerSpecAcmeSolversDns01AzurednsClientsecretsecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * managed identity configuration, can not be used at the same time as clientID, clientSecretSecretRef or tenantID
         */
        export interface IssuerSpecAcmeSolversDns01AzurednsManagedidentityArgs {
            /**
             * client ID of the managed identity, can not be used at the same time as resourceID
             */
            clientID?: pulumi.Input<string>;
            /**
             * resource ID of the managed identity, can not be used at the same time as clientID
             */
            resourceID?: pulumi.Input<string>;
        }

        /**
         * Use the Google Cloud DNS API to manage DNS01 challenge records.
         */
        export interface IssuerSpecAcmeSolversDns01ClouddnsArgs {
            /**
             * HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
             */
            hostedZoneName?: pulumi.Input<string>;
            project: pulumi.Input<string>;
            /**
             * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
             */
            serviceAccountSecretRef?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01ClouddnsServiceaccountsecretrefArgs>;
        }

        /**
         * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
         */
        export interface IssuerSpecAcmeSolversDns01ClouddnsServiceaccountsecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Use the Cloudflare API to manage DNS01 challenge records.
         */
        export interface IssuerSpecAcmeSolversDns01CloudflareArgs {
            /**
             * API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
             */
            apiKeySecretRef?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01CloudflareApikeysecretrefArgs>;
            /**
             * API token used to authenticate with Cloudflare.
             */
            apiTokenSecretRef?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01CloudflareApitokensecretrefArgs>;
            /**
             * Email of the account, only required when using API key based authentication.
             */
            email?: pulumi.Input<string>;
        }

        /**
         * API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
         */
        export interface IssuerSpecAcmeSolversDns01CloudflareApikeysecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * API token used to authenticate with Cloudflare.
         */
        export interface IssuerSpecAcmeSolversDns01CloudflareApitokensecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Use the DigitalOcean DNS API to manage DNS01 challenge records.
         */
        export interface IssuerSpecAcmeSolversDns01DigitaloceanArgs {
            /**
             * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
             */
            tokenSecretRef: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01DigitaloceanTokensecretrefArgs>;
        }

        /**
         * A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
         */
        export interface IssuerSpecAcmeSolversDns01DigitaloceanTokensecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
         */
        export interface IssuerSpecAcmeSolversDns01Rfc2136Args {
            /**
             * The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
             */
            nameserver: pulumi.Input<string>;
            /**
             * The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
             */
            tsigAlgorithm?: pulumi.Input<string>;
            /**
             * The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
             */
            tsigKeyName?: pulumi.Input<string>;
            /**
             * The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
             */
            tsigSecretSecretRef?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01Rfc2136TsigsecretsecretrefArgs>;
        }

        /**
         * The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
         */
        export interface IssuerSpecAcmeSolversDns01Rfc2136TsigsecretsecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Use the AWS Route53 API to manage DNS01 challenge records.
         */
        export interface IssuerSpecAcmeSolversDns01Route53Args {
            /**
             * The AccessKeyID is used for authentication. Cannot be set when SecretAccessKeyID is set. If neither the Access Key nor Key ID are set, we "fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https"://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
             */
            accessKeyID?: pulumi.Input<string>;
            /**
             * The SecretAccessKey is used for authentication. If set, pull the AWS access key ID from a key within a Kubernetes Secret. Cannot be set when AccessKeyID is set. If neither the Access Key nor Key ID are set, we "fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https"://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
             */
            accessKeyIDSecretRef?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01Route53AccesskeyidsecretrefArgs>;
            /**
             * If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
             */
            hostedZoneID?: pulumi.Input<string>;
            /**
             * Always set the region when using AccessKeyID and SecretAccessKey
             */
            region: pulumi.Input<string>;
            /**
             * Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
             */
            role?: pulumi.Input<string>;
            /**
             * The SecretAccessKey is used for authentication. If neither the Access Key nor Key ID are set, we "fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https"://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
             */
            secretAccessKeySecretRef?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversDns01Route53SecretaccesskeysecretrefArgs>;
        }

        /**
         * The SecretAccessKey is used for authentication. If set, pull the AWS access key ID from a key within a Kubernetes Secret. Cannot be set when AccessKeyID is set. If neither the Access Key nor Key ID are set, we "fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https"://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
         */
        export interface IssuerSpecAcmeSolversDns01Route53AccesskeyidsecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * The SecretAccessKey is used for authentication. If neither the Access Key nor Key ID are set, we "fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https"://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
         */
        export interface IssuerSpecAcmeSolversDns01Route53SecretaccesskeysecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
         */
        export interface IssuerSpecAcmeSolversDns01WebhookArgs {
            /**
             * Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
             */
            config?: pulumi.Input<{[key: string]: any}>;
            /**
             * The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
             */
            groupName: pulumi.Input<string>;
            /**
             * The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
             */
            solverName: pulumi.Input<string>;
        }

        /**
         * Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
         */
        export interface IssuerSpecAcmeSolversHttp01Args {
            /**
             * The Gateway API is a "sig-network community API that models service networking in Kubernetes (https"://gateway-api.sigs.k8s.io/). The Gateway solver will create HTTPRoutes with the specified labels in the same namespace as the challenge. This solver is experimental, and fields / behaviour may change in the future.
             */
            gatewayHTTPRoute?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01GatewayhttprouteArgs>;
            /**
             * The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
             */
            ingress?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressArgs>;
        }

        /**
         * The Gateway API is a "sig-network community API that models service networking in Kubernetes (https"://gateway-api.sigs.k8s.io/). The Gateway solver will create HTTPRoutes with the specified labels in the same namespace as the challenge. This solver is experimental, and fields / behaviour may change in the future.
         */
        export interface IssuerSpecAcmeSolversHttp01GatewayhttprouteArgs {
            /**
             * Custom labels that will be applied to HTTPRoutes created by cert-manager while solving HTTP-01 challenges.
             */
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * When solving an HTTP-01 challenge, "cert-manager creates an HTTPRoute. cert-manager needs to know which parentRefs should be used when creating the HTTPRoute. Usually, the parentRef references a Gateway. See: https"://gateway-api.sigs.k8s.io/v1alpha2/api-types/httproute/#attaching-to-gateways
             */
            parentRefs?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01GatewayhttprouteParentrefsArgs>[]>;
            /**
             * Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.
             */
            serviceType?: pulumi.Input<string>;
        }

        /**
         * ParentRef identifies an API object (usually a Gateway) that can be considered a parent of this resource (usually a route). The only kind of parent resource with "Core" support is Gateway. This API may be extended in the future to support additional kinds of parent resources, such as HTTPRoute. 
         *  The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid. 
         *  References to objects with invalid Group and Kind are not valid, and must be rejected by the implementation, with appropriate Conditions set on the containing object.
         */
        export interface IssuerSpecAcmeSolversHttp01GatewayhttprouteParentrefsArgs {
            /**
             * Group is the group of the referent. 
             *  Support: Core
             */
            group?: pulumi.Input<string>;
            /**
             * Kind is kind of the referent. 
             *  Support: Core (Gateway) Support: Custom (Other Resources)
             */
            kind?: pulumi.Input<string>;
            /**
             * Name is the name of the referent. 
             *  Support: Core
             */
            name: pulumi.Input<string>;
            /**
             * Namespace is the namespace of the referent. When unspecified (or empty string), this refers to the local namespace of the Route. 
             *  Support: Core
             */
            namespace?: pulumi.Input<string>;
            /**
             * SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: 
             *  * Gateway: Listener Name 
             *  Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. 
             *  When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. 
             *  Support: Core
             */
            sectionName?: pulumi.Input<string>;
        }
        /**
         * issuerSpecAcmeSolversHttp01GatewayhttprouteParentrefsArgsProvideDefaults sets the appropriate defaults for IssuerSpecAcmeSolversHttp01GatewayhttprouteParentrefsArgs
         */
        export function issuerSpecAcmeSolversHttp01GatewayhttprouteParentrefsArgsProvideDefaults(val: IssuerSpecAcmeSolversHttp01GatewayhttprouteParentrefsArgs): IssuerSpecAcmeSolversHttp01GatewayhttprouteParentrefsArgs {
            return {
                ...val,
                group: (val.group) ?? "gateway.networking.k8s.io",
                kind: (val.kind) ?? "Gateway",
            };
        }

        /**
         * The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressArgs {
            /**
             * The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
             */
            class?: pulumi.Input<string>;
            /**
             * Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges.
             */
            ingressTemplate?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressIngresstemplateArgs>;
            /**
             * The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
             */
            name?: pulumi.Input<string>;
            /**
             * Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges.
             */
            podTemplate?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateArgs>;
            /**
             * Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.
             */
            serviceType?: pulumi.Input<string>;
        }

        /**
         * Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressIngresstemplateArgs {
            /**
             * ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
             */
            metadata?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressIngresstemplateMetadataArgs>;
        }

        /**
         * ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressIngresstemplateMetadataArgs {
            /**
             * Annotations that should be added to the created ACME HTTP01 solver ingress.
             */
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * Labels that should be added to the created ACME HTTP01 solver ingress.
             */
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateArgs {
            /**
             * ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
             */
            metadata?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateMetadataArgs>;
            /**
             * PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
             */
            spec?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecArgs>;
        }

        /**
         * ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateMetadataArgs {
            /**
             * Annotations that should be added to the create ACME HTTP01 solver pods.
             */
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * Labels that should be added to the created ACME HTTP01 solver pods.
             */
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecArgs {
            /**
             * If specified, the pod's scheduling constraints
             */
            affinity?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityArgs>;
            /**
             * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
             */
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * If specified, the pod's priorityClassName.
             */
            priorityClassName?: pulumi.Input<string>;
            /**
             * If specified, the pod's service account
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * If specified, the pod's tolerations.
             */
            tolerations?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecTolerationsArgs>[]>;
        }

        /**
         * If specified, the pod's scheduling constraints
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityArgs {
            /**
             * Describes node affinity scheduling rules for the pod.
             */
            nodeAffinity?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityArgs>;
            /**
             * Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
             */
            podAffinity?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityArgs>;
            /**
             * Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
             */
            podAntiAffinity?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityArgs>;
        }

        /**
         * Describes node affinity scheduling rules for the pod.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityArgs {
            /**
             * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
             */
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            /**
             * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
             */
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        /**
         * An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            /**
             * A node selector term, associated with the corresponding weight.
             */
            preference: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            /**
             * Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
             */
            weight: pulumi.Input<number>;
        }

        /**
         * A node selector term, associated with the corresponding weight.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            /**
             * A list of node selector requirements by node's labels.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            /**
             * A list of node selector requirements by node's fields.
             */
            matchFields?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        /**
         * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            /**
             * The label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
             */
            operator: pulumi.Input<string>;
            /**
             * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            /**
             * The label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
             */
            operator: pulumi.Input<string>;
            /**
             * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            /**
             * Required. A list of node selector terms. The terms are ORed.
             */
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        /**
         * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            /**
             * A list of node selector requirements by node's labels.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            /**
             * A list of node selector requirements by node's fields.
             */
            matchFields?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        /**
         * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            /**
             * The label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
             */
            operator: pulumi.Input<string>;
            /**
             * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            /**
             * The label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
             */
            operator: pulumi.Input<string>;
            /**
             * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityArgs {
            /**
             * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
             */
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            /**
             * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
             */
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        /**
         * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            /**
             * Required. A pod affinity term, associated with the corresponding weight.
             */
            podAffinityTerm: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            /**
             * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
             */
            weight: pulumi.Input<number>;
        }

        /**
         * Required. A pod affinity term, associated with the corresponding weight.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            /**
             * A label query over a set of resources, in this case pods.
             */
            labelSelector?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            /**
             * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
             */
            namespaceSelector?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs>;
            /**
             * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
             */
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
             */
            topologyKey: pulumi.Input<string>;
        }

        /**
         * A label query over a set of resources, in this case pods.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            /**
             * A label query over a set of resources, in this case pods.
             */
            labelSelector?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            /**
             * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
             */
            namespaceSelector?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs>;
            /**
             * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
             */
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
             */
            topologyKey: pulumi.Input<string>;
        }

        /**
         * A label query over a set of resources, in this case pods.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityArgs {
            /**
             * The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
             */
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            /**
             * If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
             */
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        /**
         * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            /**
             * Required. A pod affinity term, associated with the corresponding weight.
             */
            podAffinityTerm: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            /**
             * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
             */
            weight: pulumi.Input<number>;
        }

        /**
         * Required. A pod affinity term, associated with the corresponding weight.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            /**
             * A label query over a set of resources, in this case pods.
             */
            labelSelector?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            /**
             * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
             */
            namespaceSelector?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs>;
            /**
             * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
             */
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
             */
            topologyKey: pulumi.Input<string>;
        }

        /**
         * A label query over a set of resources, in this case pods.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermNamespaceselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            /**
             * A label query over a set of resources, in this case pods.
             */
            labelSelector?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            /**
             * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
             */
            namespaceSelector?: pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs>;
            /**
             * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
             */
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
             */
            topologyKey: pulumi.Input<string>;
        }

        /**
         * A label query over a set of resources, in this case pods.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionNamespaceselectorMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
         */
        export interface IssuerSpecAcmeSolversHttp01IngressPodtemplateSpecTolerationsArgs {
            /**
             * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
             */
            effect?: pulumi.Input<string>;
            /**
             * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
             */
            key?: pulumi.Input<string>;
            /**
             * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
             */
            operator?: pulumi.Input<string>;
            /**
             * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
             */
            tolerationSeconds?: pulumi.Input<number>;
            /**
             * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
             */
            value?: pulumi.Input<string>;
        }

        /**
         * Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
         */
        export interface IssuerSpecAcmeSolversSelectorArgs {
            /**
             * List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
             */
            dnsNames?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
             */
            dnsZones?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
         */
        export interface IssuerSpecCaArgs {
            /**
             * The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
             */
            crlDistributionPoints?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * The OCSP server list is an X.509 v3 extension that defines a list of URLs of OCSP responders. The OCSP responders can be queried for the revocation status of an issued certificate. If not set, the certificate will be issued with no OCSP servers set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
             */
            ocspServers?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * SecretName is the name of the secret used to sign Certificates issued by this Issuer.
             */
            secretName: pulumi.Input<string>;
        }

        /**
         * SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
         */
        export interface IssuerSpecSelfsignedArgs {
            /**
             * The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
             */
            crlDistributionPoints?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
         */
        export interface IssuerSpecVaultArgs {
            /**
             * Auth configures how cert-manager authenticates with the Vault server.
             */
            auth: pulumi.Input<inputs.certmanager.v1.IssuerSpecVaultAuthArgs>;
            /**
             * PEM-encoded CA bundle (base64-encoded) used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
             */
            caBundle?: pulumi.Input<string>;
            /**
             * Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure M"ulti-tenancy. e.g: "ns1" More about namespaces can be found here https"://www.vaultproject.io/docs/enterprise/namespaces
             */
            namespace?: pulumi.Input<string>;
            /**
             * Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".
             */
            path: pulumi.Input<string>;
            /**
             * Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
             */
            server: pulumi.Input<string>;
        }

        /**
         * Auth configures how cert-manager authenticates with the Vault server.
         */
        export interface IssuerSpecVaultAuthArgs {
            /**
             * AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
             */
            appRole?: pulumi.Input<inputs.certmanager.v1.IssuerSpecVaultAuthApproleArgs>;
            /**
             * Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
             */
            kubernetes?: pulumi.Input<inputs.certmanager.v1.IssuerSpecVaultAuthKubernetesArgs>;
            /**
             * TokenSecretRef authenticates with Vault by presenting a token.
             */
            tokenSecretRef?: pulumi.Input<inputs.certmanager.v1.IssuerSpecVaultAuthTokensecretrefArgs>;
        }

        /**
         * AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
         */
        export interface IssuerSpecVaultAuthApproleArgs {
            /**
             * Path where the App Role authentication backend is mounted in Vault, e.g: "approle"
             */
            path: pulumi.Input<string>;
            /**
             * RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
             */
            roleId: pulumi.Input<string>;
            /**
             * Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
             */
            secretRef: pulumi.Input<inputs.certmanager.v1.IssuerSpecVaultAuthApproleSecretrefArgs>;
        }

        /**
         * Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
         */
        export interface IssuerSpecVaultAuthApproleSecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
         */
        export interface IssuerSpecVaultAuthKubernetesArgs {
            /**
             * The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
             */
            mountPath?: pulumi.Input<string>;
            /**
             * A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
             */
            role: pulumi.Input<string>;
            /**
             * The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
             */
            secretRef: pulumi.Input<inputs.certmanager.v1.IssuerSpecVaultAuthKubernetesSecretrefArgs>;
        }

        /**
         * The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
         */
        export interface IssuerSpecVaultAuthKubernetesSecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * TokenSecretRef authenticates with Vault by presenting a token.
         */
        export interface IssuerSpecVaultAuthTokensecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
         */
        export interface IssuerSpecVenafiArgs {
            /**
             * Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
             */
            cloud?: pulumi.Input<inputs.certmanager.v1.IssuerSpecVenafiCloudArgs>;
            /**
             * TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
             */
            tpp?: pulumi.Input<inputs.certmanager.v1.IssuerSpecVenafiTppArgs>;
            /**
             * Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
             */
            zone: pulumi.Input<string>;
        }

        /**
         * Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
         */
        export interface IssuerSpecVenafiCloudArgs {
            /**
             * APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
             */
            apiTokenSecretRef: pulumi.Input<inputs.certmanager.v1.IssuerSpecVenafiCloudApitokensecretrefArgs>;
            /**
             * URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
             */
            url?: pulumi.Input<string>;
        }

        /**
         * APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
         */
        export interface IssuerSpecVenafiCloudApitokensecretrefArgs {
            /**
             * The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
             */
            key?: pulumi.Input<string>;
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
         */
        export interface IssuerSpecVenafiTppArgs {
            /**
             * CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.
             */
            caBundle?: pulumi.Input<string>;
            /**
             * CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
             */
            credentialsRef: pulumi.Input<inputs.certmanager.v1.IssuerSpecVenafiTppCredentialsrefArgs>;
            /**
             * URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".
             */
            url: pulumi.Input<string>;
        }

        /**
         * CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
         */
        export interface IssuerSpecVenafiTppCredentialsrefArgs {
            /**
             * Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name: pulumi.Input<string>;
        }

        /**
         * Status of the Issuer. This is set and managed automatically.
         */
        export interface IssuerStatusArgs {
            /**
             * ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
             */
            acme?: pulumi.Input<inputs.certmanager.v1.IssuerStatusAcmeArgs>;
            /**
             * List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
             */
            conditions?: pulumi.Input<pulumi.Input<inputs.certmanager.v1.IssuerStatusConditionsArgs>[]>;
        }

        /**
         * ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
         */
        export interface IssuerStatusAcmeArgs {
            /**
             * LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
             */
            lastRegisteredEmail?: pulumi.Input<string>;
            /**
             * URI is the unique account identifier, which can also be used to retrieve account details from the CA
             */
            uri?: pulumi.Input<string>;
        }

        /**
         * IssuerCondition contains condition information for an Issuer.
         */
        export interface IssuerStatusConditionsArgs {
            /**
             * LastTransitionTime is the timestamp corresponding to the last status change of this condition.
             */
            lastTransitionTime?: pulumi.Input<string>;
            /**
             * Message is a human readable description of the details of the last transition, complementing reason.
             */
            message?: pulumi.Input<string>;
            /**
             * If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Issuer.
             */
            observedGeneration?: pulumi.Input<number>;
            /**
             * Reason is a brief machine readable explanation for the condition's last transition.
             */
            reason?: pulumi.Input<string>;
            /**
             * Status of the condition, one of (`True`, `False`, `Unknown`).
             */
            status: pulumi.Input<string>;
            /**
             * Type of the condition, known values are (`Ready`).
             */
            type: pulumi.Input<string>;
        }
    }
}

export namespace jetstream {
    export namespace v1beta1 {
        export interface ConsumerSpecArgs {
            /**
             * How messages should be acknowledged.
             */
            ackPolicy?: pulumi.Input<string>;
            /**
             * How long to allow messages to remain un-acknowledged before attempting redelivery.
             */
            ackWait?: pulumi.Input<string>;
            /**
             * The name of a queue group.
             */
            deliverGroup?: pulumi.Input<string>;
            deliverPolicy?: pulumi.Input<string>;
            /**
             * The subject to deliver observed messages, when not set, a pull-based Consumer is created.
             */
            deliverSubject?: pulumi.Input<string>;
            /**
             * The description of the consumer.
             */
            description?: pulumi.Input<string>;
            /**
             * The name of the Consumer.
             */
            durableName?: pulumi.Input<string>;
            /**
             * Select only a specific incoming subjects, supports wildcards.
             */
            filterSubject?: pulumi.Input<string>;
            /**
             * Enables flow control.
             */
            flowControl?: pulumi.Input<boolean>;
            /**
             * The interval used to deliver idle heartbeats for push-based consumers, in Go's time.Duration format.
             */
            heartbeatInterval?: pulumi.Input<string>;
            /**
             * Maximum pending Acks before consumers are paused
             */
            maxAckPending?: pulumi.Input<number>;
            maxDeliver?: pulumi.Input<number>;
            optStartSeq?: pulumi.Input<number>;
            /**
             * Time format must be RFC3339.
             */
            optStartTime?: pulumi.Input<string>;
            /**
             * rate at which messages will be delivered to clients, expressed in bit per second.
             */
            rateLimitBps?: pulumi.Input<number>;
            /**
             * How messages are sent.
             */
            replayPolicy?: pulumi.Input<string>;
            /**
             * What percentage of acknowledgements should be samples for observability.
             */
            sampleFreq?: pulumi.Input<string>;
            /**
             * The name of the Stream to create the Consumer in.
             */
            streamName?: pulumi.Input<string>;
        }
        /**
         * consumerSpecArgsProvideDefaults sets the appropriate defaults for ConsumerSpecArgs
         */
        export function consumerSpecArgsProvideDefaults(val: ConsumerSpecArgs): ConsumerSpecArgs {
            return {
                ...val,
                ackPolicy: (val.ackPolicy) ?? "none",
                ackWait: (val.ackWait) ?? "1ns",
                deliverPolicy: (val.deliverPolicy) ?? "all",
                flowControl: (val.flowControl) ?? false,
                replayPolicy: (val.replayPolicy) ?? "instant",
            };
        }

        export interface ConsumerStatusArgs {
            conditions?: pulumi.Input<pulumi.Input<inputs.jetstream.v1beta1.ConsumerStatusConditionsArgs>[]>;
            observedGeneration?: pulumi.Input<number>;
        }

        export interface ConsumerStatusConditionsArgs {
            lastTransitionTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface StreamSpecArgs {
            /**
             * The description of the stream.
             */
            description?: pulumi.Input<string>;
            /**
             * When a Stream reach it's limits either old messages are deleted or new ones are denied.
             */
            discard?: pulumi.Input<string>;
            /**
             * The duration window to track duplicate messages for.
             */
            duplicateWindow?: pulumi.Input<string>;
            /**
             * Maximum age of any message in the stream, expressed in Go's time.Duration format. Empty for unlimited.
             */
            maxAge?: pulumi.Input<string>;
            /**
             * How big the Stream may be, when the combined stream size exceeds this old messages are removed. -1 for unlimited.
             */
            maxBytes?: pulumi.Input<number>;
            /**
             * How many Consumers can be defined for a given Stream. -1 for unlimited.
             */
            maxConsumers?: pulumi.Input<number>;
            /**
             * The largest message that will be accepted by the Stream. -1 for unlimited.
             */
            maxMsgSize?: pulumi.Input<number>;
            /**
             * How many messages may be in a Stream, oldest messages will be removed if the Stream exceeds this size. -1 for unlimited.
             */
            maxMsgs?: pulumi.Input<number>;
            /**
             * The maximum of messages per subject.
             */
            maxMsgsPerSubject?: pulumi.Input<number>;
            /**
             * A stream mirror.
             */
            mirror?: pulumi.Input<inputs.jetstream.v1beta1.StreamSpecMirrorArgs>;
            /**
             * A unique name for the Stream.
             */
            name?: pulumi.Input<string>;
            /**
             * Disables acknowledging messages that are received by the Stream.
             */
            noAck?: pulumi.Input<boolean>;
            /**
             * A stream's placement.
             */
            placement?: pulumi.Input<inputs.jetstream.v1beta1.StreamSpecPlacementArgs>;
            /**
             * How many replicas to keep for each message.
             */
            replicas?: pulumi.Input<number>;
            /**
             * How messages are retained in the Stream, once this is exceeded old messages are removed.
             */
            retention?: pulumi.Input<string>;
            /**
             * A stream's sources.
             */
            sources?: pulumi.Input<pulumi.Input<inputs.jetstream.v1beta1.StreamSpecSourcesArgs>[]>;
            /**
             * The storage backend to use for the Stream.
             */
            storage?: pulumi.Input<string>;
            /**
             * A list of subjects to consume, supports wildcards.
             */
            subjects?: pulumi.Input<pulumi.Input<string>[]>;
        }
        /**
         * streamSpecArgsProvideDefaults sets the appropriate defaults for StreamSpecArgs
         */
        export function streamSpecArgsProvideDefaults(val: StreamSpecArgs): StreamSpecArgs {
            return {
                ...val,
                discard: (val.discard) ?? "old",
                maxAge: (val.maxAge) ?? "",
                maxBytes: (val.maxBytes) ?? -1,
                maxConsumers: (val.maxConsumers) ?? -1,
                maxMsgSize: (val.maxMsgSize) ?? -1,
                maxMsgs: (val.maxMsgs) ?? -1,
                maxMsgsPerSubject: (val.maxMsgsPerSubject) ?? 0,
                noAck: (val.noAck) ?? false,
                replicas: (val.replicas) ?? 1,
                retention: (val.retention) ?? "limits",
                storage: (val.storage) ?? "memory",
            };
        }

        /**
         * A stream mirror.
         */
        export interface StreamSpecMirrorArgs {
            externalApiPrefix?: pulumi.Input<string>;
            externalDeliverPrefix?: pulumi.Input<string>;
            filterSubject?: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optStartSeq?: pulumi.Input<number>;
            /**
             * Time format must be RFC3339.
             */
            optStartTime?: pulumi.Input<string>;
        }

        /**
         * A stream's placement.
         */
        export interface StreamSpecPlacementArgs {
            cluster?: pulumi.Input<string>;
            tags?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface StreamSpecSourcesArgs {
            externalApiPrefix?: pulumi.Input<string>;
            externalDeliverPrefix?: pulumi.Input<string>;
            filterSubject?: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optStartSeq?: pulumi.Input<number>;
            /**
             * Time format must be RFC3339.
             */
            optStartTime?: pulumi.Input<string>;
        }

        export interface StreamStatusArgs {
            conditions?: pulumi.Input<pulumi.Input<inputs.jetstream.v1beta1.StreamStatusConditionsArgs>[]>;
            observedGeneration?: pulumi.Input<number>;
        }

        export interface StreamStatusConditionsArgs {
            lastTransitionTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface StreamTemplateSpecArgs {
            /**
             * When a Stream reach it's limits either old messages are deleted or new ones are denied.
             */
            discard?: pulumi.Input<string>;
            /**
             * The duration window to track duplicate messages for.
             */
            duplicateWindow?: pulumi.Input<string>;
            /**
             * Maximum age of any message in the stream, expressed in Go's time.Duration format. Empty for unlimited.
             */
            maxAge?: pulumi.Input<string>;
            /**
             * How big the Stream may be, when the combined stream size exceeds this old messages are removed. -1 for unlimited.
             */
            maxBytes?: pulumi.Input<number>;
            /**
             * How many Consumers can be defined for a given Stream. -1 for unlimited.
             */
            maxConsumers?: pulumi.Input<number>;
            /**
             * The largest message that will be accepted by the Stream. -1 for unlimited.
             */
            maxMsgSize?: pulumi.Input<number>;
            /**
             * How many messages may be in a Stream, oldest messages will be removed if the Stream exceeds this size. -1 for unlimited.
             */
            maxMsgs?: pulumi.Input<number>;
            /**
             * The maximum number of Streams this Template can create, -1 for unlimited.
             */
            maxStreams?: pulumi.Input<number>;
            /**
             * A unique name for the Stream Template.
             */
            name?: pulumi.Input<string>;
            /**
             * Disables acknowledging messages that are received by the Stream.
             */
            noAck?: pulumi.Input<boolean>;
            /**
             * How many replicas to keep for each message.
             */
            replicas?: pulumi.Input<number>;
            /**
             * How messages are retained in the Stream, once this is exceeded old messages are removed.
             */
            retention?: pulumi.Input<string>;
            /**
             * The storage backend to use for the Stream.
             */
            storage?: pulumi.Input<string>;
            /**
             * A list of subjects to consume, supports wildcards.
             */
            subjects?: pulumi.Input<pulumi.Input<string>[]>;
        }
        /**
         * streamTemplateSpecArgsProvideDefaults sets the appropriate defaults for StreamTemplateSpecArgs
         */
        export function streamTemplateSpecArgsProvideDefaults(val: StreamTemplateSpecArgs): StreamTemplateSpecArgs {
            return {
                ...val,
                discard: (val.discard) ?? "old",
                maxAge: (val.maxAge) ?? "",
                maxBytes: (val.maxBytes) ?? -1,
                maxConsumers: (val.maxConsumers) ?? -1,
                maxMsgSize: (val.maxMsgSize) ?? -1,
                maxMsgs: (val.maxMsgs) ?? -1,
                maxStreams: (val.maxStreams) ?? -1,
                noAck: (val.noAck) ?? false,
                replicas: (val.replicas) ?? 1,
                retention: (val.retention) ?? "limits",
                storage: (val.storage) ?? "memory",
            };
        }

        export interface StreamTemplateStatusArgs {
            conditions?: pulumi.Input<pulumi.Input<inputs.jetstream.v1beta1.StreamTemplateStatusConditionsArgs>[]>;
            observedGeneration?: pulumi.Input<number>;
        }

        export interface StreamTemplateStatusConditionsArgs {
            lastTransitionTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }
    }

    export namespace v1beta2 {
        export interface AccountSpecArgs {
            /**
             * The creds to be used to connect to the NATS Service.
             */
            creds?: pulumi.Input<inputs.jetstream.v1beta2.AccountSpecCredsArgs>;
            /**
             * A unique name for the Account.
             */
            name?: pulumi.Input<string>;
            /**
             * A list of servers to connect.
             */
            servers?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * The TLS certs to be used to connect to the NATS Service.
             */
            tls?: pulumi.Input<inputs.jetstream.v1beta2.AccountSpecTlsArgs>;
        }

        /**
         * The creds to be used to connect to the NATS Service.
         */
        export interface AccountSpecCredsArgs {
            /**
             * Credentials file.
             */
            file?: pulumi.Input<string>;
            secret?: pulumi.Input<inputs.jetstream.v1beta2.AccountSpecCredsSecretArgs>;
        }

        export interface AccountSpecCredsSecretArgs {
            /**
             * Name of the secret with the creds.
             */
            name?: pulumi.Input<string>;
        }

        /**
         * The TLS certs to be used to connect to the NATS Service.
         */
        export interface AccountSpecTlsArgs {
            /**
             * Filename of the Root CA of the TLS cert.
             */
            ca?: pulumi.Input<string>;
            /**
             * Filename of the TLS cert.
             */
            cert?: pulumi.Input<string>;
            /**
             * Filename of the TLS cert key.
             */
            key?: pulumi.Input<string>;
            secret?: pulumi.Input<inputs.jetstream.v1beta2.AccountSpecTlsSecretArgs>;
        }

        export interface AccountSpecTlsSecretArgs {
            /**
             * Name of the TLS secret with the certs.
             */
            name?: pulumi.Input<string>;
        }

        export interface ConsumerSpecArgs {
            /**
             * Name of the account to which the Consumer belongs.
             */
            account?: pulumi.Input<string>;
            /**
             * How messages should be acknowledged.
             */
            ackPolicy?: pulumi.Input<string>;
            /**
             * How long to allow messages to remain un-acknowledged before attempting redelivery.
             */
            ackWait?: pulumi.Input<string>;
            /**
             * NATS user credentials for connecting to servers. Please make sure your controller has mounted the cerds on its path.
             */
            creds?: pulumi.Input<string>;
            /**
             * The name of a queue group.
             */
            deliverGroup?: pulumi.Input<string>;
            deliverPolicy?: pulumi.Input<string>;
            /**
             * The subject to deliver observed messages, when not set, a pull-based Consumer is created.
             */
            deliverSubject?: pulumi.Input<string>;
            /**
             * The description of the consumer.
             */
            description?: pulumi.Input<string>;
            /**
             * The name of the Consumer.
             */
            durableName?: pulumi.Input<string>;
            /**
             * Select only a specific incoming subjects, supports wildcards.
             */
            filterSubject?: pulumi.Input<string>;
            /**
             * Enables flow control.
             */
            flowControl?: pulumi.Input<boolean>;
            /**
             * The interval used to deliver idle heartbeats for push-based consumers, in Go's time.Duration format.
             */
            heartbeatInterval?: pulumi.Input<string>;
            /**
             * Maximum pending Acks before consumers are paused
             */
            maxAckPending?: pulumi.Input<number>;
            maxDeliver?: pulumi.Input<number>;
            /**
             * NATS user NKey for connecting to servers.
             */
            nkey?: pulumi.Input<string>;
            optStartSeq?: pulumi.Input<number>;
            /**
             * Time format must be RFC3339.
             */
            optStartTime?: pulumi.Input<string>;
            /**
             * rate at which messages will be delivered to clients, expressed in bit per second.
             */
            rateLimitBps?: pulumi.Input<number>;
            /**
             * How messages are sent.
             */
            replayPolicy?: pulumi.Input<string>;
            /**
             * What percentage of acknowledgements should be samples for observability.
             */
            sampleFreq?: pulumi.Input<string>;
            /**
             * A list of servers for creating consumer
             */
            servers?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * The name of the Stream to create the Consumer in.
             */
            streamName?: pulumi.Input<string>;
            /**
             * A client's TLS certs and keys.
             */
            tls?: pulumi.Input<inputs.jetstream.v1beta2.ConsumerSpecTlsArgs>;
        }
        /**
         * consumerSpecArgsProvideDefaults sets the appropriate defaults for ConsumerSpecArgs
         */
        export function consumerSpecArgsProvideDefaults(val: ConsumerSpecArgs): ConsumerSpecArgs {
            return {
                ...val,
                ackPolicy: (val.ackPolicy) ?? "none",
                ackWait: (val.ackWait) ?? "1ns",
                creds: (val.creds) ?? "",
                deliverPolicy: (val.deliverPolicy) ?? "all",
                flowControl: (val.flowControl) ?? false,
                nkey: (val.nkey) ?? "",
                replayPolicy: (val.replayPolicy) ?? "instant",
            };
        }

        /**
         * A client's TLS certs and keys.
         */
        export interface ConsumerSpecTlsArgs {
            /**
             * A client's cert filepath. Should be mounted.
             */
            clientCert?: pulumi.Input<string>;
            /**
             * A client's key filepath. Should be mounted.
             */
            clientKey?: pulumi.Input<string>;
            /**
             * A list of filepaths to CAs. Should be mounted.
             */
            rootCas?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ConsumerStatusArgs {
            conditions?: pulumi.Input<pulumi.Input<inputs.jetstream.v1beta2.ConsumerStatusConditionsArgs>[]>;
            observedGeneration?: pulumi.Input<number>;
        }

        export interface ConsumerStatusConditionsArgs {
            lastTransitionTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface StreamSpecArgs {
            /**
             * Name of the account to which the Stream belongs.
             */
            account?: pulumi.Input<string>;
            /**
             * NATS user credentials for connecting to servers. Please make sure your controller has mounted the cerds on its path.
             */
            creds?: pulumi.Input<string>;
            /**
             * The description of the stream.
             */
            description?: pulumi.Input<string>;
            /**
             * When a Stream reach it's limits either old messages are deleted or new ones are denied.
             */
            discard?: pulumi.Input<string>;
            /**
             * The duration window to track duplicate messages for.
             */
            duplicateWindow?: pulumi.Input<string>;
            /**
             * Maximum age of any message in the stream, expressed in Go's time.Duration format. Empty for unlimited.
             */
            maxAge?: pulumi.Input<string>;
            /**
             * How big the Stream may be, when the combined stream size exceeds this old messages are removed. -1 for unlimited.
             */
            maxBytes?: pulumi.Input<number>;
            /**
             * How many Consumers can be defined for a given Stream. -1 for unlimited.
             */
            maxConsumers?: pulumi.Input<number>;
            /**
             * The largest message that will be accepted by the Stream. -1 for unlimited.
             */
            maxMsgSize?: pulumi.Input<number>;
            /**
             * How many messages may be in a Stream, oldest messages will be removed if the Stream exceeds this size. -1 for unlimited.
             */
            maxMsgs?: pulumi.Input<number>;
            /**
             * The maximum of messages per subject.
             */
            maxMsgsPerSubject?: pulumi.Input<number>;
            /**
             * A stream mirror.
             */
            mirror?: pulumi.Input<inputs.jetstream.v1beta2.StreamSpecMirrorArgs>;
            /**
             * A unique name for the Stream.
             */
            name?: pulumi.Input<string>;
            /**
             * NATS user NKey for connecting to servers.
             */
            nkey?: pulumi.Input<string>;
            /**
             * Disables acknowledging messages that are received by the Stream.
             */
            noAck?: pulumi.Input<boolean>;
            /**
             * A stream's placement.
             */
            placement?: pulumi.Input<inputs.jetstream.v1beta2.StreamSpecPlacementArgs>;
            /**
             * How many replicas to keep for each message.
             */
            replicas?: pulumi.Input<number>;
            /**
             * How messages are retained in the Stream, once this is exceeded old messages are removed.
             */
            retention?: pulumi.Input<string>;
            /**
             * A list of servers for creating stream
             */
            servers?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * A stream's sources.
             */
            sources?: pulumi.Input<pulumi.Input<inputs.jetstream.v1beta2.StreamSpecSourcesArgs>[]>;
            /**
             * The storage backend to use for the Stream.
             */
            storage?: pulumi.Input<string>;
            /**
             * A list of subjects to consume, supports wildcards.
             */
            subjects?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * A client's TLS certs and keys.
             */
            tls?: pulumi.Input<inputs.jetstream.v1beta2.StreamSpecTlsArgs>;
        }
        /**
         * streamSpecArgsProvideDefaults sets the appropriate defaults for StreamSpecArgs
         */
        export function streamSpecArgsProvideDefaults(val: StreamSpecArgs): StreamSpecArgs {
            return {
                ...val,
                creds: (val.creds) ?? "",
                discard: (val.discard) ?? "old",
                maxAge: (val.maxAge) ?? "",
                maxBytes: (val.maxBytes) ?? -1,
                maxConsumers: (val.maxConsumers) ?? -1,
                maxMsgSize: (val.maxMsgSize) ?? -1,
                maxMsgs: (val.maxMsgs) ?? -1,
                maxMsgsPerSubject: (val.maxMsgsPerSubject) ?? 0,
                nkey: (val.nkey) ?? "",
                noAck: (val.noAck) ?? false,
                replicas: (val.replicas) ?? 1,
                retention: (val.retention) ?? "limits",
                storage: (val.storage) ?? "memory",
            };
        }

        /**
         * A stream mirror.
         */
        export interface StreamSpecMirrorArgs {
            externalApiPrefix?: pulumi.Input<string>;
            externalDeliverPrefix?: pulumi.Input<string>;
            filterSubject?: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optStartSeq?: pulumi.Input<number>;
            /**
             * Time format must be RFC3339.
             */
            optStartTime?: pulumi.Input<string>;
        }

        /**
         * A stream's placement.
         */
        export interface StreamSpecPlacementArgs {
            cluster?: pulumi.Input<string>;
            tags?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface StreamSpecSourcesArgs {
            externalApiPrefix?: pulumi.Input<string>;
            externalDeliverPrefix?: pulumi.Input<string>;
            filterSubject?: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optStartSeq?: pulumi.Input<number>;
            /**
             * Time format must be RFC3339.
             */
            optStartTime?: pulumi.Input<string>;
        }

        /**
         * A client's TLS certs and keys.
         */
        export interface StreamSpecTlsArgs {
            /**
             * A client's cert filepath. Should be mounted.
             */
            clientCert?: pulumi.Input<string>;
            /**
             * A client's key filepath. Should be mounted.
             */
            clientKey?: pulumi.Input<string>;
            /**
             * A list of filepaths to CAs. Should be mounted.
             */
            rootCas?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface StreamStatusArgs {
            conditions?: pulumi.Input<pulumi.Input<inputs.jetstream.v1beta2.StreamStatusConditionsArgs>[]>;
            observedGeneration?: pulumi.Input<number>;
        }

        export interface StreamStatusConditionsArgs {
            lastTransitionTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }
    }
}

export namespace linkerd {
    export namespace v1alpha1 {
        /**
         * Spec is the custom resource spec
         */
        export interface ServiceProfileSpecArgs {
            dstOverrides?: pulumi.Input<pulumi.Input<inputs.linkerd.v1alpha1.ServiceProfileSpecDstoverridesArgs>[]>;
            opaquePorts?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * RetryBudget describes the maximum number of retries that should be issued to this service.
             */
            retryBudget?: pulumi.Input<inputs.linkerd.v1alpha1.ServiceProfileSpecRetrybudgetArgs>;
            routes: pulumi.Input<pulumi.Input<inputs.linkerd.v1alpha1.ServiceProfileSpecRoutesArgs>[]>;
        }

        /**
         * WeightedDst is a weighted alternate destination.
         */
        export interface ServiceProfileSpecDstoverridesArgs {
            authority?: pulumi.Input<string>;
            weight?: pulumi.Input<number | string>;
        }

        /**
         * RetryBudget describes the maximum number of retries that should be issued to this service.
         */
        export interface ServiceProfileSpecRetrybudgetArgs {
            minRetriesPerSecond: pulumi.Input<number>;
            retryRatio: pulumi.Input<number>;
            ttl: pulumi.Input<string>;
        }

        /**
         * RouteSpec specifies a Route resource.
         */
        export interface ServiceProfileSpecRoutesArgs {
            /**
             * RequestMatch describes the conditions under which to match a Route.
             */
            condition: pulumi.Input<inputs.linkerd.v1alpha1.ServiceProfileSpecRoutesConditionArgs>;
            isRetryable?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            responseClasses?: pulumi.Input<pulumi.Input<inputs.linkerd.v1alpha1.ServiceProfileSpecRoutesResponseclassesArgs>[]>;
            timeout?: pulumi.Input<string>;
        }

        /**
         * RequestMatch describes the conditions under which to match a Route.
         */
        export interface ServiceProfileSpecRoutesConditionArgs {
            all?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
            any?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
            method?: pulumi.Input<string>;
            not?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
            pathRegex?: pulumi.Input<string>;
        }

        /**
         * ResponseClass describes how to classify a response (e.g. success or failures).
         */
        export interface ServiceProfileSpecRoutesResponseclassesArgs {
            /**
             * ResponseMatch describes the conditions under which to classify a response.
             */
            condition: pulumi.Input<inputs.linkerd.v1alpha1.ServiceProfileSpecRoutesResponseclassesConditionArgs>;
            isFailure?: pulumi.Input<boolean>;
        }

        /**
         * ResponseMatch describes the conditions under which to classify a response.
         */
        export interface ServiceProfileSpecRoutesResponseclassesConditionArgs {
            all?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
            any?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
            not?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
            /**
             * Range describes a range of integers (e.g. status codes).
             */
            status?: pulumi.Input<inputs.linkerd.v1alpha1.ServiceProfileSpecRoutesResponseclassesConditionStatusArgs>;
        }

        /**
         * Range describes a range of integers (e.g. status codes).
         */
        export interface ServiceProfileSpecRoutesResponseclassesConditionStatusArgs {
            max?: pulumi.Input<number>;
            min?: pulumi.Input<number>;
        }

    }

    export namespace v1alpha2 {
        /**
         * Spec is the custom resource spec
         */
        export interface ServiceProfileSpecArgs {
            dstOverrides?: pulumi.Input<pulumi.Input<inputs.linkerd.v1alpha2.ServiceProfileSpecDstoverridesArgs>[]>;
            opaquePorts?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * RetryBudget describes the maximum number of retries that should be issued to this service.
             */
            retryBudget?: pulumi.Input<inputs.linkerd.v1alpha2.ServiceProfileSpecRetrybudgetArgs>;
            routes?: pulumi.Input<pulumi.Input<inputs.linkerd.v1alpha2.ServiceProfileSpecRoutesArgs>[]>;
        }

        /**
         * WeightedDst is a weighted alternate destination.
         */
        export interface ServiceProfileSpecDstoverridesArgs {
            authority?: pulumi.Input<string>;
            weight?: pulumi.Input<number | string>;
        }

        /**
         * RetryBudget describes the maximum number of retries that should be issued to this service.
         */
        export interface ServiceProfileSpecRetrybudgetArgs {
            minRetriesPerSecond: pulumi.Input<number>;
            retryRatio: pulumi.Input<number>;
            ttl: pulumi.Input<string>;
        }

        /**
         * RouteSpec specifies a Route resource.
         */
        export interface ServiceProfileSpecRoutesArgs {
            /**
             * RequestMatch describes the conditions under which to match a Route.
             */
            condition: pulumi.Input<inputs.linkerd.v1alpha2.ServiceProfileSpecRoutesConditionArgs>;
            isRetryable?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            responseClasses?: pulumi.Input<pulumi.Input<inputs.linkerd.v1alpha2.ServiceProfileSpecRoutesResponseclassesArgs>[]>;
            timeout?: pulumi.Input<string>;
        }

        /**
         * RequestMatch describes the conditions under which to match a Route.
         */
        export interface ServiceProfileSpecRoutesConditionArgs {
            all?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
            any?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
            method?: pulumi.Input<string>;
            not?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
            pathRegex?: pulumi.Input<string>;
        }

        /**
         * ResponseClass describes how to classify a response (e.g. success or failures).
         */
        export interface ServiceProfileSpecRoutesResponseclassesArgs {
            /**
             * ResponseMatch describes the conditions under which to classify a response.
             */
            condition: pulumi.Input<inputs.linkerd.v1alpha2.ServiceProfileSpecRoutesResponseclassesConditionArgs>;
            isFailure?: pulumi.Input<boolean>;
        }

        /**
         * ResponseMatch describes the conditions under which to classify a response.
         */
        export interface ServiceProfileSpecRoutesResponseclassesConditionArgs {
            all?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
            any?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
            not?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
            /**
             * Range describes a range of integers (e.g. status codes).
             */
            status?: pulumi.Input<inputs.linkerd.v1alpha2.ServiceProfileSpecRoutesResponseclassesConditionStatusArgs>;
        }

        /**
         * Range describes a range of integers (e.g. status codes).
         */
        export interface ServiceProfileSpecRoutesResponseclassesConditionStatusArgs {
            max?: pulumi.Input<number>;
            min?: pulumi.Input<number>;
        }

    }
}

export namespace longhorn {
    export namespace v1beta1 {
    }

    export namespace v1beta2 {
        /**
         * BackingImageDataSourceSpec defines the desired state of the Longhorn backing image data source
         */
        export interface BackingImageDataSourceSpecArgs {
            checksum?: pulumi.Input<string>;
            diskPath?: pulumi.Input<string>;
            diskUUID?: pulumi.Input<string>;
            fileTransferred?: pulumi.Input<boolean>;
            nodeID?: pulumi.Input<string>;
            parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            sourceType?: pulumi.Input<string>;
            uuid?: pulumi.Input<string>;
        }

        /**
         * BackingImageDataSourceStatus defines the observed state of the Longhorn backing image data source
         */
        export interface BackingImageDataSourceStatusArgs {
            checksum?: pulumi.Input<string>;
            currentState?: pulumi.Input<string>;
            ip?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            ownerID?: pulumi.Input<string>;
            progress?: pulumi.Input<number>;
            runningParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            size?: pulumi.Input<number>;
            storageIP?: pulumi.Input<string>;
        }

        /**
         * BackingImageManagerSpec defines the desired state of the Longhorn backing image manager
         */
        export interface BackingImageManagerSpecArgs {
            backingImages?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            diskPath?: pulumi.Input<string>;
            diskUUID?: pulumi.Input<string>;
            image?: pulumi.Input<string>;
            nodeID?: pulumi.Input<string>;
        }

        /**
         * BackingImageManagerStatus defines the observed state of the Longhorn backing image manager
         */
        export interface BackingImageManagerStatusArgs {
            apiMinVersion?: pulumi.Input<number>;
            apiVersion?: pulumi.Input<number>;
            backingImageFileMap?: pulumi.Input<{[key: string]: pulumi.Input<inputs.longhorn.v1beta2.BackingImageManagerStatusBackingimagefilemapArgs>}>;
            currentState?: pulumi.Input<string>;
            ip?: pulumi.Input<string>;
            ownerID?: pulumi.Input<string>;
            storageIP?: pulumi.Input<string>;
        }

        export interface BackingImageManagerStatusBackingimagefilemapArgs {
            currentChecksum?: pulumi.Input<string>;
            /**
             * Deprecated: This field is useless.
             */
            directory?: pulumi.Input<string>;
            /**
             * Deprecated: This field is renamed to `Progress`.
             */
            downloadProgress?: pulumi.Input<number>;
            message?: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            progress?: pulumi.Input<number>;
            senderManagerAddress?: pulumi.Input<string>;
            sendingReference?: pulumi.Input<number>;
            size?: pulumi.Input<number>;
            state?: pulumi.Input<string>;
            /**
             * Deprecated: This field is useless now. The manager of backing image files doesn't care if a file is downloaded and how.
             */
            url?: pulumi.Input<string>;
            uuid?: pulumi.Input<string>;
        }

        /**
         * BackingImageSpec defines the desired state of the Longhorn backing image
         */
        export interface BackingImageSpecArgs {
            checksum?: pulumi.Input<string>;
            disks?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * Deprecated: This kind of info will be included in the related BackingImageDataSource.
             */
            imageURL?: pulumi.Input<string>;
            sourceParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            sourceType?: pulumi.Input<string>;
        }

        /**
         * BackingImageStatus defines the observed state of the Longhorn backing image status
         */
        export interface BackingImageStatusArgs {
            checksum?: pulumi.Input<string>;
            /**
             * Deprecated: Replaced by field `Progress` in `DiskFileStatusMap`.
             */
            diskDownloadProgressMap?: pulumi.Input<{[key: string]: pulumi.Input<number>}>;
            /**
             * Deprecated: Replaced by field `State` in `DiskFileStatusMap`.
             */
            diskDownloadStateMap?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            diskFileStatusMap?: pulumi.Input<{[key: string]: pulumi.Input<inputs.longhorn.v1beta2.BackingImageStatusDiskfilestatusmapArgs>}>;
            diskLastRefAtMap?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            ownerID?: pulumi.Input<string>;
            size?: pulumi.Input<number>;
            uuid?: pulumi.Input<string>;
        }

        export interface BackingImageStatusDiskfilestatusmapArgs {
            lastStateTransitionTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            progress?: pulumi.Input<number>;
            state?: pulumi.Input<string>;
        }

        /**
         * BackupSpec defines the desired state of the Longhorn backup
         */
        export interface BackupSpecArgs {
            /**
             * The labels of snapshot backup.
             */
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * The snapshot name.
             */
            snapshotName?: pulumi.Input<string>;
            /**
             * The time to request run sync the remote backup.
             */
            syncRequestedAt?: pulumi.Input<string>;
        }

        /**
         * BackupStatus defines the observed state of the Longhorn backup
         */
        export interface BackupStatusArgs {
            /**
             * The snapshot backup upload finished time.
             */
            backupCreatedAt?: pulumi.Input<string>;
            /**
             * The error message when taking the snapshot backup.
             */
            error?: pulumi.Input<string>;
            /**
             * The labels of snapshot backup.
             */
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * The last time that the backup was synced with the remote backup target.
             */
            lastSyncedAt?: pulumi.Input<string>;
            /**
             * The error messages when calling longhorn engine on listing or inspecting backups.
             */
            messages?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * The node ID on which the controller is responsible to reconcile this backup CR.
             */
            ownerID?: pulumi.Input<string>;
            /**
             * The snapshot backup progress.
             */
            progress?: pulumi.Input<number>;
            /**
             * The address of the replica that runs snapshot backup.
             */
            replicaAddress?: pulumi.Input<string>;
            /**
             * The snapshot size.
             */
            size?: pulumi.Input<string>;
            /**
             * The snapshot creation time.
             */
            snapshotCreatedAt?: pulumi.Input<string>;
            /**
             * The snapshot name.
             */
            snapshotName?: pulumi.Input<string>;
            /**
             * The backup creation state. Can be "", "InProgress", "Completed", "Error", "Unknown".
             */
            state?: pulumi.Input<string>;
            /**
             * The snapshot backup URL.
             */
            url?: pulumi.Input<string>;
            /**
             * The volume's backing image name.
             */
            volumeBackingImageName?: pulumi.Input<string>;
            /**
             * The volume creation time.
             */
            volumeCreated?: pulumi.Input<string>;
            /**
             * The volume name.
             */
            volumeName?: pulumi.Input<string>;
            /**
             * The volume size.
             */
            volumeSize?: pulumi.Input<string>;
        }

        /**
         * BackupTargetSpec defines the desired state of the Longhorn backup target
         */
        export interface BackupTargetSpecArgs {
            /**
             * The backup target URL.
             */
            backupTargetURL?: pulumi.Input<string>;
            /**
             * The backup target credential secret.
             */
            credentialSecret?: pulumi.Input<string>;
            /**
             * The interval that the cluster needs to run sync with the backup target.
             */
            pollInterval?: pulumi.Input<string>;
            /**
             * The time to request run sync the remote backup target.
             */
            syncRequestedAt?: pulumi.Input<string>;
        }

        /**
         * BackupTargetStatus defines the observed state of the Longhorn backup target
         */
        export interface BackupTargetStatusArgs {
            /**
             * Available indicates if the remote backup target is available or not.
             */
            available?: pulumi.Input<boolean>;
            /**
             * Records the reason on why the backup target is unavailable.
             */
            conditions?: pulumi.Input<pulumi.Input<inputs.longhorn.v1beta2.BackupTargetStatusConditionsArgs>[]>;
            /**
             * The last time that the controller synced with the remote backup target.
             */
            lastSyncedAt?: pulumi.Input<string>;
            /**
             * The node ID on which the controller is responsible to reconcile this backup target CR.
             */
            ownerID?: pulumi.Input<string>;
        }

        export interface BackupTargetStatusConditionsArgs {
            /**
             * Last time we probed the condition.
             */
            lastProbeTime?: pulumi.Input<string>;
            /**
             * Last time the condition transitioned from one status to another.
             */
            lastTransitionTime?: pulumi.Input<string>;
            /**
             * Human-readable message indicating details about last transition.
             */
            message?: pulumi.Input<string>;
            /**
             * Unique, one-word, CamelCase reason for the condition's last transition.
             */
            reason?: pulumi.Input<string>;
            /**
             * Status is the status of the condition. Can be True, False, Unknown.
             */
            status?: pulumi.Input<string>;
            /**
             * Type is the type of the condition.
             */
            type?: pulumi.Input<string>;
        }

        /**
         * BackupVolumeSpec defines the desired state of the Longhorn backup volume
         */
        export interface BackupVolumeSpecArgs {
            /**
             * The time to request run sync the remote backup volume.
             */
            syncRequestedAt?: pulumi.Input<string>;
        }

        /**
         * BackupVolumeStatus defines the observed state of the Longhorn backup volume
         */
        export interface BackupVolumeStatusArgs {
            /**
             * the backing image checksum.
             */
            backingImageChecksum?: pulumi.Input<string>;
            /**
             * The backing image name.
             */
            backingImageName?: pulumi.Input<string>;
            /**
             * The backup volume creation time.
             */
            createdAt?: pulumi.Input<string>;
            /**
             * The backup volume block count.
             */
            dataStored?: pulumi.Input<string>;
            /**
             * The backup volume labels.
             */
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * The latest volume backup time.
             */
            lastBackupAt?: pulumi.Input<string>;
            /**
             * The latest volume backup name.
             */
            lastBackupName?: pulumi.Input<string>;
            /**
             * The backup volume config last modification time.
             */
            lastModificationTime?: pulumi.Input<string>;
            /**
             * The last time that the backup volume was synced into the cluster.
             */
            lastSyncedAt?: pulumi.Input<string>;
            /**
             * The error messages when call longhorn engine on list or inspect backup volumes.
             */
            messages?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * The node ID on which the controller is responsible to reconcile this backup volume CR.
             */
            ownerID?: pulumi.Input<string>;
            /**
             * The backup volume size.
             */
            size?: pulumi.Input<string>;
        }

        /**
         * EngineImageSpec defines the desired state of the Longhorn engine image
         */
        export interface EngineImageSpecArgs {
            image: pulumi.Input<string>;
        }

        /**
         * EngineImageStatus defines the observed state of the Longhorn engine image
         */
        export interface EngineImageStatusArgs {
            buildDate?: pulumi.Input<string>;
            cliAPIMinVersion?: pulumi.Input<number>;
            cliAPIVersion?: pulumi.Input<number>;
            conditions?: pulumi.Input<pulumi.Input<inputs.longhorn.v1beta2.EngineImageStatusConditionsArgs>[]>;
            controllerAPIMinVersion?: pulumi.Input<number>;
            controllerAPIVersion?: pulumi.Input<number>;
            dataFormatMinVersion?: pulumi.Input<number>;
            dataFormatVersion?: pulumi.Input<number>;
            gitCommit?: pulumi.Input<string>;
            noRefSince?: pulumi.Input<string>;
            nodeDeploymentMap?: pulumi.Input<{[key: string]: pulumi.Input<boolean>}>;
            ownerID?: pulumi.Input<string>;
            refCount?: pulumi.Input<number>;
            state?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface EngineImageStatusConditionsArgs {
            /**
             * Last time we probed the condition.
             */
            lastProbeTime?: pulumi.Input<string>;
            /**
             * Last time the condition transitioned from one status to another.
             */
            lastTransitionTime?: pulumi.Input<string>;
            /**
             * Human-readable message indicating details about last transition.
             */
            message?: pulumi.Input<string>;
            /**
             * Unique, one-word, CamelCase reason for the condition's last transition.
             */
            reason?: pulumi.Input<string>;
            /**
             * Status is the status of the condition. Can be True, False, Unknown.
             */
            status?: pulumi.Input<string>;
            /**
             * Type is the type of the condition.
             */
            type?: pulumi.Input<string>;
        }

        /**
         * EngineSpec defines the desired state of the Longhorn engine
         */
        export interface EngineSpecArgs {
            active?: pulumi.Input<boolean>;
            backupVolume?: pulumi.Input<string>;
            desireState?: pulumi.Input<string>;
            disableFrontend?: pulumi.Input<boolean>;
            engineImage?: pulumi.Input<string>;
            frontend?: pulumi.Input<string>;
            logRequested?: pulumi.Input<boolean>;
            nodeID?: pulumi.Input<string>;
            replicaAddressMap?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            requestedBackupRestore?: pulumi.Input<string>;
            requestedDataSource?: pulumi.Input<string>;
            revisionCounterDisabled?: pulumi.Input<boolean>;
            salvageRequested?: pulumi.Input<boolean>;
            upgradedReplicaAddressMap?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            volumeName?: pulumi.Input<string>;
            volumeSize?: pulumi.Input<string>;
        }

        /**
         * EngineStatus defines the observed state of the Longhorn engine
         */
        export interface EngineStatusArgs {
            backupStatus?: pulumi.Input<{[key: string]: pulumi.Input<inputs.longhorn.v1beta2.EngineStatusBackupstatusArgs>}>;
            cloneStatus?: pulumi.Input<{[key: string]: pulumi.Input<inputs.longhorn.v1beta2.EngineStatusClonestatusArgs>}>;
            currentImage?: pulumi.Input<string>;
            currentReplicaAddressMap?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            currentSize?: pulumi.Input<string>;
            currentState?: pulumi.Input<string>;
            endpoint?: pulumi.Input<string>;
            instanceManagerName?: pulumi.Input<string>;
            ip?: pulumi.Input<string>;
            isExpanding?: pulumi.Input<boolean>;
            lastExpansionError?: pulumi.Input<string>;
            lastExpansionFailedAt?: pulumi.Input<string>;
            lastRestoredBackup?: pulumi.Input<string>;
            logFetched?: pulumi.Input<boolean>;
            ownerID?: pulumi.Input<string>;
            port?: pulumi.Input<number>;
            purgeStatus?: pulumi.Input<{[key: string]: pulumi.Input<inputs.longhorn.v1beta2.EngineStatusPurgestatusArgs>}>;
            rebuildStatus?: pulumi.Input<{[key: string]: pulumi.Input<inputs.longhorn.v1beta2.EngineStatusRebuildstatusArgs>}>;
            replicaModeMap?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            restoreStatus?: pulumi.Input<{[key: string]: pulumi.Input<inputs.longhorn.v1beta2.EngineStatusRestorestatusArgs>}>;
            salvageExecuted?: pulumi.Input<boolean>;
            snapshots?: pulumi.Input<{[key: string]: pulumi.Input<inputs.longhorn.v1beta2.EngineStatusSnapshotsArgs>}>;
            snapshotsError?: pulumi.Input<string>;
            started?: pulumi.Input<boolean>;
            storageIP?: pulumi.Input<string>;
        }

        export interface EngineStatusBackupstatusArgs {
            backupURL?: pulumi.Input<string>;
            error?: pulumi.Input<string>;
            progress?: pulumi.Input<number>;
            replicaAddress?: pulumi.Input<string>;
            snapshotName?: pulumi.Input<string>;
            state?: pulumi.Input<string>;
        }

        export interface EngineStatusClonestatusArgs {
            error?: pulumi.Input<string>;
            fromReplicaAddress?: pulumi.Input<string>;
            isCloning?: pulumi.Input<boolean>;
            progress?: pulumi.Input<number>;
            snapshotName?: pulumi.Input<string>;
            state?: pulumi.Input<string>;
        }

        export interface EngineStatusPurgestatusArgs {
            error?: pulumi.Input<string>;
            isPurging?: pulumi.Input<boolean>;
            progress?: pulumi.Input<number>;
            state?: pulumi.Input<string>;
        }

        export interface EngineStatusRebuildstatusArgs {
            error?: pulumi.Input<string>;
            fromReplicaAddress?: pulumi.Input<string>;
            isRebuilding?: pulumi.Input<boolean>;
            progress?: pulumi.Input<number>;
            state?: pulumi.Input<string>;
        }

        export interface EngineStatusRestorestatusArgs {
            backupURL?: pulumi.Input<string>;
            currentRestoringBackup?: pulumi.Input<string>;
            error?: pulumi.Input<string>;
            filename?: pulumi.Input<string>;
            isRestoring?: pulumi.Input<boolean>;
            lastRestored?: pulumi.Input<string>;
            progress?: pulumi.Input<number>;
            state?: pulumi.Input<string>;
        }

        export interface EngineStatusSnapshotsArgs {
            children?: pulumi.Input<{[key: string]: pulumi.Input<boolean>}>;
            created?: pulumi.Input<string>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            parent?: pulumi.Input<string>;
            removed?: pulumi.Input<boolean>;
            size?: pulumi.Input<string>;
            usercreated?: pulumi.Input<boolean>;
        }

        /**
         * InstanceManagerSpec defines the desired state of the Longhorn instancer manager
         */
        export interface InstanceManagerSpecArgs {
            /**
             * TODO: deprecate this field
             */
            engineImage?: pulumi.Input<string>;
            image?: pulumi.Input<string>;
            nodeID?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        /**
         * InstanceManagerStatus defines the observed state of the Longhorn instance manager
         */
        export interface InstanceManagerStatusArgs {
            apiMinVersion?: pulumi.Input<number>;
            apiVersion?: pulumi.Input<number>;
            currentState?: pulumi.Input<string>;
            instances?: pulumi.Input<{[key: string]: pulumi.Input<inputs.longhorn.v1beta2.InstanceManagerStatusInstancesArgs>}>;
            ip?: pulumi.Input<string>;
            ownerID?: pulumi.Input<string>;
            proxyApiMinVersion?: pulumi.Input<number>;
            proxyApiVersion?: pulumi.Input<number>;
        }

        export interface InstanceManagerStatusInstancesArgs {
            spec?: pulumi.Input<inputs.longhorn.v1beta2.InstanceManagerStatusInstancesSpecArgs>;
            status?: pulumi.Input<inputs.longhorn.v1beta2.InstanceManagerStatusInstancesStatusArgs>;
        }

        export interface InstanceManagerStatusInstancesSpecArgs {
            name?: pulumi.Input<string>;
        }

        export interface InstanceManagerStatusInstancesStatusArgs {
            endpoint?: pulumi.Input<string>;
            errorMsg?: pulumi.Input<string>;
            listen?: pulumi.Input<string>;
            portEnd?: pulumi.Input<number>;
            portStart?: pulumi.Input<number>;
            resourceVersion?: pulumi.Input<number>;
            state?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        /**
         * NodeSpec defines the desired state of the Longhorn node
         */
        export interface NodeSpecArgs {
            allowScheduling?: pulumi.Input<boolean>;
            disks?: pulumi.Input<{[key: string]: pulumi.Input<inputs.longhorn.v1beta2.NodeSpecDisksArgs>}>;
            engineManagerCPURequest?: pulumi.Input<number>;
            evictionRequested?: pulumi.Input<boolean>;
            name?: pulumi.Input<string>;
            replicaManagerCPURequest?: pulumi.Input<number>;
            tags?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface NodeSpecDisksArgs {
            allowScheduling?: pulumi.Input<boolean>;
            evictionRequested?: pulumi.Input<boolean>;
            path?: pulumi.Input<string>;
            storageReserved?: pulumi.Input<number>;
            tags?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * NodeStatus defines the observed state of the Longhorn node
         */
        export interface NodeStatusArgs {
            conditions?: pulumi.Input<pulumi.Input<inputs.longhorn.v1beta2.NodeStatusConditionsArgs>[]>;
            diskStatus?: pulumi.Input<{[key: string]: pulumi.Input<inputs.longhorn.v1beta2.NodeStatusDiskstatusArgs>}>;
            region?: pulumi.Input<string>;
            zone?: pulumi.Input<string>;
        }

        export interface NodeStatusConditionsArgs {
            /**
             * Last time we probed the condition.
             */
            lastProbeTime?: pulumi.Input<string>;
            /**
             * Last time the condition transitioned from one status to another.
             */
            lastTransitionTime?: pulumi.Input<string>;
            /**
             * Human-readable message indicating details about last transition.
             */
            message?: pulumi.Input<string>;
            /**
             * Unique, one-word, CamelCase reason for the condition's last transition.
             */
            reason?: pulumi.Input<string>;
            /**
             * Status is the status of the condition. Can be True, False, Unknown.
             */
            status?: pulumi.Input<string>;
            /**
             * Type is the type of the condition.
             */
            type?: pulumi.Input<string>;
        }

        export interface NodeStatusDiskstatusArgs {
            conditions?: pulumi.Input<pulumi.Input<inputs.longhorn.v1beta2.NodeStatusDiskstatusConditionsArgs>[]>;
            diskUUID?: pulumi.Input<string>;
            scheduledReplica?: pulumi.Input<{[key: string]: pulumi.Input<number>}>;
            storageAvailable?: pulumi.Input<number>;
            storageMaximum?: pulumi.Input<number>;
            storageScheduled?: pulumi.Input<number>;
        }

        export interface NodeStatusDiskstatusConditionsArgs {
            /**
             * Last time we probed the condition.
             */
            lastProbeTime?: pulumi.Input<string>;
            /**
             * Last time the condition transitioned from one status to another.
             */
            lastTransitionTime?: pulumi.Input<string>;
            /**
             * Human-readable message indicating details about last transition.
             */
            message?: pulumi.Input<string>;
            /**
             * Unique, one-word, CamelCase reason for the condition's last transition.
             */
            reason?: pulumi.Input<string>;
            /**
             * Status is the status of the condition. Can be True, False, Unknown.
             */
            status?: pulumi.Input<string>;
            /**
             * Type is the type of the condition.
             */
            type?: pulumi.Input<string>;
        }

        /**
         * OrphanSpec defines the desired state of the Longhorn orphaned data
         */
        export interface OrphanSpecArgs {
            /**
             * The node ID on which the controller is responsible to reconcile this orphan CR.
             */
            nodeID?: pulumi.Input<string>;
            /**
             * The type of the orphaned data. Can be "replica".
             */
            orphanType?: pulumi.Input<string>;
            /**
             * The parameters of the orphaned data
             */
            parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * OrphanStatus defines the observed state of the Longhorn orphaned data
         */
        export interface OrphanStatusArgs {
            conditions?: pulumi.Input<pulumi.Input<inputs.longhorn.v1beta2.OrphanStatusConditionsArgs>[]>;
            ownerID?: pulumi.Input<string>;
        }

        export interface OrphanStatusConditionsArgs {
            /**
             * Last time we probed the condition.
             */
            lastProbeTime?: pulumi.Input<string>;
            /**
             * Last time the condition transitioned from one status to another.
             */
            lastTransitionTime?: pulumi.Input<string>;
            /**
             * Human-readable message indicating details about last transition.
             */
            message?: pulumi.Input<string>;
            /**
             * Unique, one-word, CamelCase reason for the condition's last transition.
             */
            reason?: pulumi.Input<string>;
            /**
             * Status is the status of the condition. Can be True, False, Unknown.
             */
            status?: pulumi.Input<string>;
            /**
             * Type is the type of the condition.
             */
            type?: pulumi.Input<string>;
        }

        /**
         * RecurringJobSpec defines the desired state of the Longhorn recurring job
         */
        export interface RecurringJobSpecArgs {
            /**
             * The concurrency of taking the snapshot/backup.
             */
            concurrency?: pulumi.Input<number>;
            /**
             * The cron setting.
             */
            cron?: pulumi.Input<string>;
            /**
             * The recurring job group.
             */
            groups?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * The label of the snapshot/backup.
             */
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * The recurring job name.
             */
            name?: pulumi.Input<string>;
            /**
             * The retain count of the snapshot/backup.
             */
            retain?: pulumi.Input<number>;
            /**
             * The recurring job type. Can be "snapshot" or "backup".
             */
            task?: pulumi.Input<string>;
        }

        /**
         * RecurringJobStatus defines the observed state of the Longhorn recurring job
         */
        export interface RecurringJobStatusArgs {
            /**
             * The owner ID which is responsible to reconcile this recurring job CR.
             */
            ownerID?: pulumi.Input<string>;
        }

        /**
         * ReplicaSpec defines the desired state of the Longhorn replica
         */
        export interface ReplicaSpecArgs {
            active?: pulumi.Input<boolean>;
            backingImage?: pulumi.Input<string>;
            /**
             * Deprecated. Rename to BackingImage
             */
            baseImage?: pulumi.Input<string>;
            dataDirectoryName?: pulumi.Input<string>;
            /**
             * Deprecated
             */
            dataPath?: pulumi.Input<string>;
            desireState?: pulumi.Input<string>;
            diskID?: pulumi.Input<string>;
            diskPath?: pulumi.Input<string>;
            engineImage?: pulumi.Input<string>;
            engineName?: pulumi.Input<string>;
            failedAt?: pulumi.Input<string>;
            hardNodeAffinity?: pulumi.Input<string>;
            healthyAt?: pulumi.Input<string>;
            logRequested?: pulumi.Input<boolean>;
            nodeID?: pulumi.Input<string>;
            rebuildRetryCount?: pulumi.Input<number>;
            revisionCounterDisabled?: pulumi.Input<boolean>;
            salvageRequested?: pulumi.Input<boolean>;
            volumeName?: pulumi.Input<string>;
            volumeSize?: pulumi.Input<string>;
        }

        /**
         * ReplicaStatus defines the observed state of the Longhorn replica
         */
        export interface ReplicaStatusArgs {
            currentImage?: pulumi.Input<string>;
            currentState?: pulumi.Input<string>;
            evictionRequested?: pulumi.Input<boolean>;
            instanceManagerName?: pulumi.Input<string>;
            ip?: pulumi.Input<string>;
            logFetched?: pulumi.Input<boolean>;
            ownerID?: pulumi.Input<string>;
            port?: pulumi.Input<number>;
            salvageExecuted?: pulumi.Input<boolean>;
            started?: pulumi.Input<boolean>;
            storageIP?: pulumi.Input<string>;
        }

        /**
         * ShareManagerSpec defines the desired state of the Longhorn share manager
         */
        export interface ShareManagerSpecArgs {
            image?: pulumi.Input<string>;
        }

        /**
         * ShareManagerStatus defines the observed state of the Longhorn share manager
         */
        export interface ShareManagerStatusArgs {
            endpoint?: pulumi.Input<string>;
            ownerID?: pulumi.Input<string>;
            state?: pulumi.Input<string>;
        }

        /**
         * SnapshotSpec defines the desired state of Longhorn Snapshot
         */
        export interface SnapshotSpecArgs {
            /**
             * require creating a new snapshot
             */
            createSnapshot?: pulumi.Input<boolean>;
            /**
             * The labels of snapshot
             */
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * the volume that this snapshot belongs to. This field is immutable after creation. Required
             */
            volume: pulumi.Input<string>;
        }

        /**
         * SnapshotStatus defines the observed state of Longhorn Snapshot
         */
        export interface SnapshotStatusArgs {
            children?: pulumi.Input<{[key: string]: pulumi.Input<boolean>}>;
            creationTime?: pulumi.Input<string>;
            error?: pulumi.Input<string>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            markRemoved?: pulumi.Input<boolean>;
            ownerID?: pulumi.Input<string>;
            parent?: pulumi.Input<string>;
            readyToUse?: pulumi.Input<boolean>;
            restoreSize?: pulumi.Input<number>;
            size?: pulumi.Input<number>;
            userCreated?: pulumi.Input<boolean>;
        }

        /**
         * VolumeSpec defines the desired state of the Longhorn volume
         */
        export interface VolumeSpecArgs {
            Standby?: pulumi.Input<boolean>;
            accessMode?: pulumi.Input<string>;
            backingImage?: pulumi.Input<string>;
            /**
             * Deprecated. Rename to BackingImage
             */
            baseImage?: pulumi.Input<string>;
            dataLocality?: pulumi.Input<string>;
            dataSource?: pulumi.Input<string>;
            disableFrontend?: pulumi.Input<boolean>;
            diskSelector?: pulumi.Input<pulumi.Input<string>[]>;
            encrypted?: pulumi.Input<boolean>;
            engineImage?: pulumi.Input<string>;
            fromBackup?: pulumi.Input<string>;
            frontend?: pulumi.Input<string>;
            lastAttachedBy?: pulumi.Input<string>;
            migratable?: pulumi.Input<boolean>;
            migrationNodeID?: pulumi.Input<string>;
            nodeID?: pulumi.Input<string>;
            nodeSelector?: pulumi.Input<pulumi.Input<string>[]>;
            numberOfReplicas?: pulumi.Input<number>;
            /**
             * Deprecated. Replaced by a separate resource named "RecurringJob"
             */
            recurringJobs?: pulumi.Input<pulumi.Input<inputs.longhorn.v1beta2.VolumeSpecRecurringjobsArgs>[]>;
            replicaAutoBalance?: pulumi.Input<string>;
            revisionCounterDisabled?: pulumi.Input<boolean>;
            size?: pulumi.Input<string>;
            staleReplicaTimeout?: pulumi.Input<number>;
        }

        /**
         * VolumeRecurringJobSpec is a deprecated struct. TODO: Should be removed when recurringJobs gets removed from the volume       spec.
         */
        export interface VolumeSpecRecurringjobsArgs {
            concurrency?: pulumi.Input<number>;
            cron?: pulumi.Input<string>;
            groups?: pulumi.Input<pulumi.Input<string>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            name?: pulumi.Input<string>;
            retain?: pulumi.Input<number>;
            task?: pulumi.Input<string>;
        }

        /**
         * VolumeStatus defines the observed state of the Longhorn volume
         */
        export interface VolumeStatusArgs {
            actualSize?: pulumi.Input<number>;
            cloneStatus?: pulumi.Input<inputs.longhorn.v1beta2.VolumeStatusClonestatusArgs>;
            conditions?: pulumi.Input<pulumi.Input<inputs.longhorn.v1beta2.VolumeStatusConditionsArgs>[]>;
            currentImage?: pulumi.Input<string>;
            currentNodeID?: pulumi.Input<string>;
            expansionRequired?: pulumi.Input<boolean>;
            frontendDisabled?: pulumi.Input<boolean>;
            isStandby?: pulumi.Input<boolean>;
            kubernetesStatus?: pulumi.Input<inputs.longhorn.v1beta2.VolumeStatusKubernetesstatusArgs>;
            lastBackup?: pulumi.Input<string>;
            lastBackupAt?: pulumi.Input<string>;
            lastDegradedAt?: pulumi.Input<string>;
            ownerID?: pulumi.Input<string>;
            pendingNodeID?: pulumi.Input<string>;
            remountRequestedAt?: pulumi.Input<string>;
            restoreInitiated?: pulumi.Input<boolean>;
            restoreRequired?: pulumi.Input<boolean>;
            robustness?: pulumi.Input<string>;
            shareEndpoint?: pulumi.Input<string>;
            shareState?: pulumi.Input<string>;
            state?: pulumi.Input<string>;
        }

        export interface VolumeStatusClonestatusArgs {
            snapshot?: pulumi.Input<string>;
            sourceVolume?: pulumi.Input<string>;
            state?: pulumi.Input<string>;
        }

        export interface VolumeStatusConditionsArgs {
            /**
             * Last time we probed the condition.
             */
            lastProbeTime?: pulumi.Input<string>;
            /**
             * Last time the condition transitioned from one status to another.
             */
            lastTransitionTime?: pulumi.Input<string>;
            /**
             * Human-readable message indicating details about last transition.
             */
            message?: pulumi.Input<string>;
            /**
             * Unique, one-word, CamelCase reason for the condition's last transition.
             */
            reason?: pulumi.Input<string>;
            /**
             * Status is the status of the condition. Can be True, False, Unknown.
             */
            status?: pulumi.Input<string>;
            /**
             * Type is the type of the condition.
             */
            type?: pulumi.Input<string>;
        }

        export interface VolumeStatusKubernetesstatusArgs {
            lastPVCRefAt?: pulumi.Input<string>;
            lastPodRefAt?: pulumi.Input<string>;
            /**
             * determine if PVC/Namespace is history or not
             */
            namespace?: pulumi.Input<string>;
            pvName?: pulumi.Input<string>;
            pvStatus?: pulumi.Input<string>;
            pvcName?: pulumi.Input<string>;
            /**
             * determine if Pod/Workload is history or not
             */
            workloadsStatus?: pulumi.Input<pulumi.Input<inputs.longhorn.v1beta2.VolumeStatusKubernetesstatusWorkloadsstatusArgs>[]>;
        }

        export interface VolumeStatusKubernetesstatusWorkloadsstatusArgs {
            podName?: pulumi.Input<string>;
            podStatus?: pulumi.Input<string>;
            workloadName?: pulumi.Input<string>;
            workloadType?: pulumi.Input<string>;
        }
    }
}

export namespace metallb {
    export namespace v1alpha1 {
        /**
         * AddressPoolSpec defines the desired state of AddressPool.
         */
        export interface AddressPoolSpecArgs {
            /**
             * A list of IP address ranges over which MetalLB has authority. You can list multiple ranges in a single pool, they will all share the same settings. Each range can be either a CIDR prefix, or an explicit start-end range of IPs.
             */
            addresses: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * AutoAssign flag used to prevent MetallB from automatic allocation for a pool.
             */
            autoAssign?: pulumi.Input<boolean>;
            /**
             * When an IP is allocated from this pool, how should it be translated into BGP announcements?
             */
            bgpAdvertisements?: pulumi.Input<pulumi.Input<inputs.metallb.v1alpha1.AddressPoolSpecBgpadvertisementsArgs>[]>;
            /**
             * Protocol can be used to select how the announcement is done.
             */
            protocol: pulumi.Input<string>;
        }
        /**
         * addressPoolSpecArgsProvideDefaults sets the appropriate defaults for AddressPoolSpecArgs
         */
        export function addressPoolSpecArgsProvideDefaults(val: AddressPoolSpecArgs): AddressPoolSpecArgs {
            return {
                ...val,
                autoAssign: (val.autoAssign) ?? true,
            };
        }

        export interface AddressPoolSpecBgpadvertisementsArgs {
            /**
             * The aggregation-length advertisement option lets you “roll up” the /32s into a larger prefix.
             */
            aggregationLength?: pulumi.Input<number>;
            /**
             * Optional, defaults to 128 (i.e. no aggregation) if not specified.
             */
            aggregationLengthV6?: pulumi.Input<number>;
            /**
             * BGP communities
             */
            communities?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * BGP LOCAL_PREF attribute which is used by BGP best path algorithm, Path with higher localpref is preferred over one with lower localpref.
             */
            localPref?: pulumi.Input<number>;
        }
        /**
         * addressPoolSpecBgpadvertisementsArgsProvideDefaults sets the appropriate defaults for AddressPoolSpecBgpadvertisementsArgs
         */
        export function addressPoolSpecBgpadvertisementsArgsProvideDefaults(val: AddressPoolSpecBgpadvertisementsArgs): AddressPoolSpecBgpadvertisementsArgs {
            return {
                ...val,
                aggregationLength: (val.aggregationLength) ?? 32,
                aggregationLengthV6: (val.aggregationLengthV6) ?? 128,
            };
        }

    }

    export namespace v1beta1 {
        /**
         * AddressPoolSpec defines the desired state of AddressPool.
         */
        export interface AddressPoolSpecArgs {
            /**
             * A list of IP address ranges over which MetalLB has authority. You can list multiple ranges in a single pool, they will all share the same settings. Each range can be either a CIDR prefix, or an explicit start-end range of IPs.
             */
            addresses: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * AutoAssign flag used to prevent MetallB from automatic allocation for a pool.
             */
            autoAssign?: pulumi.Input<boolean>;
            /**
             * Drives how an IP allocated from this pool should translated into BGP announcements.
             */
            bgpAdvertisements?: pulumi.Input<pulumi.Input<inputs.metallb.v1beta1.AddressPoolSpecBgpadvertisementsArgs>[]>;
            /**
             * Protocol can be used to select how the announcement is done.
             */
            protocol: pulumi.Input<string>;
        }
        /**
         * addressPoolSpecArgsProvideDefaults sets the appropriate defaults for AddressPoolSpecArgs
         */
        export function addressPoolSpecArgsProvideDefaults(val: AddressPoolSpecArgs): AddressPoolSpecArgs {
            return {
                ...val,
                autoAssign: (val.autoAssign) ?? true,
            };
        }

        export interface AddressPoolSpecBgpadvertisementsArgs {
            /**
             * The aggregation-length advertisement option lets you “roll up” the /32s into a larger prefix.
             */
            aggregationLength?: pulumi.Input<number>;
            /**
             * Optional, defaults to 128 (i.e. no aggregation) if not specified.
             */
            aggregationLengthV6?: pulumi.Input<number>;
            /**
             * BGP communities to be associated with the given advertisement.
             */
            communities?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * BGP LOCAL_PREF attribute which is used by BGP best path algorithm, Path with higher localpref is preferred over one with lower localpref.
             */
            localPref?: pulumi.Input<number>;
        }
        /**
         * addressPoolSpecBgpadvertisementsArgsProvideDefaults sets the appropriate defaults for AddressPoolSpecBgpadvertisementsArgs
         */
        export function addressPoolSpecBgpadvertisementsArgsProvideDefaults(val: AddressPoolSpecBgpadvertisementsArgs): AddressPoolSpecBgpadvertisementsArgs {
            return {
                ...val,
                aggregationLength: (val.aggregationLength) ?? 32,
                aggregationLengthV6: (val.aggregationLengthV6) ?? 128,
            };
        }

        /**
         * BFDProfileSpec defines the desired state of BFDProfile.
         */
        export interface BFDProfileSpecArgs {
            /**
             * Configures the detection multiplier to determine packet loss. The remote transmission interval will be multiplied by this value to determine the connection loss detection timer.
             */
            detectMultiplier?: pulumi.Input<number>;
            /**
             * Configures the minimal echo receive transmission interval that this system is capable of handling in milliseconds. Defaults to 50ms
             */
            echoInterval?: pulumi.Input<number>;
            /**
             * Enables or disables the echo transmission mode. This mode is disabled by default, and not supported on multi hops setups.
             */
            echoMode?: pulumi.Input<boolean>;
            /**
             * For multi hop sessions only: configure the minimum expected TTL for an incoming BFD control packet.
             */
            minimumTtl?: pulumi.Input<number>;
            /**
             * Mark session as passive: a passive session will not attempt to start the connection and will wait for control packets from peer before it begins replying.
             */
            passiveMode?: pulumi.Input<boolean>;
            /**
             * The minimum interval that this system is capable of receiving control packets in milliseconds. Defaults to 300ms.
             */
            receiveInterval?: pulumi.Input<number>;
            /**
             * The minimum transmission interval (less jitter) that this system wants to use to send BFD control packets in milliseconds. Defaults to 300ms
             */
            transmitInterval?: pulumi.Input<number>;
        }

        /**
         * BGPAdvertisementSpec defines the desired state of BGPAdvertisement.
         */
        export interface BGPAdvertisementSpecArgs {
            /**
             * The aggregation-length advertisement option lets you “roll up” the /32s into a larger prefix. Defaults to 32. Works for IPv4 addresses.
             */
            aggregationLength?: pulumi.Input<number>;
            /**
             * The aggregation-length advertisement option lets you “roll up” the /128s into a larger prefix. Defaults to 128. Works for IPv6 addresses.
             */
            aggregationLengthV6?: pulumi.Input<number>;
            /**
             * The BGP communities to be associated with the announcement. Each item can be a community of the form 1234:1234 or the name of an alias defined in the Community CRD.
             */
            communities?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * A selector for the IPAddressPools which would get advertised via this advertisement. If no IPAddressPool is selected by this or by the list, the advertisement is applied to all the IPAddressPools.
             */
            ipAddressPoolSelectors?: pulumi.Input<pulumi.Input<inputs.metallb.v1beta1.BGPAdvertisementSpecIpaddresspoolselectorsArgs>[]>;
            /**
             * The list of IPAddressPools to advertise via this advertisement, selected by name.
             */
            ipAddressPools?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * The BGP LOCAL_PREF attribute which is used by BGP best path algorithm, Path with higher localpref is preferred over one with lower localpref.
             */
            localPref?: pulumi.Input<number>;
            /**
             * NodeSelectors allows to limit the nodes to announce as next hops for the LoadBalancer IP. When empty, all the nodes having  are announced as next hops.
             */
            nodeSelectors?: pulumi.Input<pulumi.Input<inputs.metallb.v1beta1.BGPAdvertisementSpecNodeselectorsArgs>[]>;
            /**
             * Peers limits the bgppeer to advertise the ips of the selected pools to. When empty, the loadbalancer IP is announced to all the BGPPeers configured.
             */
            peers?: pulumi.Input<pulumi.Input<string>[]>;
        }
        /**
         * bgpadvertisementSpecArgsProvideDefaults sets the appropriate defaults for BGPAdvertisementSpecArgs
         */
        export function bgpadvertisementSpecArgsProvideDefaults(val: BGPAdvertisementSpecArgs): BGPAdvertisementSpecArgs {
            return {
                ...val,
                aggregationLength: (val.aggregationLength) ?? 32,
                aggregationLengthV6: (val.aggregationLengthV6) ?? 128,
            };
        }

        /**
         * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
         */
        export interface BGPAdvertisementSpecIpaddresspoolselectorsArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.metallb.v1beta1.BGPAdvertisementSpecIpaddresspoolselectorsMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface BGPAdvertisementSpecIpaddresspoolselectorsMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
         */
        export interface BGPAdvertisementSpecNodeselectorsArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.metallb.v1beta1.BGPAdvertisementSpecNodeselectorsMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface BGPAdvertisementSpecNodeselectorsMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * BGPPeerSpec defines the desired state of Peer.
         */
        export interface BGPPeerSpecArgs {
            bfdProfile?: pulumi.Input<string>;
            /**
             * EBGP peer is multi-hops away
             */
            ebgpMultiHop?: pulumi.Input<boolean>;
            /**
             * Requested BGP hold time, per RFC4271.
             */
            holdTime?: pulumi.Input<string>;
            /**
             * Requested BGP keepalive time, per RFC4271.
             */
            keepaliveTime?: pulumi.Input<string>;
            /**
             * AS number to use for the local end of the session.
             */
            myASN: pulumi.Input<number>;
            /**
             * Only connect to this peer on nodes that match one of these selectors.
             */
            nodeSelectors?: pulumi.Input<pulumi.Input<inputs.metallb.v1beta1.BGPPeerSpecNodeselectorsArgs>[]>;
            /**
             * Authentication password for routers enforcing TCP MD5 authenticated sessions
             */
            password?: pulumi.Input<string>;
            /**
             * AS number to expect from the remote end of the session.
             */
            peerASN: pulumi.Input<number>;
            /**
             * Address to dial when establishing the session.
             */
            peerAddress: pulumi.Input<string>;
            /**
             * Port to dial when establishing the session.
             */
            peerPort?: pulumi.Input<number>;
            /**
             * BGP router ID to advertise to the peer
             */
            routerID?: pulumi.Input<string>;
            /**
             * Source address to use when establishing the session.
             */
            sourceAddress?: pulumi.Input<string>;
        }

        export interface BGPPeerSpecNodeselectorsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.metallb.v1beta1.BGPPeerSpecNodeselectorsMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface BGPPeerSpecNodeselectorsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * CommunitySpec defines the desired state of Community.
         */
        export interface CommunitySpecArgs {
            communities?: pulumi.Input<pulumi.Input<inputs.metallb.v1beta1.CommunitySpecCommunitiesArgs>[]>;
        }

        export interface CommunitySpecCommunitiesArgs {
            /**
             * The name of the alias for the community.
             */
            name?: pulumi.Input<string>;
            /**
             * The BGP community value corresponding to the given name.
             */
            value?: pulumi.Input<string>;
        }

        /**
         * IPAddressPoolSpec defines the desired state of IPAddressPool.
         */
        export interface IPAddressPoolSpecArgs {
            /**
             * A list of IP address ranges over which MetalLB has authority. You can list multiple ranges in a single pool, they will all share the same settings. Each range can be either a CIDR prefix, or an explicit start-end range of IPs.
             */
            addresses: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * AutoAssign flag used to prevent MetallB from automatic allocation for a pool.
             */
            autoAssign?: pulumi.Input<boolean>;
            /**
             * AvoidBuggyIPs prevents addresses ending with .0 and .255 to be used by a pool.
             */
            avoidBuggyIPs?: pulumi.Input<boolean>;
        }
        /**
         * ipaddressPoolSpecArgsProvideDefaults sets the appropriate defaults for IPAddressPoolSpecArgs
         */
        export function ipaddressPoolSpecArgsProvideDefaults(val: IPAddressPoolSpecArgs): IPAddressPoolSpecArgs {
            return {
                ...val,
                autoAssign: (val.autoAssign) ?? true,
                avoidBuggyIPs: (val.avoidBuggyIPs) ?? false,
            };
        }

        /**
         * L2AdvertisementSpec defines the desired state of L2Advertisement.
         */
        export interface L2AdvertisementSpecArgs {
            /**
             * A selector for the IPAddressPools which would get advertised via this advertisement. If no IPAddressPool is selected by this or by the list, the advertisement is applied to all the IPAddressPools.
             */
            ipAddressPoolSelectors?: pulumi.Input<pulumi.Input<inputs.metallb.v1beta1.L2AdvertisementSpecIpaddresspoolselectorsArgs>[]>;
            /**
             * The list of IPAddressPools to advertise via this advertisement, selected by name.
             */
            ipAddressPools?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * NodeSelectors allows to limit the nodes to announce as next hops for the LoadBalancer IP. When empty, all the nodes having  are announced as next hops.
             */
            nodeSelectors?: pulumi.Input<pulumi.Input<inputs.metallb.v1beta1.L2AdvertisementSpecNodeselectorsArgs>[]>;
        }

        /**
         * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
         */
        export interface L2AdvertisementSpecIpaddresspoolselectorsArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.metallb.v1beta1.L2AdvertisementSpecIpaddresspoolselectorsMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface L2AdvertisementSpecIpaddresspoolselectorsMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
         */
        export interface L2AdvertisementSpecNodeselectorsArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.metallb.v1beta1.L2AdvertisementSpecNodeselectorsMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface L2AdvertisementSpecNodeselectorsMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

    }

    export namespace v1beta2 {
        /**
         * BGPPeerSpec defines the desired state of Peer.
         */
        export interface BGPPeerSpecArgs {
            /**
             * The name of the BFD Profile to be used for the BFD session associated to the BGP session. If not set, the BFD session won't be set up.
             */
            bfdProfile?: pulumi.Input<string>;
            /**
             * To set if the BGPPeer is multi-hops away. Needed for FRR mode only.
             */
            ebgpMultiHop?: pulumi.Input<boolean>;
            /**
             * Requested BGP hold time, per RFC4271.
             */
            holdTime?: pulumi.Input<string>;
            /**
             * Requested BGP keepalive time, per RFC4271.
             */
            keepaliveTime?: pulumi.Input<string>;
            /**
             * AS number to use for the local end of the session.
             */
            myASN: pulumi.Input<number>;
            /**
             * Only connect to this peer on nodes that match one of these selectors.
             */
            nodeSelectors?: pulumi.Input<pulumi.Input<inputs.metallb.v1beta2.BGPPeerSpecNodeselectorsArgs>[]>;
            /**
             * Authentication password for routers enforcing TCP MD5 authenticated sessions
             */
            password?: pulumi.Input<string>;
            /**
             * passwordSecret is name of the authentication secret for BGP Peer. the secret must be of type "kubernetes.io/basic-auth", and created in the same namespace as the MetalLB deployment. The password is stored in the secret as the key "password".
             */
            passwordSecret?: pulumi.Input<inputs.metallb.v1beta2.BGPPeerSpecPasswordsecretArgs>;
            /**
             * AS number to expect from the remote end of the session.
             */
            peerASN: pulumi.Input<number>;
            /**
             * Address to dial when establishing the session.
             */
            peerAddress: pulumi.Input<string>;
            /**
             * Port to dial when establishing the session.
             */
            peerPort?: pulumi.Input<number>;
            /**
             * BGP router ID to advertise to the peer
             */
            routerID?: pulumi.Input<string>;
            /**
             * Source address to use when establishing the session.
             */
            sourceAddress?: pulumi.Input<string>;
        }
        /**
         * bgppeerSpecArgsProvideDefaults sets the appropriate defaults for BGPPeerSpecArgs
         */
        export function bgppeerSpecArgsProvideDefaults(val: BGPPeerSpecArgs): BGPPeerSpecArgs {
            return {
                ...val,
                peerPort: (val.peerPort) ?? 179,
            };
        }

        /**
         * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
         */
        export interface BGPPeerSpecNodeselectorsArgs {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.metallb.v1beta2.BGPPeerSpecNodeselectorsMatchexpressionsArgs>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface BGPPeerSpecNodeselectorsMatchexpressionsArgs {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * passwordSecret is name of the authentication secret for BGP Peer. the secret must be of type "kubernetes.io/basic-auth", and created in the same namespace as the MetalLB deployment. The password is stored in the secret as the key "password".
         */
        export interface BGPPeerSpecPasswordsecretArgs {
            /**
             * Name is unique within a namespace to reference a secret resource.
             */
            name?: pulumi.Input<string>;
            /**
             * Namespace defines the space within which the secret name must be unique.
             */
            namespace?: pulumi.Input<string>;
        }

    }
}

export namespace nats {
    export namespace v1alpha2 {
        export interface NatsClusterSpecArgs {
            auth?: pulumi.Input<inputs.nats.v1alpha2.NatsClusterSpecAuthArgs>;
            extraRoutes?: pulumi.Input<pulumi.Input<inputs.nats.v1alpha2.NatsClusterSpecExtraroutesArgs>[]>;
            gatewayConfig?: pulumi.Input<inputs.nats.v1alpha2.NatsClusterSpecGatewayconfigArgs>;
            lameDuckDurationSeconds?: pulumi.Input<number>;
            leafnodeConfig?: pulumi.Input<inputs.nats.v1alpha2.NatsClusterSpecLeafnodeconfigArgs>;
            natsConfig?: pulumi.Input<inputs.nats.v1alpha2.NatsClusterSpecNatsconfigArgs>;
            noAdvertise?: pulumi.Input<boolean>;
            operatorConfig?: pulumi.Input<inputs.nats.v1alpha2.NatsClusterSpecOperatorconfigArgs>;
            paused?: pulumi.Input<boolean>;
            pod?: pulumi.Input<inputs.nats.v1alpha2.NatsClusterSpecPodArgs>;
            serverImage?: pulumi.Input<string>;
            size?: pulumi.Input<number>;
            template?: pulumi.Input<{[key: string]: any}>;
            tls?: pulumi.Input<inputs.nats.v1alpha2.NatsClusterSpecTlsArgs>;
            useServerName?: pulumi.Input<boolean>;
            version?: pulumi.Input<string>;
            websocketConfig?: pulumi.Input<inputs.nats.v1alpha2.NatsClusterSpecWebsocketconfigArgs>;
        }

        export interface NatsClusterSpecAuthArgs {
            clientsAuthFile?: pulumi.Input<string>;
            clientsAuthSecret?: pulumi.Input<string>;
            clientsAuthTimeout?: pulumi.Input<number>;
            enableServiceAccounts?: pulumi.Input<boolean>;
            tlsVerifyAndMap?: pulumi.Input<boolean>;
        }

        export interface NatsClusterSpecExtraroutesArgs {
            cluster?: pulumi.Input<string>;
            route?: pulumi.Input<string>;
        }

        export interface NatsClusterSpecGatewayconfigArgs {
            gateways?: pulumi.Input<pulumi.Input<inputs.nats.v1alpha2.NatsClusterSpecGatewayconfigGatewaysArgs>[]>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            rejectUnknown?: pulumi.Input<boolean>;
        }

        export interface NatsClusterSpecGatewayconfigGatewaysArgs {
            name?: pulumi.Input<string>;
            url?: pulumi.Input<string>;
        }

        export interface NatsClusterSpecLeafnodeconfigArgs {
            port?: pulumi.Input<number>;
            remotes?: pulumi.Input<pulumi.Input<inputs.nats.v1alpha2.NatsClusterSpecLeafnodeconfigRemotesArgs>[]>;
        }

        export interface NatsClusterSpecLeafnodeconfigRemotesArgs {
            credentials?: pulumi.Input<string>;
            url?: pulumi.Input<string>;
            urls?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface NatsClusterSpecNatsconfigArgs {
            debug?: pulumi.Input<boolean>;
            disableLogtime?: pulumi.Input<boolean>;
            maxConnections?: pulumi.Input<number>;
            maxControlLine?: pulumi.Input<number>;
            maxPayload?: pulumi.Input<number>;
            maxPending?: pulumi.Input<number>;
            maxSubscriptions?: pulumi.Input<number>;
            trace?: pulumi.Input<boolean>;
            write_deadline?: pulumi.Input<string>;
        }

        export interface NatsClusterSpecOperatorconfigArgs {
            resolver?: pulumi.Input<string>;
            secret?: pulumi.Input<string>;
            systemAccount?: pulumi.Input<string>;
        }

        export interface NatsClusterSpecPodArgs {
            advertiseExternalIP?: pulumi.Input<boolean>;
            annotations?: pulumi.Input<{[key: string]: any}>;
            antiAffinity?: pulumi.Input<boolean>;
            bootconfigImage?: pulumi.Input<string>;
            bootconfigImageTag?: pulumi.Input<string>;
            enableClientsHostPort?: pulumi.Input<boolean>;
            enableConfigReload?: pulumi.Input<boolean>;
            enableMetrics?: pulumi.Input<boolean>;
            labels?: pulumi.Input<{[key: string]: any}>;
            metricsImage?: pulumi.Input<string>;
            metricsImagePullPolicy?: pulumi.Input<string>;
            metricsImageTag?: pulumi.Input<string>;
            natsEnv?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
            nodeSelector?: pulumi.Input<{[key: string]: any}>;
            reloaderImage?: pulumi.Input<string>;
            reloaderImagePullPolicy?: pulumi.Input<string>;
            reloaderImageTag?: pulumi.Input<string>;
            reloaderResources?: pulumi.Input<{[key: string]: any}>;
            resources?: pulumi.Input<{[key: string]: any}>;
            tolerations?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
        }

        export interface NatsClusterSpecTlsArgs {
            cipherSuites?: pulumi.Input<pulumi.Input<string>[]>;
            clientsTLSTimeout?: pulumi.Input<number>;
            curvePreferences?: pulumi.Input<pulumi.Input<string>[]>;
            enableHttps?: pulumi.Input<boolean>;
            gatewaySecret?: pulumi.Input<string>;
            gatewaySecretCAFileName?: pulumi.Input<string>;
            gatewaySecretCertFileName?: pulumi.Input<string>;
            gatewaySecretKeyFileName?: pulumi.Input<string>;
            gatewaysTLSTimeout?: pulumi.Input<number>;
            leafnodeSecret?: pulumi.Input<string>;
            leafnodeSecretCAFileName?: pulumi.Input<string>;
            leafnodeSecretCertFileName?: pulumi.Input<string>;
            leafnodeSecretKeyFileName?: pulumi.Input<string>;
            leafnodesTLSTimeout?: pulumi.Input<number>;
            routesSecret?: pulumi.Input<string>;
            routesSecretCAFileName?: pulumi.Input<string>;
            routesSecretCertFileName?: pulumi.Input<string>;
            routesSecretKeyFileName?: pulumi.Input<string>;
            routesTLSTimeout?: pulumi.Input<number>;
            serverSecret?: pulumi.Input<string>;
            serverSecretCAFileName?: pulumi.Input<string>;
            serverSecretCertFileName?: pulumi.Input<string>;
            serverSecretKeyFileName?: pulumi.Input<string>;
            verify?: pulumi.Input<boolean>;
            websocketSecret?: pulumi.Input<string>;
            websocketSecretCAFileName?: pulumi.Input<string>;
            websocketSecretCertFileName?: pulumi.Input<string>;
            websocketSecretKeyFileName?: pulumi.Input<string>;
            websocketTLSTimeout?: pulumi.Input<number>;
        }

        export interface NatsClusterSpecWebsocketconfigArgs {
            compression?: pulumi.Input<boolean>;
            handshakeTimeout?: pulumi.Input<number>;
            port?: pulumi.Input<number>;
        }

        export interface NatsServiceRoleSpecArgs {
            permissions?: pulumi.Input<inputs.nats.v1alpha2.NatsServiceRoleSpecPermissionsArgs>;
        }

        export interface NatsServiceRoleSpecPermissionsArgs {
            publish?: pulumi.Input<pulumi.Input<string>[]>;
            subscribe?: pulumi.Input<pulumi.Input<string>[]>;
        }
    }
}

export namespace pingcap {
    export namespace v1alpha1 {
        export interface BackupScheduleSpecArgs {
            backupTemplate: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateArgs>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecImagepullsecretsArgs>[]>;
            maxBackups?: pulumi.Input<number>;
            maxReservedTime?: pulumi.Input<string>;
            pause?: pulumi.Input<boolean>;
            schedule: pulumi.Input<string>;
            storageClassName?: pulumi.Input<string>;
            storageSize?: pulumi.Input<string>;
        }
        /**
         * backupScheduleSpecArgsProvideDefaults sets the appropriate defaults for BackupScheduleSpecArgs
         */
        export function backupScheduleSpecArgsProvideDefaults(val: BackupScheduleSpecArgs): BackupScheduleSpecArgs {
            return {
                ...val,
                backupTemplate: pulumi.output(val.backupTemplate).apply(inputs.pingcap.v1alpha1.backupScheduleSpecBackuptemplateArgsProvideDefaults),
            };
        }

        export interface BackupScheduleSpecBackuptemplateArgs {
            affinity?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityArgs>;
            azblob?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAzblobArgs>;
            backupType?: pulumi.Input<string>;
            br?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateBrArgs>;
            cleanOption?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateCleanoptionArgs>;
            cleanPolicy?: pulumi.Input<string>;
            dumpling?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateDumplingArgs>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateEnvArgs>[]>;
            from?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateFromArgs>;
            gcs?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateGcsArgs>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateImagepullsecretsArgs>[]>;
            local?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalArgs>;
            podSecurityContext?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplatePodsecuritycontextArgs>;
            priorityClassName?: pulumi.Input<string>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateResourcesArgs>;
            s3?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateS3Args>;
            serviceAccount?: pulumi.Input<string>;
            storageClassName?: pulumi.Input<string>;
            storageSize?: pulumi.Input<string>;
            tableFilter?: pulumi.Input<pulumi.Input<string>[]>;
            tikvGCLifeTime?: pulumi.Input<string>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateTolerationsArgs>[]>;
            toolImage?: pulumi.Input<string>;
            useKMS?: pulumi.Input<boolean>;
        }
        /**
         * backupScheduleSpecBackuptemplateArgsProvideDefaults sets the appropriate defaults for BackupScheduleSpecBackuptemplateArgs
         */
        export function backupScheduleSpecBackuptemplateArgsProvideDefaults(val: BackupScheduleSpecBackuptemplateArgs): BackupScheduleSpecBackuptemplateArgs {
            return {
                ...val,
                cleanOption: (val.cleanOption ? pulumi.output(val.cleanOption).apply(inputs.pingcap.v1alpha1.backupScheduleSpecBackuptemplateCleanoptionArgsProvideDefaults) : undefined),
            };
        }

        export interface BackupScheduleSpecBackuptemplateAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityPodantiaffinityArgs>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface BackupScheduleSpecBackuptemplateAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupScheduleSpecBackuptemplateAzblobArgs {
            accessTier?: pulumi.Input<string>;
            container?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
            prefix?: pulumi.Input<string>;
            secretName?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateBrArgs {
            checksum?: pulumi.Input<boolean>;
            cluster: pulumi.Input<string>;
            clusterNamespace?: pulumi.Input<string>;
            concurrency?: pulumi.Input<number>;
            db?: pulumi.Input<string>;
            logLevel?: pulumi.Input<string>;
            onLine?: pulumi.Input<boolean>;
            options?: pulumi.Input<pulumi.Input<string>[]>;
            rateLimit?: pulumi.Input<number>;
            sendCredToTikv?: pulumi.Input<boolean>;
            statusAddr?: pulumi.Input<string>;
            table?: pulumi.Input<string>;
            timeAgo?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateCleanoptionArgs {
            backoffEnabled?: pulumi.Input<boolean>;
            batchConcurrency?: pulumi.Input<number>;
            disableBatchConcurrency?: pulumi.Input<boolean>;
            pageSize?: pulumi.Input<number>;
            retryCount?: pulumi.Input<number>;
            routineConcurrency?: pulumi.Input<number>;
        }
        /**
         * backupScheduleSpecBackuptemplateCleanoptionArgsProvideDefaults sets the appropriate defaults for BackupScheduleSpecBackuptemplateCleanoptionArgs
         */
        export function backupScheduleSpecBackuptemplateCleanoptionArgsProvideDefaults(val: BackupScheduleSpecBackuptemplateCleanoptionArgs): BackupScheduleSpecBackuptemplateCleanoptionArgs {
            return {
                ...val,
                retryCount: (val.retryCount) ?? 5,
            };
        }

        export interface BackupScheduleSpecBackuptemplateDumplingArgs {
            options?: pulumi.Input<pulumi.Input<string>[]>;
            tableFilter?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupScheduleSpecBackuptemplateEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateEnvValuefromArgs>;
        }

        export interface BackupScheduleSpecBackuptemplateEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateEnvValuefromSecretkeyrefArgs>;
        }

        export interface BackupScheduleSpecBackuptemplateEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface BackupScheduleSpecBackuptemplateEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface BackupScheduleSpecBackuptemplateFromArgs {
            host: pulumi.Input<string>;
            port?: pulumi.Input<number>;
            secretName: pulumi.Input<string>;
            tlsClientSecretName?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateGcsArgs {
            bucket?: pulumi.Input<string>;
            bucketAcl?: pulumi.Input<string>;
            location?: pulumi.Input<string>;
            objectAcl?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
            prefix?: pulumi.Input<string>;
            projectId: pulumi.Input<string>;
            secretName?: pulumi.Input<string>;
            storageClass?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalArgs {
            prefix?: pulumi.Input<string>;
            volume: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeArgs>;
            volumeMount: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumemountArgs>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeArgs {
            awsElasticBlockStore?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeAwselasticblockstoreArgs>;
            azureDisk?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeAzurediskArgs>;
            azureFile?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeAzurefileArgs>;
            cephfs?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeCephfsArgs>;
            cinder?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeCinderArgs>;
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeConfigmapArgs>;
            csi?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeCsiArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeDownwardapiArgs>;
            emptyDir?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeEmptydirArgs>;
            ephemeral?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeEphemeralArgs>;
            fc?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeFcArgs>;
            flexVolume?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeFlexvolumeArgs>;
            flocker?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeFlockerArgs>;
            gcePersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeGcepersistentdiskArgs>;
            gitRepo?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeGitrepoArgs>;
            glusterfs?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeGlusterfsArgs>;
            hostPath?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeHostpathArgs>;
            iscsi?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeIscsiArgs>;
            name: pulumi.Input<string>;
            nfs?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeNfsArgs>;
            persistentVolumeClaim?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumePersistentvolumeclaimArgs>;
            photonPersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumePhotonpersistentdiskArgs>;
            portworxVolume?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumePortworxvolumeArgs>;
            projected?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeProjectedArgs>;
            quobyte?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeQuobyteArgs>;
            rbd?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeRbdArgs>;
            scaleIO?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeScaleioArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeSecretArgs>;
            storageos?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeStorageosArgs>;
            vsphereVolume?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeVspherevolumeArgs>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeAwselasticblockstoreArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeAzurediskArgs {
            cachingMode?: pulumi.Input<string>;
            diskName: pulumi.Input<string>;
            diskURI: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeAzurefileArgs {
            readOnly?: pulumi.Input<boolean>;
            secretName: pulumi.Input<string>;
            shareName: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeCephfsArgs {
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            path?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretFile?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeCephfsSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeCephfsSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeCinderArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeCinderSecretrefArgs>;
            volumeID: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeCinderSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeConfigmapArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeCsiArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            nodePublishSecretRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeCsiNodepublishsecretrefArgs>;
            readOnly?: pulumi.Input<boolean>;
            volumeAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeCsiNodepublishsecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeDownwardapiArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeDownwardapiItemsArgs>[]>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeEmptydirArgs {
            medium?: pulumi.Input<string>;
            sizeLimit?: pulumi.Input<number | string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeEphemeralArgs {
            readOnly?: pulumi.Input<boolean>;
            volumeClaimTemplate?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeEphemeralVolumeclaimtemplateArgs>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeEphemeralVolumeclaimtemplateArgs {
            metadata?: pulumi.Input<{[key: string]: any}>;
            spec: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeEphemeralVolumeclaimtemplateSpecArgs>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeEphemeralVolumeclaimtemplateSpecArgs {
            accessModes?: pulumi.Input<pulumi.Input<string>[]>;
            dataSource?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeEphemeralVolumeclaimtemplateSpecDatasourceArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeEphemeralVolumeclaimtemplateSpecResourcesArgs>;
            selector?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeEphemeralVolumeclaimtemplateSpecSelectorArgs>;
            storageClassName?: pulumi.Input<string>;
            volumeMode?: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeEphemeralVolumeclaimtemplateSpecDatasourceArgs {
            apiGroup?: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeEphemeralVolumeclaimtemplateSpecResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeEphemeralVolumeclaimtemplateSpecSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeFcArgs {
            fsType?: pulumi.Input<string>;
            lun?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            targetWWNs?: pulumi.Input<pulumi.Input<string>[]>;
            wwids?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeFlexvolumeArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeFlexvolumeSecretrefArgs>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeFlexvolumeSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeFlockerArgs {
            datasetName?: pulumi.Input<string>;
            datasetUUID?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeGcepersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            pdName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeGitrepoArgs {
            directory?: pulumi.Input<string>;
            repository: pulumi.Input<string>;
            revision?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeGlusterfsArgs {
            endpoints: pulumi.Input<string>;
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeHostpathArgs {
            path: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeIscsiArgs {
            chapAuthDiscovery?: pulumi.Input<boolean>;
            chapAuthSession?: pulumi.Input<boolean>;
            fsType?: pulumi.Input<string>;
            initiatorName?: pulumi.Input<string>;
            iqn: pulumi.Input<string>;
            iscsiInterface?: pulumi.Input<string>;
            lun: pulumi.Input<number>;
            portals?: pulumi.Input<pulumi.Input<string>[]>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeIscsiSecretrefArgs>;
            targetPortal: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeIscsiSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeNfsArgs {
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            server: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumePersistentvolumeclaimArgs {
            claimName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumePhotonpersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            pdID: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumePortworxvolumeArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeProjectedArgs {
            defaultMode?: pulumi.Input<number>;
            sources: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeProjectedSourcesArgs>[]>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeProjectedSourcesArgs {
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeProjectedSourcesConfigmapArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeProjectedSourcesDownwardapiArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeProjectedSourcesSecretArgs>;
            serviceAccountToken?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeProjectedSourcesServiceaccounttokenArgs>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeProjectedSourcesConfigmapArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeProjectedSourcesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeProjectedSourcesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeProjectedSourcesDownwardapiArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeProjectedSourcesDownwardapiItemsArgs>[]>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeProjectedSourcesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeProjectedSourcesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeProjectedSourcesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeProjectedSourcesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeProjectedSourcesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeProjectedSourcesSecretArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeProjectedSourcesSecretItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeProjectedSourcesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeProjectedSourcesServiceaccounttokenArgs {
            audience?: pulumi.Input<string>;
            expirationSeconds?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeQuobyteArgs {
            group?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            registry: pulumi.Input<string>;
            tenant?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
            volume: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeRbdArgs {
            fsType?: pulumi.Input<string>;
            image: pulumi.Input<string>;
            keyring?: pulumi.Input<string>;
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            pool?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeRbdSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeRbdSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeScaleioArgs {
            fsType?: pulumi.Input<string>;
            gateway: pulumi.Input<string>;
            protectionDomain?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeScaleioSecretrefArgs>;
            sslEnabled?: pulumi.Input<boolean>;
            storageMode?: pulumi.Input<string>;
            storagePool?: pulumi.Input<string>;
            system: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeScaleioSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeSecretArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeSecretItemsArgs>[]>;
            optional?: pulumi.Input<boolean>;
            secretName?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeStorageosArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplateLocalVolumeStorageosSecretrefArgs>;
            volumeName?: pulumi.Input<string>;
            volumeNamespace?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeStorageosSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumeVspherevolumeArgs {
            fsType?: pulumi.Input<string>;
            storagePolicyID?: pulumi.Input<string>;
            storagePolicyName?: pulumi.Input<string>;
            volumePath: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateLocalVolumemountArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplatePodsecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplatePodsecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplatePodsecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplatePodsecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.BackupScheduleSpecBackuptemplatePodsecuritycontextWindowsoptionsArgs>;
        }

        export interface BackupScheduleSpecBackuptemplatePodsecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplatePodsecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplatePodsecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplatePodsecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface BackupScheduleSpecBackuptemplateS3Args {
            acl?: pulumi.Input<string>;
            bucket?: pulumi.Input<string>;
            endpoint?: pulumi.Input<string>;
            options?: pulumi.Input<pulumi.Input<string>[]>;
            path?: pulumi.Input<string>;
            prefix?: pulumi.Input<string>;
            provider: pulumi.Input<string>;
            region?: pulumi.Input<string>;
            secretName?: pulumi.Input<string>;
            sse?: pulumi.Input<string>;
            storageClass?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecBackuptemplateTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface BackupScheduleSpecImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface BackupScheduleStatusArgs {
            allBackupCleanTime?: pulumi.Input<string>;
            lastBackup?: pulumi.Input<string>;
            lastBackupTime?: pulumi.Input<string>;
        }

        export interface BackupSpecArgs {
            affinity?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityArgs>;
            azblob?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAzblobArgs>;
            backupType?: pulumi.Input<string>;
            br?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecBrArgs>;
            cleanOption?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecCleanoptionArgs>;
            cleanPolicy?: pulumi.Input<string>;
            dumpling?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecDumplingArgs>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecEnvArgs>[]>;
            from?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecFromArgs>;
            gcs?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecGcsArgs>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecImagepullsecretsArgs>[]>;
            local?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalArgs>;
            podSecurityContext?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecPodsecuritycontextArgs>;
            priorityClassName?: pulumi.Input<string>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecResourcesArgs>;
            s3?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecS3Args>;
            serviceAccount?: pulumi.Input<string>;
            storageClassName?: pulumi.Input<string>;
            storageSize?: pulumi.Input<string>;
            tableFilter?: pulumi.Input<pulumi.Input<string>[]>;
            tikvGCLifeTime?: pulumi.Input<string>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecTolerationsArgs>[]>;
            toolImage?: pulumi.Input<string>;
            useKMS?: pulumi.Input<boolean>;
        }
        /**
         * backupSpecArgsProvideDefaults sets the appropriate defaults for BackupSpecArgs
         */
        export function backupSpecArgsProvideDefaults(val: BackupSpecArgs): BackupSpecArgs {
            return {
                ...val,
                cleanOption: (val.cleanOption ? pulumi.output(val.cleanOption).apply(inputs.pingcap.v1alpha1.backupSpecCleanoptionArgsProvideDefaults) : undefined),
            };
        }

        export interface BackupSpecAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityPodantiaffinityArgs>;
        }

        export interface BackupSpecAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface BackupSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface BackupSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface BackupSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface BackupSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface BackupSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupSpecAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface BackupSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface BackupSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface BackupSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface BackupSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface BackupSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface BackupSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupSpecAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface BackupSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface BackupSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface BackupSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface BackupSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface BackupSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface BackupSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupSpecAzblobArgs {
            accessTier?: pulumi.Input<string>;
            container?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
            prefix?: pulumi.Input<string>;
            secretName?: pulumi.Input<string>;
        }

        export interface BackupSpecBrArgs {
            checksum?: pulumi.Input<boolean>;
            cluster: pulumi.Input<string>;
            clusterNamespace?: pulumi.Input<string>;
            concurrency?: pulumi.Input<number>;
            db?: pulumi.Input<string>;
            logLevel?: pulumi.Input<string>;
            onLine?: pulumi.Input<boolean>;
            options?: pulumi.Input<pulumi.Input<string>[]>;
            rateLimit?: pulumi.Input<number>;
            sendCredToTikv?: pulumi.Input<boolean>;
            statusAddr?: pulumi.Input<string>;
            table?: pulumi.Input<string>;
            timeAgo?: pulumi.Input<string>;
        }

        export interface BackupSpecCleanoptionArgs {
            backoffEnabled?: pulumi.Input<boolean>;
            batchConcurrency?: pulumi.Input<number>;
            disableBatchConcurrency?: pulumi.Input<boolean>;
            pageSize?: pulumi.Input<number>;
            retryCount?: pulumi.Input<number>;
            routineConcurrency?: pulumi.Input<number>;
        }
        /**
         * backupSpecCleanoptionArgsProvideDefaults sets the appropriate defaults for BackupSpecCleanoptionArgs
         */
        export function backupSpecCleanoptionArgsProvideDefaults(val: BackupSpecCleanoptionArgs): BackupSpecCleanoptionArgs {
            return {
                ...val,
                retryCount: (val.retryCount) ?? 5,
            };
        }

        export interface BackupSpecDumplingArgs {
            options?: pulumi.Input<pulumi.Input<string>[]>;
            tableFilter?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupSpecEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecEnvValuefromArgs>;
        }

        export interface BackupSpecEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecEnvValuefromSecretkeyrefArgs>;
        }

        export interface BackupSpecEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface BackupSpecEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface BackupSpecEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface BackupSpecEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface BackupSpecFromArgs {
            host: pulumi.Input<string>;
            port?: pulumi.Input<number>;
            secretName: pulumi.Input<string>;
            tlsClientSecretName?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface BackupSpecGcsArgs {
            bucket?: pulumi.Input<string>;
            bucketAcl?: pulumi.Input<string>;
            location?: pulumi.Input<string>;
            objectAcl?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
            prefix?: pulumi.Input<string>;
            projectId: pulumi.Input<string>;
            secretName?: pulumi.Input<string>;
            storageClass?: pulumi.Input<string>;
        }

        export interface BackupSpecImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface BackupSpecLocalArgs {
            prefix?: pulumi.Input<string>;
            volume: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeArgs>;
            volumeMount: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumemountArgs>;
        }

        export interface BackupSpecLocalVolumeArgs {
            awsElasticBlockStore?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeAwselasticblockstoreArgs>;
            azureDisk?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeAzurediskArgs>;
            azureFile?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeAzurefileArgs>;
            cephfs?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeCephfsArgs>;
            cinder?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeCinderArgs>;
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeConfigmapArgs>;
            csi?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeCsiArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeDownwardapiArgs>;
            emptyDir?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeEmptydirArgs>;
            ephemeral?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeEphemeralArgs>;
            fc?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeFcArgs>;
            flexVolume?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeFlexvolumeArgs>;
            flocker?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeFlockerArgs>;
            gcePersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeGcepersistentdiskArgs>;
            gitRepo?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeGitrepoArgs>;
            glusterfs?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeGlusterfsArgs>;
            hostPath?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeHostpathArgs>;
            iscsi?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeIscsiArgs>;
            name: pulumi.Input<string>;
            nfs?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeNfsArgs>;
            persistentVolumeClaim?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumePersistentvolumeclaimArgs>;
            photonPersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumePhotonpersistentdiskArgs>;
            portworxVolume?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumePortworxvolumeArgs>;
            projected?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeProjectedArgs>;
            quobyte?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeQuobyteArgs>;
            rbd?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeRbdArgs>;
            scaleIO?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeScaleioArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeSecretArgs>;
            storageos?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeStorageosArgs>;
            vsphereVolume?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeVspherevolumeArgs>;
        }

        export interface BackupSpecLocalVolumeAwselasticblockstoreArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeAzurediskArgs {
            cachingMode?: pulumi.Input<string>;
            diskName: pulumi.Input<string>;
            diskURI: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface BackupSpecLocalVolumeAzurefileArgs {
            readOnly?: pulumi.Input<boolean>;
            secretName: pulumi.Input<string>;
            shareName: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeCephfsArgs {
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            path?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretFile?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeCephfsSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeCephfsSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeCinderArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeCinderSecretrefArgs>;
            volumeID: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeCinderSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeConfigmapArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface BackupSpecLocalVolumeConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeCsiArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            nodePublishSecretRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeCsiNodepublishsecretrefArgs>;
            readOnly?: pulumi.Input<boolean>;
            volumeAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface BackupSpecLocalVolumeCsiNodepublishsecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeDownwardapiArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeDownwardapiItemsArgs>[]>;
        }

        export interface BackupSpecLocalVolumeDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface BackupSpecLocalVolumeDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeEmptydirArgs {
            medium?: pulumi.Input<string>;
            sizeLimit?: pulumi.Input<number | string>;
        }

        export interface BackupSpecLocalVolumeEphemeralArgs {
            readOnly?: pulumi.Input<boolean>;
            volumeClaimTemplate?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeEphemeralVolumeclaimtemplateArgs>;
        }

        export interface BackupSpecLocalVolumeEphemeralVolumeclaimtemplateArgs {
            metadata?: pulumi.Input<{[key: string]: any}>;
            spec: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeEphemeralVolumeclaimtemplateSpecArgs>;
        }

        export interface BackupSpecLocalVolumeEphemeralVolumeclaimtemplateSpecArgs {
            accessModes?: pulumi.Input<pulumi.Input<string>[]>;
            dataSource?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeEphemeralVolumeclaimtemplateSpecDatasourceArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeEphemeralVolumeclaimtemplateSpecResourcesArgs>;
            selector?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeEphemeralVolumeclaimtemplateSpecSelectorArgs>;
            storageClassName?: pulumi.Input<string>;
            volumeMode?: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeEphemeralVolumeclaimtemplateSpecDatasourceArgs {
            apiGroup?: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeEphemeralVolumeclaimtemplateSpecResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface BackupSpecLocalVolumeEphemeralVolumeclaimtemplateSpecSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface BackupSpecLocalVolumeEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupSpecLocalVolumeFcArgs {
            fsType?: pulumi.Input<string>;
            lun?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            targetWWNs?: pulumi.Input<pulumi.Input<string>[]>;
            wwids?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface BackupSpecLocalVolumeFlexvolumeArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeFlexvolumeSecretrefArgs>;
        }

        export interface BackupSpecLocalVolumeFlexvolumeSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeFlockerArgs {
            datasetName?: pulumi.Input<string>;
            datasetUUID?: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeGcepersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            pdName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface BackupSpecLocalVolumeGitrepoArgs {
            directory?: pulumi.Input<string>;
            repository: pulumi.Input<string>;
            revision?: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeGlusterfsArgs {
            endpoints: pulumi.Input<string>;
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface BackupSpecLocalVolumeHostpathArgs {
            path: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeIscsiArgs {
            chapAuthDiscovery?: pulumi.Input<boolean>;
            chapAuthSession?: pulumi.Input<boolean>;
            fsType?: pulumi.Input<string>;
            initiatorName?: pulumi.Input<string>;
            iqn: pulumi.Input<string>;
            iscsiInterface?: pulumi.Input<string>;
            lun: pulumi.Input<number>;
            portals?: pulumi.Input<pulumi.Input<string>[]>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeIscsiSecretrefArgs>;
            targetPortal: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeIscsiSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeNfsArgs {
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            server: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumePersistentvolumeclaimArgs {
            claimName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface BackupSpecLocalVolumePhotonpersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            pdID: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumePortworxvolumeArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeProjectedArgs {
            defaultMode?: pulumi.Input<number>;
            sources: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeProjectedSourcesArgs>[]>;
        }

        export interface BackupSpecLocalVolumeProjectedSourcesArgs {
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeProjectedSourcesConfigmapArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeProjectedSourcesDownwardapiArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeProjectedSourcesSecretArgs>;
            serviceAccountToken?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeProjectedSourcesServiceaccounttokenArgs>;
        }

        export interface BackupSpecLocalVolumeProjectedSourcesConfigmapArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeProjectedSourcesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface BackupSpecLocalVolumeProjectedSourcesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeProjectedSourcesDownwardapiArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeProjectedSourcesDownwardapiItemsArgs>[]>;
        }

        export interface BackupSpecLocalVolumeProjectedSourcesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeProjectedSourcesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeProjectedSourcesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface BackupSpecLocalVolumeProjectedSourcesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeProjectedSourcesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeProjectedSourcesSecretArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeProjectedSourcesSecretItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface BackupSpecLocalVolumeProjectedSourcesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeProjectedSourcesServiceaccounttokenArgs {
            audience?: pulumi.Input<string>;
            expirationSeconds?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeQuobyteArgs {
            group?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            registry: pulumi.Input<string>;
            tenant?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
            volume: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeRbdArgs {
            fsType?: pulumi.Input<string>;
            image: pulumi.Input<string>;
            keyring?: pulumi.Input<string>;
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            pool?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeRbdSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeRbdSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeScaleioArgs {
            fsType?: pulumi.Input<string>;
            gateway: pulumi.Input<string>;
            protectionDomain?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeScaleioSecretrefArgs>;
            sslEnabled?: pulumi.Input<boolean>;
            storageMode?: pulumi.Input<string>;
            storagePool?: pulumi.Input<string>;
            system: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeScaleioSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeSecretArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeSecretItemsArgs>[]>;
            optional?: pulumi.Input<boolean>;
            secretName?: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeStorageosArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecLocalVolumeStorageosSecretrefArgs>;
            volumeName?: pulumi.Input<string>;
            volumeNamespace?: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeStorageosSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumeVspherevolumeArgs {
            fsType?: pulumi.Input<string>;
            storagePolicyID?: pulumi.Input<string>;
            storagePolicyName?: pulumi.Input<string>;
            volumePath: pulumi.Input<string>;
        }

        export interface BackupSpecLocalVolumemountArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface BackupSpecPodsecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecPodsecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecPodsecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecPodsecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.BackupSpecPodsecuritycontextWindowsoptionsArgs>;
        }

        export interface BackupSpecPodsecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface BackupSpecPodsecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface BackupSpecPodsecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface BackupSpecPodsecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface BackupSpecResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface BackupSpecS3Args {
            acl?: pulumi.Input<string>;
            bucket?: pulumi.Input<string>;
            endpoint?: pulumi.Input<string>;
            options?: pulumi.Input<pulumi.Input<string>[]>;
            path?: pulumi.Input<string>;
            prefix?: pulumi.Input<string>;
            provider: pulumi.Input<string>;
            region?: pulumi.Input<string>;
            secretName?: pulumi.Input<string>;
            sse?: pulumi.Input<string>;
            storageClass?: pulumi.Input<string>;
        }

        export interface BackupSpecTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface BackupStatusArgs {
            backupPath?: pulumi.Input<string>;
            backupSize?: pulumi.Input<number>;
            backupSizeReadable?: pulumi.Input<string>;
            commitTs?: pulumi.Input<string>;
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.BackupStatusConditionsArgs>[]>;
            phase?: pulumi.Input<string>;
            timeCompleted?: pulumi.Input<string>;
            timeStarted?: pulumi.Input<string>;
        }

        export interface BackupStatusConditionsArgs {
            lastTransitionTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface DMClusterSpecArgs {
            affinity?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityArgs>;
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            configUpdateStrategy?: pulumi.Input<string>;
            discovery?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryArgs>;
            dnsConfig?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDnsconfigArgs>;
            dnsPolicy?: pulumi.Input<string>;
            enablePVReclaim?: pulumi.Input<boolean>;
            hostNetwork?: pulumi.Input<boolean>;
            imagePullPolicy?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecImagepullsecretsArgs>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            master?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterArgs>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            paused?: pulumi.Input<boolean>;
            podManagementPolicy?: pulumi.Input<string>;
            podSecurityContext?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecPodsecuritycontextArgs>;
            priorityClassName?: pulumi.Input<string>;
            pvReclaimPolicy?: pulumi.Input<string>;
            schedulerName?: pulumi.Input<string>;
            statefulSetUpdateStrategy?: pulumi.Input<string>;
            suspendAction?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecSuspendactionArgs>;
            timezone?: pulumi.Input<string>;
            tlsClientSecretNames?: pulumi.Input<pulumi.Input<string>[]>;
            tlsCluster?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecTlsclusterArgs>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecTolerationsArgs>[]>;
            topologySpreadConstraints?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecTopologyspreadconstraintsArgs>[]>;
            version?: pulumi.Input<string>;
            worker?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerArgs>;
        }
        /**
         * dmclusterSpecArgsProvideDefaults sets the appropriate defaults for DMClusterSpecArgs
         */
        export function dmclusterSpecArgsProvideDefaults(val: DMClusterSpecArgs): DMClusterSpecArgs {
            return {
                ...val,
                imagePullPolicy: (val.imagePullPolicy) ?? "IfNotPresent",
                master: (val.master ? pulumi.output(val.master).apply(inputs.pingcap.v1alpha1.dmclusterSpecMasterArgsProvideDefaults) : undefined),
                pvReclaimPolicy: (val.pvReclaimPolicy) ?? "Retain",
                worker: (val.worker ? pulumi.output(val.worker).apply(inputs.pingcap.v1alpha1.dmclusterSpecWorkerArgsProvideDefaults) : undefined),
            };
        }

        export interface DMClusterSpecAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityPodantiaffinityArgs>;
        }

        export interface DMClusterSpecAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface DMClusterSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface DMClusterSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface DMClusterSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface DMClusterSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface DMClusterSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface DMClusterSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface DMClusterSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface DMClusterSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface DMClusterSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface DMClusterSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface DMClusterSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface DMClusterSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface DMClusterSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryArgs {
            additionalContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersArgs>[]>;
            additionalVolumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumemountsArgs>[]>;
            additionalVolumes?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesArgs>[]>;
            address?: pulumi.Input<string>;
            affinity?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityArgs>;
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            configUpdateStrategy?: pulumi.Input<string>;
            dnsConfig?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryDnsconfigArgs>;
            dnsPolicy?: pulumi.Input<string>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryEnvfromArgs>[]>;
            hostNetwork?: pulumi.Input<boolean>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryImagepullsecretsArgs>[]>;
            initContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersArgs>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            podManagementPolicy?: pulumi.Input<string>;
            podSecurityContext?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryPodsecuritycontextArgs>;
            priorityClassName?: pulumi.Input<string>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            schedulerName?: pulumi.Input<string>;
            statefulSetUpdateStrategy?: pulumi.Input<string>;
            suspendAction?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoverySuspendactionArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryTolerationsArgs>[]>;
            topologySpreadConstraints?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryTopologyspreadconstraintsArgs>[]>;
            version?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersEnvValuefromArgs>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersEnvfromSecretrefArgs>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersLifecyclePrestopArgs>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * dmclusterSpecDiscoveryAdditionalcontainersPortsArgsProvideDefaults sets the appropriate defaults for DMClusterSpecDiscoveryAdditionalcontainersPortsArgs
         */
        export function dmclusterSpecDiscoveryAdditionalcontainersPortsArgsProvideDefaults(val: DMClusterSpecDiscoveryAdditionalcontainersPortsArgs): DMClusterSpecDiscoveryAdditionalcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesArgs {
            awsElasticBlockStore?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesAwselasticblockstoreArgs>;
            azureDisk?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesAzurediskArgs>;
            azureFile?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesAzurefileArgs>;
            cephfs?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesCephfsArgs>;
            cinder?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesCinderArgs>;
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesConfigmapArgs>;
            csi?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesCsiArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesDownwardapiArgs>;
            emptyDir?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesEmptydirArgs>;
            ephemeral?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesEphemeralArgs>;
            fc?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesFcArgs>;
            flexVolume?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesFlexvolumeArgs>;
            flocker?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesFlockerArgs>;
            gcePersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesGcepersistentdiskArgs>;
            gitRepo?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesGitrepoArgs>;
            glusterfs?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesGlusterfsArgs>;
            hostPath?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesHostpathArgs>;
            iscsi?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesIscsiArgs>;
            name: pulumi.Input<string>;
            nfs?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesNfsArgs>;
            persistentVolumeClaim?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesPersistentvolumeclaimArgs>;
            photonPersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesPhotonpersistentdiskArgs>;
            portworxVolume?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesPortworxvolumeArgs>;
            projected?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesProjectedArgs>;
            quobyte?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesQuobyteArgs>;
            rbd?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesRbdArgs>;
            scaleIO?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesScaleioArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesSecretArgs>;
            storageos?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesStorageosArgs>;
            vsphereVolume?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesVspherevolumeArgs>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesAwselasticblockstoreArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesAzurediskArgs {
            cachingMode?: pulumi.Input<string>;
            diskName: pulumi.Input<string>;
            diskURI: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesAzurefileArgs {
            readOnly?: pulumi.Input<boolean>;
            secretName: pulumi.Input<string>;
            shareName: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesCephfsArgs {
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            path?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretFile?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesCephfsSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesCephfsSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesCinderArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesCinderSecretrefArgs>;
            volumeID: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesCinderSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesConfigmapArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesCsiArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            nodePublishSecretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesCsiNodepublishsecretrefArgs>;
            readOnly?: pulumi.Input<boolean>;
            volumeAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesCsiNodepublishsecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesDownwardapiArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesDownwardapiItemsArgs>[]>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesEmptydirArgs {
            medium?: pulumi.Input<string>;
            sizeLimit?: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesEphemeralArgs {
            readOnly?: pulumi.Input<boolean>;
            volumeClaimTemplate?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateArgs>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateArgs {
            metadata?: pulumi.Input<{[key: string]: any}>;
            spec: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs {
            accessModes?: pulumi.Input<pulumi.Input<string>[]>;
            dataSource?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs>;
            selector?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs>;
            storageClassName?: pulumi.Input<string>;
            volumeMode?: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs {
            apiGroup?: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesFcArgs {
            fsType?: pulumi.Input<string>;
            lun?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            targetWWNs?: pulumi.Input<pulumi.Input<string>[]>;
            wwids?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesFlexvolumeArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesFlexvolumeSecretrefArgs>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesFlexvolumeSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesFlockerArgs {
            datasetName?: pulumi.Input<string>;
            datasetUUID?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesGcepersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            pdName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesGitrepoArgs {
            directory?: pulumi.Input<string>;
            repository: pulumi.Input<string>;
            revision?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesGlusterfsArgs {
            endpoints: pulumi.Input<string>;
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesHostpathArgs {
            path: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesIscsiArgs {
            chapAuthDiscovery?: pulumi.Input<boolean>;
            chapAuthSession?: pulumi.Input<boolean>;
            fsType?: pulumi.Input<string>;
            initiatorName?: pulumi.Input<string>;
            iqn: pulumi.Input<string>;
            iscsiInterface?: pulumi.Input<string>;
            lun: pulumi.Input<number>;
            portals?: pulumi.Input<pulumi.Input<string>[]>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesIscsiSecretrefArgs>;
            targetPortal: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesIscsiSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesNfsArgs {
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            server: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesPersistentvolumeclaimArgs {
            claimName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesPhotonpersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            pdID: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesPortworxvolumeArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesProjectedArgs {
            defaultMode?: pulumi.Input<number>;
            sources: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesProjectedSourcesArgs>[]>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesProjectedSourcesArgs {
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesProjectedSourcesConfigmapArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesProjectedSourcesDownwardapiArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesProjectedSourcesSecretArgs>;
            serviceAccountToken?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesProjectedSourcesServiceaccounttokenArgs>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesProjectedSourcesConfigmapArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesProjectedSourcesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesProjectedSourcesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesProjectedSourcesDownwardapiArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesProjectedSourcesDownwardapiItemsArgs>[]>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesProjectedSourcesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesProjectedSourcesSecretArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesProjectedSourcesSecretItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesProjectedSourcesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesProjectedSourcesServiceaccounttokenArgs {
            audience?: pulumi.Input<string>;
            expirationSeconds?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesQuobyteArgs {
            group?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            registry: pulumi.Input<string>;
            tenant?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
            volume: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesRbdArgs {
            fsType?: pulumi.Input<string>;
            image: pulumi.Input<string>;
            keyring?: pulumi.Input<string>;
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            pool?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesRbdSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesRbdSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesScaleioArgs {
            fsType?: pulumi.Input<string>;
            gateway: pulumi.Input<string>;
            protectionDomain?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesScaleioSecretrefArgs>;
            sslEnabled?: pulumi.Input<boolean>;
            storageMode?: pulumi.Input<string>;
            storagePool?: pulumi.Input<string>;
            system: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesScaleioSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesSecretArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesSecretItemsArgs>[]>;
            optional?: pulumi.Input<boolean>;
            secretName?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesStorageosArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAdditionalvolumesStorageosSecretrefArgs>;
            volumeName?: pulumi.Input<string>;
            volumeNamespace?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesStorageosSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAdditionalvolumesVspherevolumeArgs {
            fsType?: pulumi.Input<string>;
            storagePolicyID?: pulumi.Input<string>;
            storagePolicyName?: pulumi.Input<string>;
            volumePath: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityPodantiaffinityArgs>;
        }

        export interface DMClusterSpecDiscoveryAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface DMClusterSpecDiscoveryAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface DMClusterSpecDiscoveryAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface DMClusterSpecDiscoveryAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface DMClusterSpecDiscoveryAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface DMClusterSpecDiscoveryAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface DMClusterSpecDiscoveryAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface DMClusterSpecDiscoveryAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecDiscoveryAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecDiscoveryAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface DMClusterSpecDiscoveryAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface DMClusterSpecDiscoveryAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecDiscoveryAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecDiscoveryAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryDnsconfigArgs {
            nameservers?: pulumi.Input<pulumi.Input<string>[]>;
            options?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryDnsconfigOptionsArgs>[]>;
            searches?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryDnsconfigOptionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryEnvValuefromArgs>;
        }

        export interface DMClusterSpecDiscoveryEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryEnvValuefromSecretkeyrefArgs>;
        }

        export interface DMClusterSpecDiscoveryEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecDiscoveryEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecDiscoveryEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryEnvfromSecretrefArgs>;
        }

        export interface DMClusterSpecDiscoveryEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecDiscoveryEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecDiscoveryImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersEnvValuefromArgs>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersEnvfromSecretrefArgs>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersLifecyclePrestopArgs>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * dmclusterSpecDiscoveryInitcontainersPortsArgsProvideDefaults sets the appropriate defaults for DMClusterSpecDiscoveryInitcontainersPortsArgs
         */
        export function dmclusterSpecDiscoveryInitcontainersPortsArgsProvideDefaults(val: DMClusterSpecDiscoveryInitcontainersPortsArgs): DMClusterSpecDiscoveryInitcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface DMClusterSpecDiscoveryInitcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryInitcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryInitcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryPodsecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryPodsecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryPodsecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryPodsecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDiscoveryPodsecuritycontextWindowsoptionsArgs>;
        }

        export interface DMClusterSpecDiscoveryPodsecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryPodsecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryPodsecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryPodsecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoverySuspendactionArgs {
            suspendStatefulSet?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecDiscoveryTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface DMClusterSpecDiscoveryTopologyspreadconstraintsArgs {
            topologyKey: pulumi.Input<string>;
        }

        export interface DMClusterSpecDnsconfigArgs {
            nameservers?: pulumi.Input<pulumi.Input<string>[]>;
            options?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecDnsconfigOptionsArgs>[]>;
            searches?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecDnsconfigOptionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface DMClusterSpecImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterArgs {
            additionalContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersArgs>[]>;
            additionalVolumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumemountsArgs>[]>;
            additionalVolumes?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesArgs>[]>;
            affinity?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityArgs>;
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            baseImage?: pulumi.Input<string>;
            config?: pulumi.Input<{[key: string]: any}>;
            configUpdateStrategy?: pulumi.Input<string>;
            dataSubDir?: pulumi.Input<string>;
            dnsConfig?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterDnsconfigArgs>;
            dnsPolicy?: pulumi.Input<string>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterEnvfromArgs>[]>;
            hostNetwork?: pulumi.Input<boolean>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterImagepullsecretsArgs>[]>;
            initContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersArgs>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            maxFailoverCount?: pulumi.Input<number>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            podManagementPolicy?: pulumi.Input<string>;
            podSecurityContext?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterPodsecuritycontextArgs>;
            priorityClassName?: pulumi.Input<string>;
            replicas: pulumi.Input<number>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            schedulerName?: pulumi.Input<string>;
            service?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterServiceArgs>;
            statefulSetUpdateStrategy?: pulumi.Input<string>;
            storageClassName?: pulumi.Input<string>;
            storageSize?: pulumi.Input<string>;
            suspendAction?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterSuspendactionArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterTolerationsArgs>[]>;
            topologySpreadConstraints?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterTopologyspreadconstraintsArgs>[]>;
            version?: pulumi.Input<string>;
        }
        /**
         * dmclusterSpecMasterArgsProvideDefaults sets the appropriate defaults for DMClusterSpecMasterArgs
         */
        export function dmclusterSpecMasterArgsProvideDefaults(val: DMClusterSpecMasterArgs): DMClusterSpecMasterArgs {
            return {
                ...val,
                baseImage: (val.baseImage) ?? "pingcap/dm",
            };
        }

        export interface DMClusterSpecMasterAdditionalcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersEnvValuefromArgs>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersEnvfromSecretrefArgs>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersLifecyclePrestopArgs>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * dmclusterSpecMasterAdditionalcontainersPortsArgsProvideDefaults sets the appropriate defaults for DMClusterSpecMasterAdditionalcontainersPortsArgs
         */
        export function dmclusterSpecMasterAdditionalcontainersPortsArgsProvideDefaults(val: DMClusterSpecMasterAdditionalcontainersPortsArgs): DMClusterSpecMasterAdditionalcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface DMClusterSpecMasterAdditionalcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesArgs {
            awsElasticBlockStore?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesAwselasticblockstoreArgs>;
            azureDisk?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesAzurediskArgs>;
            azureFile?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesAzurefileArgs>;
            cephfs?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesCephfsArgs>;
            cinder?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesCinderArgs>;
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesConfigmapArgs>;
            csi?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesCsiArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesDownwardapiArgs>;
            emptyDir?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesEmptydirArgs>;
            ephemeral?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesEphemeralArgs>;
            fc?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesFcArgs>;
            flexVolume?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesFlexvolumeArgs>;
            flocker?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesFlockerArgs>;
            gcePersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesGcepersistentdiskArgs>;
            gitRepo?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesGitrepoArgs>;
            glusterfs?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesGlusterfsArgs>;
            hostPath?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesHostpathArgs>;
            iscsi?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesIscsiArgs>;
            name: pulumi.Input<string>;
            nfs?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesNfsArgs>;
            persistentVolumeClaim?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesPersistentvolumeclaimArgs>;
            photonPersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesPhotonpersistentdiskArgs>;
            portworxVolume?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesPortworxvolumeArgs>;
            projected?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesProjectedArgs>;
            quobyte?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesQuobyteArgs>;
            rbd?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesRbdArgs>;
            scaleIO?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesScaleioArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesSecretArgs>;
            storageos?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesStorageosArgs>;
            vsphereVolume?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesVspherevolumeArgs>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesAwselasticblockstoreArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesAzurediskArgs {
            cachingMode?: pulumi.Input<string>;
            diskName: pulumi.Input<string>;
            diskURI: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesAzurefileArgs {
            readOnly?: pulumi.Input<boolean>;
            secretName: pulumi.Input<string>;
            shareName: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesCephfsArgs {
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            path?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretFile?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesCephfsSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesCephfsSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesCinderArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesCinderSecretrefArgs>;
            volumeID: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesCinderSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesConfigmapArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesCsiArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            nodePublishSecretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesCsiNodepublishsecretrefArgs>;
            readOnly?: pulumi.Input<boolean>;
            volumeAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesCsiNodepublishsecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesDownwardapiArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesDownwardapiItemsArgs>[]>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesEmptydirArgs {
            medium?: pulumi.Input<string>;
            sizeLimit?: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesEphemeralArgs {
            readOnly?: pulumi.Input<boolean>;
            volumeClaimTemplate?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesEphemeralVolumeclaimtemplateArgs>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesEphemeralVolumeclaimtemplateArgs {
            metadata?: pulumi.Input<{[key: string]: any}>;
            spec: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs {
            accessModes?: pulumi.Input<pulumi.Input<string>[]>;
            dataSource?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs>;
            selector?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs>;
            storageClassName?: pulumi.Input<string>;
            volumeMode?: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs {
            apiGroup?: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesFcArgs {
            fsType?: pulumi.Input<string>;
            lun?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            targetWWNs?: pulumi.Input<pulumi.Input<string>[]>;
            wwids?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesFlexvolumeArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesFlexvolumeSecretrefArgs>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesFlexvolumeSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesFlockerArgs {
            datasetName?: pulumi.Input<string>;
            datasetUUID?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesGcepersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            pdName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesGitrepoArgs {
            directory?: pulumi.Input<string>;
            repository: pulumi.Input<string>;
            revision?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesGlusterfsArgs {
            endpoints: pulumi.Input<string>;
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesHostpathArgs {
            path: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesIscsiArgs {
            chapAuthDiscovery?: pulumi.Input<boolean>;
            chapAuthSession?: pulumi.Input<boolean>;
            fsType?: pulumi.Input<string>;
            initiatorName?: pulumi.Input<string>;
            iqn: pulumi.Input<string>;
            iscsiInterface?: pulumi.Input<string>;
            lun: pulumi.Input<number>;
            portals?: pulumi.Input<pulumi.Input<string>[]>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesIscsiSecretrefArgs>;
            targetPortal: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesIscsiSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesNfsArgs {
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            server: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesPersistentvolumeclaimArgs {
            claimName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesPhotonpersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            pdID: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesPortworxvolumeArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesProjectedArgs {
            defaultMode?: pulumi.Input<number>;
            sources: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesProjectedSourcesArgs>[]>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesProjectedSourcesArgs {
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesProjectedSourcesConfigmapArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesProjectedSourcesDownwardapiArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesProjectedSourcesSecretArgs>;
            serviceAccountToken?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesProjectedSourcesServiceaccounttokenArgs>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesProjectedSourcesConfigmapArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesProjectedSourcesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesProjectedSourcesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesProjectedSourcesDownwardapiArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesProjectedSourcesDownwardapiItemsArgs>[]>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesProjectedSourcesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesProjectedSourcesSecretArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesProjectedSourcesSecretItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesProjectedSourcesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesProjectedSourcesServiceaccounttokenArgs {
            audience?: pulumi.Input<string>;
            expirationSeconds?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesQuobyteArgs {
            group?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            registry: pulumi.Input<string>;
            tenant?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
            volume: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesRbdArgs {
            fsType?: pulumi.Input<string>;
            image: pulumi.Input<string>;
            keyring?: pulumi.Input<string>;
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            pool?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesRbdSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesRbdSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesScaleioArgs {
            fsType?: pulumi.Input<string>;
            gateway: pulumi.Input<string>;
            protectionDomain?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesScaleioSecretrefArgs>;
            sslEnabled?: pulumi.Input<boolean>;
            storageMode?: pulumi.Input<string>;
            storagePool?: pulumi.Input<string>;
            system: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesScaleioSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesSecretArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesSecretItemsArgs>[]>;
            optional?: pulumi.Input<boolean>;
            secretName?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesStorageosArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAdditionalvolumesStorageosSecretrefArgs>;
            volumeName?: pulumi.Input<string>;
            volumeNamespace?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesStorageosSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAdditionalvolumesVspherevolumeArgs {
            fsType?: pulumi.Input<string>;
            storagePolicyID?: pulumi.Input<string>;
            storagePolicyName?: pulumi.Input<string>;
            volumePath: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityPodantiaffinityArgs>;
        }

        export interface DMClusterSpecMasterAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface DMClusterSpecMasterAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface DMClusterSpecMasterAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface DMClusterSpecMasterAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface DMClusterSpecMasterAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface DMClusterSpecMasterAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface DMClusterSpecMasterAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface DMClusterSpecMasterAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecMasterAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecMasterAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface DMClusterSpecMasterAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface DMClusterSpecMasterAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecMasterAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecMasterAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterDnsconfigArgs {
            nameservers?: pulumi.Input<pulumi.Input<string>[]>;
            options?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterDnsconfigOptionsArgs>[]>;
            searches?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterDnsconfigOptionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterEnvValuefromArgs>;
        }

        export interface DMClusterSpecMasterEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterEnvValuefromSecretkeyrefArgs>;
        }

        export interface DMClusterSpecMasterEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecMasterEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecMasterEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterEnvfromSecretrefArgs>;
        }

        export interface DMClusterSpecMasterEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecMasterEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecMasterImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterInitcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterInitcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersEnvValuefromArgs>;
        }

        export interface DMClusterSpecMasterInitcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface DMClusterSpecMasterInitcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecMasterInitcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterInitcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterInitcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecMasterInitcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersEnvfromSecretrefArgs>;
        }

        export interface DMClusterSpecMasterInitcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecMasterInitcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecMasterInitcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersLifecyclePrestopArgs>;
        }

        export interface DMClusterSpecMasterInitcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface DMClusterSpecMasterInitcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterInitcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterInitcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterInitcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecMasterInitcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface DMClusterSpecMasterInitcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterInitcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterInitcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterInitcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecMasterInitcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface DMClusterSpecMasterInitcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterInitcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterInitcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterInitcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecMasterInitcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * dmclusterSpecMasterInitcontainersPortsArgsProvideDefaults sets the appropriate defaults for DMClusterSpecMasterInitcontainersPortsArgs
         */
        export function dmclusterSpecMasterInitcontainersPortsArgsProvideDefaults(val: DMClusterSpecMasterInitcontainersPortsArgs): DMClusterSpecMasterInitcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface DMClusterSpecMasterInitcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface DMClusterSpecMasterInitcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterInitcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterInitcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterInitcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecMasterInitcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface DMClusterSpecMasterInitcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface DMClusterSpecMasterInitcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterInitcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterInitcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterInitcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterInitcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface DMClusterSpecMasterInitcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecMasterInitcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterInitcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterInitcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterInitcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecMasterInitcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterInitcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterPodsecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterPodsecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterPodsecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterPodsecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecMasterPodsecuritycontextWindowsoptionsArgs>;
        }

        export interface DMClusterSpecMasterPodsecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterPodsecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterPodsecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterPodsecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterServiceArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            clusterIP?: pulumi.Input<string>;
            externalTrafficPolicy?: pulumi.Input<string>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            loadBalancerIP?: pulumi.Input<string>;
            loadBalancerSourceRanges?: pulumi.Input<pulumi.Input<string>[]>;
            masterNodePort?: pulumi.Input<number>;
            port?: pulumi.Input<number>;
            portName?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterSuspendactionArgs {
            suspendStatefulSet?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecMasterTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface DMClusterSpecMasterTopologyspreadconstraintsArgs {
            topologyKey: pulumi.Input<string>;
        }

        export interface DMClusterSpecPodsecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecPodsecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecPodsecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecPodsecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecPodsecuritycontextWindowsoptionsArgs>;
        }

        export interface DMClusterSpecPodsecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface DMClusterSpecPodsecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface DMClusterSpecPodsecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecPodsecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface DMClusterSpecSuspendactionArgs {
            suspendStatefulSet?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecTlsclusterArgs {
            enabled?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface DMClusterSpecTopologyspreadconstraintsArgs {
            topologyKey: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerArgs {
            additionalContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersArgs>[]>;
            additionalVolumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumemountsArgs>[]>;
            additionalVolumes?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesArgs>[]>;
            affinity?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityArgs>;
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            baseImage?: pulumi.Input<string>;
            config?: pulumi.Input<{[key: string]: any}>;
            configUpdateStrategy?: pulumi.Input<string>;
            dataSubDir?: pulumi.Input<string>;
            dnsConfig?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerDnsconfigArgs>;
            dnsPolicy?: pulumi.Input<string>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerEnvfromArgs>[]>;
            failover?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerFailoverArgs>;
            hostNetwork?: pulumi.Input<boolean>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerImagepullsecretsArgs>[]>;
            initContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersArgs>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            maxFailoverCount?: pulumi.Input<number>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            podManagementPolicy?: pulumi.Input<string>;
            podSecurityContext?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerPodsecuritycontextArgs>;
            priorityClassName?: pulumi.Input<string>;
            recoverFailover?: pulumi.Input<boolean>;
            replicas: pulumi.Input<number>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            schedulerName?: pulumi.Input<string>;
            statefulSetUpdateStrategy?: pulumi.Input<string>;
            storageClassName?: pulumi.Input<string>;
            storageSize?: pulumi.Input<string>;
            suspendAction?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerSuspendactionArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerTolerationsArgs>[]>;
            topologySpreadConstraints?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerTopologyspreadconstraintsArgs>[]>;
            version?: pulumi.Input<string>;
        }
        /**
         * dmclusterSpecWorkerArgsProvideDefaults sets the appropriate defaults for DMClusterSpecWorkerArgs
         */
        export function dmclusterSpecWorkerArgsProvideDefaults(val: DMClusterSpecWorkerArgs): DMClusterSpecWorkerArgs {
            return {
                ...val,
                baseImage: (val.baseImage) ?? "pingcap/dm",
            };
        }

        export interface DMClusterSpecWorkerAdditionalcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersEnvValuefromArgs>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersEnvfromSecretrefArgs>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersLifecyclePrestopArgs>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * dmclusterSpecWorkerAdditionalcontainersPortsArgsProvideDefaults sets the appropriate defaults for DMClusterSpecWorkerAdditionalcontainersPortsArgs
         */
        export function dmclusterSpecWorkerAdditionalcontainersPortsArgsProvideDefaults(val: DMClusterSpecWorkerAdditionalcontainersPortsArgs): DMClusterSpecWorkerAdditionalcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface DMClusterSpecWorkerAdditionalcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesArgs {
            awsElasticBlockStore?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesAwselasticblockstoreArgs>;
            azureDisk?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesAzurediskArgs>;
            azureFile?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesAzurefileArgs>;
            cephfs?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesCephfsArgs>;
            cinder?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesCinderArgs>;
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesConfigmapArgs>;
            csi?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesCsiArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesDownwardapiArgs>;
            emptyDir?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesEmptydirArgs>;
            ephemeral?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesEphemeralArgs>;
            fc?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesFcArgs>;
            flexVolume?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesFlexvolumeArgs>;
            flocker?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesFlockerArgs>;
            gcePersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesGcepersistentdiskArgs>;
            gitRepo?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesGitrepoArgs>;
            glusterfs?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesGlusterfsArgs>;
            hostPath?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesHostpathArgs>;
            iscsi?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesIscsiArgs>;
            name: pulumi.Input<string>;
            nfs?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesNfsArgs>;
            persistentVolumeClaim?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesPersistentvolumeclaimArgs>;
            photonPersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesPhotonpersistentdiskArgs>;
            portworxVolume?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesPortworxvolumeArgs>;
            projected?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesProjectedArgs>;
            quobyte?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesQuobyteArgs>;
            rbd?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesRbdArgs>;
            scaleIO?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesScaleioArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesSecretArgs>;
            storageos?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesStorageosArgs>;
            vsphereVolume?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesVspherevolumeArgs>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesAwselasticblockstoreArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesAzurediskArgs {
            cachingMode?: pulumi.Input<string>;
            diskName: pulumi.Input<string>;
            diskURI: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesAzurefileArgs {
            readOnly?: pulumi.Input<boolean>;
            secretName: pulumi.Input<string>;
            shareName: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesCephfsArgs {
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            path?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretFile?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesCephfsSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesCephfsSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesCinderArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesCinderSecretrefArgs>;
            volumeID: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesCinderSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesConfigmapArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesCsiArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            nodePublishSecretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesCsiNodepublishsecretrefArgs>;
            readOnly?: pulumi.Input<boolean>;
            volumeAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesCsiNodepublishsecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesDownwardapiArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesDownwardapiItemsArgs>[]>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesEmptydirArgs {
            medium?: pulumi.Input<string>;
            sizeLimit?: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesEphemeralArgs {
            readOnly?: pulumi.Input<boolean>;
            volumeClaimTemplate?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesEphemeralVolumeclaimtemplateArgs>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesEphemeralVolumeclaimtemplateArgs {
            metadata?: pulumi.Input<{[key: string]: any}>;
            spec: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs {
            accessModes?: pulumi.Input<pulumi.Input<string>[]>;
            dataSource?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs>;
            selector?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs>;
            storageClassName?: pulumi.Input<string>;
            volumeMode?: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs {
            apiGroup?: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesFcArgs {
            fsType?: pulumi.Input<string>;
            lun?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            targetWWNs?: pulumi.Input<pulumi.Input<string>[]>;
            wwids?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesFlexvolumeArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesFlexvolumeSecretrefArgs>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesFlexvolumeSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesFlockerArgs {
            datasetName?: pulumi.Input<string>;
            datasetUUID?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesGcepersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            pdName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesGitrepoArgs {
            directory?: pulumi.Input<string>;
            repository: pulumi.Input<string>;
            revision?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesGlusterfsArgs {
            endpoints: pulumi.Input<string>;
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesHostpathArgs {
            path: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesIscsiArgs {
            chapAuthDiscovery?: pulumi.Input<boolean>;
            chapAuthSession?: pulumi.Input<boolean>;
            fsType?: pulumi.Input<string>;
            initiatorName?: pulumi.Input<string>;
            iqn: pulumi.Input<string>;
            iscsiInterface?: pulumi.Input<string>;
            lun: pulumi.Input<number>;
            portals?: pulumi.Input<pulumi.Input<string>[]>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesIscsiSecretrefArgs>;
            targetPortal: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesIscsiSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesNfsArgs {
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            server: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesPersistentvolumeclaimArgs {
            claimName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesPhotonpersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            pdID: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesPortworxvolumeArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesProjectedArgs {
            defaultMode?: pulumi.Input<number>;
            sources: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesProjectedSourcesArgs>[]>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesProjectedSourcesArgs {
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesProjectedSourcesConfigmapArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesProjectedSourcesDownwardapiArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesProjectedSourcesSecretArgs>;
            serviceAccountToken?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesProjectedSourcesServiceaccounttokenArgs>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesProjectedSourcesConfigmapArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesProjectedSourcesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesProjectedSourcesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesProjectedSourcesDownwardapiArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesProjectedSourcesDownwardapiItemsArgs>[]>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesProjectedSourcesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesProjectedSourcesSecretArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesProjectedSourcesSecretItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesProjectedSourcesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesProjectedSourcesServiceaccounttokenArgs {
            audience?: pulumi.Input<string>;
            expirationSeconds?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesQuobyteArgs {
            group?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            registry: pulumi.Input<string>;
            tenant?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
            volume: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesRbdArgs {
            fsType?: pulumi.Input<string>;
            image: pulumi.Input<string>;
            keyring?: pulumi.Input<string>;
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            pool?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesRbdSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesRbdSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesScaleioArgs {
            fsType?: pulumi.Input<string>;
            gateway: pulumi.Input<string>;
            protectionDomain?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesScaleioSecretrefArgs>;
            sslEnabled?: pulumi.Input<boolean>;
            storageMode?: pulumi.Input<string>;
            storagePool?: pulumi.Input<string>;
            system: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesScaleioSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesSecretArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesSecretItemsArgs>[]>;
            optional?: pulumi.Input<boolean>;
            secretName?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesStorageosArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAdditionalvolumesStorageosSecretrefArgs>;
            volumeName?: pulumi.Input<string>;
            volumeNamespace?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesStorageosSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAdditionalvolumesVspherevolumeArgs {
            fsType?: pulumi.Input<string>;
            storagePolicyID?: pulumi.Input<string>;
            storagePolicyName?: pulumi.Input<string>;
            volumePath: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityPodantiaffinityArgs>;
        }

        export interface DMClusterSpecWorkerAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface DMClusterSpecWorkerAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface DMClusterSpecWorkerAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface DMClusterSpecWorkerAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface DMClusterSpecWorkerAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface DMClusterSpecWorkerAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface DMClusterSpecWorkerAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface DMClusterSpecWorkerAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecWorkerAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecWorkerAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface DMClusterSpecWorkerAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface DMClusterSpecWorkerAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecWorkerAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface DMClusterSpecWorkerAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerDnsconfigArgs {
            nameservers?: pulumi.Input<pulumi.Input<string>[]>;
            options?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerDnsconfigOptionsArgs>[]>;
            searches?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerDnsconfigOptionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerEnvValuefromArgs>;
        }

        export interface DMClusterSpecWorkerEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerEnvValuefromSecretkeyrefArgs>;
        }

        export interface DMClusterSpecWorkerEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecWorkerEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecWorkerEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerEnvfromSecretrefArgs>;
        }

        export interface DMClusterSpecWorkerEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecWorkerEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecWorkerFailoverArgs {
            recoverByUID?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerInitcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerInitcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersEnvValuefromArgs>;
        }

        export interface DMClusterSpecWorkerInitcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface DMClusterSpecWorkerInitcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecWorkerInitcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerInitcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerInitcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecWorkerInitcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersEnvfromSecretrefArgs>;
        }

        export interface DMClusterSpecWorkerInitcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecWorkerInitcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecWorkerInitcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersLifecyclePrestopArgs>;
        }

        export interface DMClusterSpecWorkerInitcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface DMClusterSpecWorkerInitcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerInitcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerInitcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerInitcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecWorkerInitcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface DMClusterSpecWorkerInitcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerInitcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerInitcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerInitcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecWorkerInitcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface DMClusterSpecWorkerInitcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerInitcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerInitcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerInitcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecWorkerInitcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * dmclusterSpecWorkerInitcontainersPortsArgsProvideDefaults sets the appropriate defaults for DMClusterSpecWorkerInitcontainersPortsArgs
         */
        export function dmclusterSpecWorkerInitcontainersPortsArgsProvideDefaults(val: DMClusterSpecWorkerInitcontainersPortsArgs): DMClusterSpecWorkerInitcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface DMClusterSpecWorkerInitcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface DMClusterSpecWorkerInitcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerInitcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerInitcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerInitcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecWorkerInitcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface DMClusterSpecWorkerInitcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface DMClusterSpecWorkerInitcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerInitcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerInitcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerInitcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerInitcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface DMClusterSpecWorkerInitcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface DMClusterSpecWorkerInitcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerInitcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerInitcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerInitcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface DMClusterSpecWorkerInitcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerInitcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerPodsecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerPodsecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerPodsecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerPodsecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterSpecWorkerPodsecuritycontextWindowsoptionsArgs>;
        }

        export interface DMClusterSpecWorkerPodsecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerPodsecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerPodsecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerPodsecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerSuspendactionArgs {
            suspendStatefulSet?: pulumi.Input<boolean>;
        }

        export interface DMClusterSpecWorkerTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface DMClusterSpecWorkerTopologyspreadconstraintsArgs {
            topologyKey: pulumi.Input<string>;
        }

        export interface DMClusterStatusArgs {
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterStatusConditionsArgs>[]>;
            master?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterStatusMasterArgs>;
            worker?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterStatusWorkerArgs>;
        }

        export interface DMClusterStatusConditionsArgs {
            lastTransitionTime?: pulumi.Input<string>;
            lastUpdateTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface DMClusterStatusMasterArgs {
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterStatusMasterConditionsArgs>[]>;
            failureMembers?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterStatusMasterFailuremembersArgs>}>;
            image?: pulumi.Input<string>;
            leader?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterStatusMasterLeaderArgs>;
            members?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterStatusMasterMembersArgs>}>;
            phase?: pulumi.Input<string>;
            statefulSet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterStatusMasterStatefulsetArgs>;
            synced?: pulumi.Input<boolean>;
            unjoinedMembers?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterStatusMasterUnjoinedmembersArgs>}>;
            volumes?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterStatusMasterVolumesArgs>}>;
        }

        export interface DMClusterStatusMasterConditionsArgs {
            lastTransitionTime: pulumi.Input<string>;
            message: pulumi.Input<string>;
            observedGeneration?: pulumi.Input<number>;
            reason: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface DMClusterStatusMasterFailuremembersArgs {
            createdAt?: pulumi.Input<string>;
            memberDeleted?: pulumi.Input<boolean>;
            memberID?: pulumi.Input<string>;
            podName?: pulumi.Input<string>;
            pvcUID?: pulumi.Input<string>;
        }

        export interface DMClusterStatusMasterLeaderArgs {
            clientURL: pulumi.Input<string>;
            health: pulumi.Input<boolean>;
            id: pulumi.Input<string>;
            lastTransitionTime?: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface DMClusterStatusMasterMembersArgs {
            clientURL: pulumi.Input<string>;
            health: pulumi.Input<boolean>;
            id: pulumi.Input<string>;
            lastTransitionTime?: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface DMClusterStatusMasterStatefulsetArgs {
            collisionCount?: pulumi.Input<number>;
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterStatusMasterStatefulsetConditionsArgs>[]>;
            currentReplicas?: pulumi.Input<number>;
            currentRevision?: pulumi.Input<string>;
            observedGeneration?: pulumi.Input<number>;
            readyReplicas?: pulumi.Input<number>;
            replicas: pulumi.Input<number>;
            updateRevision?: pulumi.Input<string>;
            updatedReplicas?: pulumi.Input<number>;
        }

        export interface DMClusterStatusMasterStatefulsetConditionsArgs {
            lastTransitionTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface DMClusterStatusMasterUnjoinedmembersArgs {
            createdAt?: pulumi.Input<string>;
            podName?: pulumi.Input<string>;
            pvcUID?: pulumi.Input<string>;
            pvcUIDSet?: pulumi.Input<{[key: string]: pulumi.Input<{[key: string]: any}>}>;
        }

        export interface DMClusterStatusMasterVolumesArgs {
            boundCount?: pulumi.Input<number>;
            currentCapacity: pulumi.Input<number | string>;
            currentCount?: pulumi.Input<number>;
            name: pulumi.Input<string>;
            resizedCapacity: pulumi.Input<number | string>;
            resizedCount?: pulumi.Input<number>;
        }

        export interface DMClusterStatusWorkerArgs {
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterStatusWorkerConditionsArgs>[]>;
            failoverUID?: pulumi.Input<string>;
            failureMembers?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterStatusWorkerFailuremembersArgs>}>;
            image?: pulumi.Input<string>;
            members?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterStatusWorkerMembersArgs>}>;
            phase?: pulumi.Input<string>;
            statefulSet?: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterStatusWorkerStatefulsetArgs>;
            synced?: pulumi.Input<boolean>;
            volumes?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.DMClusterStatusWorkerVolumesArgs>}>;
        }

        export interface DMClusterStatusWorkerConditionsArgs {
            lastTransitionTime: pulumi.Input<string>;
            message: pulumi.Input<string>;
            observedGeneration?: pulumi.Input<number>;
            reason: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface DMClusterStatusWorkerFailuremembersArgs {
            createdAt?: pulumi.Input<string>;
            podName?: pulumi.Input<string>;
        }

        export interface DMClusterStatusWorkerMembersArgs {
            addr?: pulumi.Input<string>;
            lastTransitionTime?: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            stage: pulumi.Input<string>;
        }

        export interface DMClusterStatusWorkerStatefulsetArgs {
            collisionCount?: pulumi.Input<number>;
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.DMClusterStatusWorkerStatefulsetConditionsArgs>[]>;
            currentReplicas?: pulumi.Input<number>;
            currentRevision?: pulumi.Input<string>;
            observedGeneration?: pulumi.Input<number>;
            readyReplicas?: pulumi.Input<number>;
            replicas: pulumi.Input<number>;
            updateRevision?: pulumi.Input<string>;
            updatedReplicas?: pulumi.Input<number>;
        }

        export interface DMClusterStatusWorkerStatefulsetConditionsArgs {
            lastTransitionTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface DMClusterStatusWorkerVolumesArgs {
            boundCount?: pulumi.Input<number>;
            currentCapacity: pulumi.Input<number | string>;
            currentCount?: pulumi.Input<number>;
            name: pulumi.Input<string>;
            resizedCapacity: pulumi.Input<number | string>;
            resizedCount?: pulumi.Input<number>;
        }

        export interface RestoreSpecArgs {
            affinity?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityArgs>;
            azblob?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAzblobArgs>;
            backupType?: pulumi.Input<string>;
            br?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecBrArgs>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecEnvArgs>[]>;
            gcs?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecGcsArgs>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecImagepullsecretsArgs>[]>;
            local?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalArgs>;
            podSecurityContext?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecPodsecuritycontextArgs>;
            priorityClassName?: pulumi.Input<string>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecResourcesArgs>;
            s3?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecS3Args>;
            serviceAccount?: pulumi.Input<string>;
            storageClassName?: pulumi.Input<string>;
            storageSize?: pulumi.Input<string>;
            tableFilter?: pulumi.Input<pulumi.Input<string>[]>;
            tikvGCLifeTime?: pulumi.Input<string>;
            to?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecToArgs>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecTolerationsArgs>[]>;
            toolImage?: pulumi.Input<string>;
            useKMS?: pulumi.Input<boolean>;
        }

        export interface RestoreSpecAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityPodantiaffinityArgs>;
        }

        export interface RestoreSpecAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface RestoreSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface RestoreSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface RestoreSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RestoreSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RestoreSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface RestoreSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface RestoreSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RestoreSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RestoreSpecAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface RestoreSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface RestoreSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface RestoreSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RestoreSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RestoreSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface RestoreSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RestoreSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RestoreSpecAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface RestoreSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface RestoreSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface RestoreSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RestoreSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RestoreSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface RestoreSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RestoreSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RestoreSpecAzblobArgs {
            accessTier?: pulumi.Input<string>;
            container?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
            prefix?: pulumi.Input<string>;
            secretName?: pulumi.Input<string>;
        }

        export interface RestoreSpecBrArgs {
            checksum?: pulumi.Input<boolean>;
            cluster: pulumi.Input<string>;
            clusterNamespace?: pulumi.Input<string>;
            concurrency?: pulumi.Input<number>;
            db?: pulumi.Input<string>;
            logLevel?: pulumi.Input<string>;
            onLine?: pulumi.Input<boolean>;
            options?: pulumi.Input<pulumi.Input<string>[]>;
            rateLimit?: pulumi.Input<number>;
            sendCredToTikv?: pulumi.Input<boolean>;
            statusAddr?: pulumi.Input<string>;
            table?: pulumi.Input<string>;
            timeAgo?: pulumi.Input<string>;
        }

        export interface RestoreSpecEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecEnvValuefromArgs>;
        }

        export interface RestoreSpecEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecEnvValuefromSecretkeyrefArgs>;
        }

        export interface RestoreSpecEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RestoreSpecEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface RestoreSpecEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface RestoreSpecEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RestoreSpecGcsArgs {
            bucket?: pulumi.Input<string>;
            bucketAcl?: pulumi.Input<string>;
            location?: pulumi.Input<string>;
            objectAcl?: pulumi.Input<string>;
            path?: pulumi.Input<string>;
            prefix?: pulumi.Input<string>;
            projectId: pulumi.Input<string>;
            secretName?: pulumi.Input<string>;
            storageClass?: pulumi.Input<string>;
        }

        export interface RestoreSpecImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalArgs {
            prefix?: pulumi.Input<string>;
            volume: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeArgs>;
            volumeMount: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumemountArgs>;
        }

        export interface RestoreSpecLocalVolumeArgs {
            awsElasticBlockStore?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeAwselasticblockstoreArgs>;
            azureDisk?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeAzurediskArgs>;
            azureFile?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeAzurefileArgs>;
            cephfs?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeCephfsArgs>;
            cinder?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeCinderArgs>;
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeConfigmapArgs>;
            csi?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeCsiArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeDownwardapiArgs>;
            emptyDir?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeEmptydirArgs>;
            ephemeral?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeEphemeralArgs>;
            fc?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeFcArgs>;
            flexVolume?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeFlexvolumeArgs>;
            flocker?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeFlockerArgs>;
            gcePersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeGcepersistentdiskArgs>;
            gitRepo?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeGitrepoArgs>;
            glusterfs?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeGlusterfsArgs>;
            hostPath?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeHostpathArgs>;
            iscsi?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeIscsiArgs>;
            name: pulumi.Input<string>;
            nfs?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeNfsArgs>;
            persistentVolumeClaim?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumePersistentvolumeclaimArgs>;
            photonPersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumePhotonpersistentdiskArgs>;
            portworxVolume?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumePortworxvolumeArgs>;
            projected?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeProjectedArgs>;
            quobyte?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeQuobyteArgs>;
            rbd?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeRbdArgs>;
            scaleIO?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeScaleioArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeSecretArgs>;
            storageos?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeStorageosArgs>;
            vsphereVolume?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeVspherevolumeArgs>;
        }

        export interface RestoreSpecLocalVolumeAwselasticblockstoreArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeAzurediskArgs {
            cachingMode?: pulumi.Input<string>;
            diskName: pulumi.Input<string>;
            diskURI: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface RestoreSpecLocalVolumeAzurefileArgs {
            readOnly?: pulumi.Input<boolean>;
            secretName: pulumi.Input<string>;
            shareName: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeCephfsArgs {
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            path?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretFile?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeCephfsSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeCephfsSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeCinderArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeCinderSecretrefArgs>;
            volumeID: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeCinderSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeConfigmapArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RestoreSpecLocalVolumeConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeCsiArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            nodePublishSecretRef?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeCsiNodepublishsecretrefArgs>;
            readOnly?: pulumi.Input<boolean>;
            volumeAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RestoreSpecLocalVolumeCsiNodepublishsecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeDownwardapiArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeDownwardapiItemsArgs>[]>;
        }

        export interface RestoreSpecLocalVolumeDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface RestoreSpecLocalVolumeDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeEmptydirArgs {
            medium?: pulumi.Input<string>;
            sizeLimit?: pulumi.Input<number | string>;
        }

        export interface RestoreSpecLocalVolumeEphemeralArgs {
            readOnly?: pulumi.Input<boolean>;
            volumeClaimTemplate?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeEphemeralVolumeclaimtemplateArgs>;
        }

        export interface RestoreSpecLocalVolumeEphemeralVolumeclaimtemplateArgs {
            metadata?: pulumi.Input<{[key: string]: any}>;
            spec: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeEphemeralVolumeclaimtemplateSpecArgs>;
        }

        export interface RestoreSpecLocalVolumeEphemeralVolumeclaimtemplateSpecArgs {
            accessModes?: pulumi.Input<pulumi.Input<string>[]>;
            dataSource?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeEphemeralVolumeclaimtemplateSpecDatasourceArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeEphemeralVolumeclaimtemplateSpecResourcesArgs>;
            selector?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeEphemeralVolumeclaimtemplateSpecSelectorArgs>;
            storageClassName?: pulumi.Input<string>;
            volumeMode?: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeEphemeralVolumeclaimtemplateSpecDatasourceArgs {
            apiGroup?: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeEphemeralVolumeclaimtemplateSpecResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface RestoreSpecLocalVolumeEphemeralVolumeclaimtemplateSpecSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RestoreSpecLocalVolumeEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RestoreSpecLocalVolumeFcArgs {
            fsType?: pulumi.Input<string>;
            lun?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            targetWWNs?: pulumi.Input<pulumi.Input<string>[]>;
            wwids?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RestoreSpecLocalVolumeFlexvolumeArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeFlexvolumeSecretrefArgs>;
        }

        export interface RestoreSpecLocalVolumeFlexvolumeSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeFlockerArgs {
            datasetName?: pulumi.Input<string>;
            datasetUUID?: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeGcepersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            pdName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface RestoreSpecLocalVolumeGitrepoArgs {
            directory?: pulumi.Input<string>;
            repository: pulumi.Input<string>;
            revision?: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeGlusterfsArgs {
            endpoints: pulumi.Input<string>;
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface RestoreSpecLocalVolumeHostpathArgs {
            path: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeIscsiArgs {
            chapAuthDiscovery?: pulumi.Input<boolean>;
            chapAuthSession?: pulumi.Input<boolean>;
            fsType?: pulumi.Input<string>;
            initiatorName?: pulumi.Input<string>;
            iqn: pulumi.Input<string>;
            iscsiInterface?: pulumi.Input<string>;
            lun: pulumi.Input<number>;
            portals?: pulumi.Input<pulumi.Input<string>[]>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeIscsiSecretrefArgs>;
            targetPortal: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeIscsiSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeNfsArgs {
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            server: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumePersistentvolumeclaimArgs {
            claimName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface RestoreSpecLocalVolumePhotonpersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            pdID: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumePortworxvolumeArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeProjectedArgs {
            defaultMode?: pulumi.Input<number>;
            sources: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeProjectedSourcesArgs>[]>;
        }

        export interface RestoreSpecLocalVolumeProjectedSourcesArgs {
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeProjectedSourcesConfigmapArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeProjectedSourcesDownwardapiArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeProjectedSourcesSecretArgs>;
            serviceAccountToken?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeProjectedSourcesServiceaccounttokenArgs>;
        }

        export interface RestoreSpecLocalVolumeProjectedSourcesConfigmapArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeProjectedSourcesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RestoreSpecLocalVolumeProjectedSourcesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeProjectedSourcesDownwardapiArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeProjectedSourcesDownwardapiItemsArgs>[]>;
        }

        export interface RestoreSpecLocalVolumeProjectedSourcesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeProjectedSourcesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeProjectedSourcesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface RestoreSpecLocalVolumeProjectedSourcesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeProjectedSourcesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeProjectedSourcesSecretArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeProjectedSourcesSecretItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RestoreSpecLocalVolumeProjectedSourcesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeProjectedSourcesServiceaccounttokenArgs {
            audience?: pulumi.Input<string>;
            expirationSeconds?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeQuobyteArgs {
            group?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            registry: pulumi.Input<string>;
            tenant?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
            volume: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeRbdArgs {
            fsType?: pulumi.Input<string>;
            image: pulumi.Input<string>;
            keyring?: pulumi.Input<string>;
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            pool?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeRbdSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeRbdSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeScaleioArgs {
            fsType?: pulumi.Input<string>;
            gateway: pulumi.Input<string>;
            protectionDomain?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeScaleioSecretrefArgs>;
            sslEnabled?: pulumi.Input<boolean>;
            storageMode?: pulumi.Input<string>;
            storagePool?: pulumi.Input<string>;
            system: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeScaleioSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeSecretArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeSecretItemsArgs>[]>;
            optional?: pulumi.Input<boolean>;
            secretName?: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeStorageosArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecLocalVolumeStorageosSecretrefArgs>;
            volumeName?: pulumi.Input<string>;
            volumeNamespace?: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeStorageosSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumeVspherevolumeArgs {
            fsType?: pulumi.Input<string>;
            storagePolicyID?: pulumi.Input<string>;
            storagePolicyName?: pulumi.Input<string>;
            volumePath: pulumi.Input<string>;
        }

        export interface RestoreSpecLocalVolumemountArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface RestoreSpecPodsecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecPodsecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecPodsecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecPodsecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.RestoreSpecPodsecuritycontextWindowsoptionsArgs>;
        }

        export interface RestoreSpecPodsecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface RestoreSpecPodsecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface RestoreSpecPodsecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RestoreSpecPodsecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface RestoreSpecResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface RestoreSpecS3Args {
            acl?: pulumi.Input<string>;
            bucket?: pulumi.Input<string>;
            endpoint?: pulumi.Input<string>;
            options?: pulumi.Input<pulumi.Input<string>[]>;
            path?: pulumi.Input<string>;
            prefix?: pulumi.Input<string>;
            provider: pulumi.Input<string>;
            region?: pulumi.Input<string>;
            secretName?: pulumi.Input<string>;
            sse?: pulumi.Input<string>;
            storageClass?: pulumi.Input<string>;
        }

        export interface RestoreSpecToArgs {
            host: pulumi.Input<string>;
            port?: pulumi.Input<number>;
            secretName: pulumi.Input<string>;
            tlsClientSecretName?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface RestoreSpecTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface RestoreStatusArgs {
            commitTs?: pulumi.Input<string>;
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.RestoreStatusConditionsArgs>[]>;
            phase?: pulumi.Input<string>;
            timeCompleted?: pulumi.Input<string>;
            timeStarted?: pulumi.Input<string>;
        }

        export interface RestoreStatusConditionsArgs {
            lastTransitionTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterAutoScalerSpecArgs {
            cluster: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecClusterArgs>;
            tidb?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecTidbArgs>;
            tikv?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecTikvArgs>;
        }

        export interface TidbClusterAutoScalerSpecClusterArgs {
            clusterDomain?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface TidbClusterAutoScalerSpecTidbArgs {
            external?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecTidbExternalArgs>;
            resources?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecTidbResourcesArgs>}>;
            rules?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecTidbRulesArgs>}>;
            scaleInIntervalSeconds?: pulumi.Input<number>;
            scaleOutIntervalSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterAutoScalerSpecTidbExternalArgs {
            endpoint?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecTidbExternalEndpointArgs>;
            maxReplicas: pulumi.Input<number>;
        }

        export interface TidbClusterAutoScalerSpecTidbExternalEndpointArgs {
            host: pulumi.Input<string>;
            path: pulumi.Input<string>;
            port: pulumi.Input<number>;
            tlsSecret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecTidbExternalEndpointTlssecretArgs>;
        }

        export interface TidbClusterAutoScalerSpecTidbExternalEndpointTlssecretArgs {
            name: pulumi.Input<string>;
            namespace: pulumi.Input<string>;
        }

        export interface TidbClusterAutoScalerSpecTidbResourcesArgs {
            count?: pulumi.Input<number>;
            cpu: pulumi.Input<number | string>;
            memory: pulumi.Input<number | string>;
            storage?: pulumi.Input<number | string>;
        }

        export interface TidbClusterAutoScalerSpecTidbRulesArgs {
            max_threshold: pulumi.Input<number>;
            min_threshold?: pulumi.Input<number>;
            resource_types?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterAutoScalerSpecTikvArgs {
            external?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecTikvExternalArgs>;
            resources?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecTikvResourcesArgs>}>;
            rules?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecTikvRulesArgs>}>;
            scaleInIntervalSeconds?: pulumi.Input<number>;
            scaleOutIntervalSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterAutoScalerSpecTikvExternalArgs {
            endpoint?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecTikvExternalEndpointArgs>;
            maxReplicas: pulumi.Input<number>;
        }

        export interface TidbClusterAutoScalerSpecTikvExternalEndpointArgs {
            host: pulumi.Input<string>;
            path: pulumi.Input<string>;
            port: pulumi.Input<number>;
            tlsSecret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecTikvExternalEndpointTlssecretArgs>;
        }

        export interface TidbClusterAutoScalerSpecTikvExternalEndpointTlssecretArgs {
            name: pulumi.Input<string>;
            namespace: pulumi.Input<string>;
        }

        export interface TidbClusterAutoScalerSpecTikvResourcesArgs {
            count?: pulumi.Input<number>;
            cpu: pulumi.Input<number | string>;
            memory: pulumi.Input<number | string>;
            storage?: pulumi.Input<number | string>;
        }

        export interface TidbClusterAutoScalerSpecTikvRulesArgs {
            max_threshold: pulumi.Input<number>;
            min_threshold?: pulumi.Input<number>;
            resource_types?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterAutoScalerStatusArgs {
            tidb?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterAutoScalerStatusTidbArgs>}>;
            tikv?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterAutoScalerStatusTikvArgs>}>;
        }

        export interface TidbClusterAutoScalerStatusTidbArgs {
            lastAutoScalingTimestamp?: pulumi.Input<string>;
        }

        export interface TidbClusterAutoScalerStatusTikvArgs {
            lastAutoScalingTimestamp?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecArgs {
            acrossK8s?: pulumi.Input<boolean>;
            affinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityArgs>;
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            cluster?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecClusterArgs>;
            clusterDomain?: pulumi.Input<string>;
            configUpdateStrategy?: pulumi.Input<string>;
            discovery?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryArgs>;
            dnsConfig?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDnsconfigArgs>;
            dnsPolicy?: pulumi.Input<string>;
            enableDynamicConfiguration?: pulumi.Input<boolean>;
            enablePVReclaim?: pulumi.Input<boolean>;
            helper?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecHelperArgs>;
            hostNetwork?: pulumi.Input<boolean>;
            imagePullPolicy?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecImagepullsecretsArgs>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            paused?: pulumi.Input<boolean>;
            pd?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdArgs>;
            pdAddresses?: pulumi.Input<pulumi.Input<string>[]>;
            podManagementPolicy?: pulumi.Input<string>;
            podSecurityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPodsecuritycontextArgs>;
            priorityClassName?: pulumi.Input<string>;
            pump?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpArgs>;
            pvReclaimPolicy?: pulumi.Input<string>;
            schedulerName?: pulumi.Input<string>;
            serviceAccount?: pulumi.Input<string>;
            services?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecServicesArgs>[]>;
            statefulSetUpdateStrategy?: pulumi.Input<string>;
            suspendAction?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecSuspendactionArgs>;
            ticdc?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcArgs>;
            tidb?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbArgs>;
            tiflash?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashArgs>;
            tikv?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvArgs>;
            timezone?: pulumi.Input<string>;
            tlsCluster?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTlsclusterArgs>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTolerationsArgs>[]>;
            topologySpreadConstraints?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTopologyspreadconstraintsArgs>[]>;
            version?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecArgs
         */
        export function tidbClusterSpecArgsProvideDefaults(val: TidbClusterSpecArgs): TidbClusterSpecArgs {
            return {
                ...val,
                imagePullPolicy: (val.imagePullPolicy) ?? "IfNotPresent",
                pd: (val.pd ? pulumi.output(val.pd).apply(inputs.pingcap.v1alpha1.tidbClusterSpecPdArgsProvideDefaults) : undefined),
                pump: (val.pump ? pulumi.output(val.pump).apply(inputs.pingcap.v1alpha1.tidbClusterSpecPumpArgsProvideDefaults) : undefined),
                pvReclaimPolicy: (val.pvReclaimPolicy) ?? "Retain",
                ticdc: (val.ticdc ? pulumi.output(val.ticdc).apply(inputs.pingcap.v1alpha1.tidbClusterSpecTicdcArgsProvideDefaults) : undefined),
                tidb: (val.tidb ? pulumi.output(val.tidb).apply(inputs.pingcap.v1alpha1.tidbClusterSpecTidbArgsProvideDefaults) : undefined),
                tiflash: (val.tiflash ? pulumi.output(val.tiflash).apply(inputs.pingcap.v1alpha1.tidbClusterSpecTiflashArgsProvideDefaults) : undefined),
                tikv: (val.tikv ? pulumi.output(val.tikv).apply(inputs.pingcap.v1alpha1.tidbClusterSpecTikvArgsProvideDefaults) : undefined),
            };
        }

        export interface TidbClusterSpecAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodantiaffinityArgs>;
        }

        export interface TidbClusterSpecAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface TidbClusterSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface TidbClusterSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface TidbClusterSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface TidbClusterSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface TidbClusterSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface TidbClusterSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecClusterArgs {
            clusterDomain?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryArgs {
            additionalContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersArgs>[]>;
            additionalVolumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumemountsArgs>[]>;
            additionalVolumes?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesArgs>[]>;
            affinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityArgs>;
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            configUpdateStrategy?: pulumi.Input<string>;
            dnsConfig?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryDnsconfigArgs>;
            dnsPolicy?: pulumi.Input<string>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryEnvfromArgs>[]>;
            hostNetwork?: pulumi.Input<boolean>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryImagepullsecretsArgs>[]>;
            initContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersArgs>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            podManagementPolicy?: pulumi.Input<string>;
            podSecurityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryPodsecuritycontextArgs>;
            priorityClassName?: pulumi.Input<string>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            schedulerName?: pulumi.Input<string>;
            statefulSetUpdateStrategy?: pulumi.Input<string>;
            suspendAction?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoverySuspendactionArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryTolerationsArgs>[]>;
            topologySpreadConstraints?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryTopologyspreadconstraintsArgs>[]>;
            version?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersEnvValuefromArgs>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersLifecyclePrestopArgs>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecDiscoveryAdditionalcontainersPortsArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecDiscoveryAdditionalcontainersPortsArgs
         */
        export function tidbClusterSpecDiscoveryAdditionalcontainersPortsArgsProvideDefaults(val: TidbClusterSpecDiscoveryAdditionalcontainersPortsArgs): TidbClusterSpecDiscoveryAdditionalcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesArgs {
            awsElasticBlockStore?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesAwselasticblockstoreArgs>;
            azureDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesAzurediskArgs>;
            azureFile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesAzurefileArgs>;
            cephfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesCephfsArgs>;
            cinder?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesCinderArgs>;
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesConfigmapArgs>;
            csi?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesCsiArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesDownwardapiArgs>;
            emptyDir?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesEmptydirArgs>;
            ephemeral?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesEphemeralArgs>;
            fc?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesFcArgs>;
            flexVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesFlexvolumeArgs>;
            flocker?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesFlockerArgs>;
            gcePersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesGcepersistentdiskArgs>;
            gitRepo?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesGitrepoArgs>;
            glusterfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesGlusterfsArgs>;
            hostPath?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesHostpathArgs>;
            iscsi?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesIscsiArgs>;
            name: pulumi.Input<string>;
            nfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesNfsArgs>;
            persistentVolumeClaim?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesPersistentvolumeclaimArgs>;
            photonPersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesPhotonpersistentdiskArgs>;
            portworxVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesPortworxvolumeArgs>;
            projected?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesProjectedArgs>;
            quobyte?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesQuobyteArgs>;
            rbd?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesRbdArgs>;
            scaleIO?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesScaleioArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesSecretArgs>;
            storageos?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesStorageosArgs>;
            vsphereVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesVspherevolumeArgs>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesAwselasticblockstoreArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesAzurediskArgs {
            cachingMode?: pulumi.Input<string>;
            diskName: pulumi.Input<string>;
            diskURI: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesAzurefileArgs {
            readOnly?: pulumi.Input<boolean>;
            secretName: pulumi.Input<string>;
            shareName: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesCephfsArgs {
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            path?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretFile?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesCephfsSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesCephfsSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesCinderArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesCinderSecretrefArgs>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesCinderSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesConfigmapArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesCsiArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            nodePublishSecretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesCsiNodepublishsecretrefArgs>;
            readOnly?: pulumi.Input<boolean>;
            volumeAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesCsiNodepublishsecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesDownwardapiArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesDownwardapiItemsArgs>[]>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesEmptydirArgs {
            medium?: pulumi.Input<string>;
            sizeLimit?: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesEphemeralArgs {
            readOnly?: pulumi.Input<boolean>;
            volumeClaimTemplate?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateArgs>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateArgs {
            metadata?: pulumi.Input<{[key: string]: any}>;
            spec: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs {
            accessModes?: pulumi.Input<pulumi.Input<string>[]>;
            dataSource?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs>;
            selector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs>;
            storageClassName?: pulumi.Input<string>;
            volumeMode?: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs {
            apiGroup?: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesFcArgs {
            fsType?: pulumi.Input<string>;
            lun?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            targetWWNs?: pulumi.Input<pulumi.Input<string>[]>;
            wwids?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesFlexvolumeArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesFlexvolumeSecretrefArgs>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesFlexvolumeSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesFlockerArgs {
            datasetName?: pulumi.Input<string>;
            datasetUUID?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesGcepersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            pdName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesGitrepoArgs {
            directory?: pulumi.Input<string>;
            repository: pulumi.Input<string>;
            revision?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesGlusterfsArgs {
            endpoints: pulumi.Input<string>;
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesHostpathArgs {
            path: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesIscsiArgs {
            chapAuthDiscovery?: pulumi.Input<boolean>;
            chapAuthSession?: pulumi.Input<boolean>;
            fsType?: pulumi.Input<string>;
            initiatorName?: pulumi.Input<string>;
            iqn: pulumi.Input<string>;
            iscsiInterface?: pulumi.Input<string>;
            lun: pulumi.Input<number>;
            portals?: pulumi.Input<pulumi.Input<string>[]>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesIscsiSecretrefArgs>;
            targetPortal: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesIscsiSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesNfsArgs {
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            server: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesPersistentvolumeclaimArgs {
            claimName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesPhotonpersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            pdID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesPortworxvolumeArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesProjectedArgs {
            defaultMode?: pulumi.Input<number>;
            sources: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesProjectedSourcesArgs>[]>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesProjectedSourcesArgs {
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesProjectedSourcesConfigmapArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesProjectedSourcesDownwardapiArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesProjectedSourcesSecretArgs>;
            serviceAccountToken?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesProjectedSourcesServiceaccounttokenArgs>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesProjectedSourcesConfigmapArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesProjectedSourcesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesProjectedSourcesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesProjectedSourcesDownwardapiArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesProjectedSourcesDownwardapiItemsArgs>[]>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesProjectedSourcesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesProjectedSourcesSecretArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesProjectedSourcesSecretItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesProjectedSourcesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesProjectedSourcesServiceaccounttokenArgs {
            audience?: pulumi.Input<string>;
            expirationSeconds?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesQuobyteArgs {
            group?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            registry: pulumi.Input<string>;
            tenant?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
            volume: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesRbdArgs {
            fsType?: pulumi.Input<string>;
            image: pulumi.Input<string>;
            keyring?: pulumi.Input<string>;
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            pool?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesRbdSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesRbdSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesScaleioArgs {
            fsType?: pulumi.Input<string>;
            gateway: pulumi.Input<string>;
            protectionDomain?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesScaleioSecretrefArgs>;
            sslEnabled?: pulumi.Input<boolean>;
            storageMode?: pulumi.Input<string>;
            storagePool?: pulumi.Input<string>;
            system: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesScaleioSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesSecretArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesSecretItemsArgs>[]>;
            optional?: pulumi.Input<boolean>;
            secretName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesStorageosArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAdditionalvolumesStorageosSecretrefArgs>;
            volumeName?: pulumi.Input<string>;
            volumeNamespace?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesStorageosSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAdditionalvolumesVspherevolumeArgs {
            fsType?: pulumi.Input<string>;
            storagePolicyID?: pulumi.Input<string>;
            storagePolicyName?: pulumi.Input<string>;
            volumePath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityPodantiaffinityArgs>;
        }

        export interface TidbClusterSpecDiscoveryAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface TidbClusterSpecDiscoveryAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecDiscoveryAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface TidbClusterSpecDiscoveryAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface TidbClusterSpecDiscoveryAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface TidbClusterSpecDiscoveryAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface TidbClusterSpecDiscoveryAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecDiscoveryAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecDiscoveryAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecDiscoveryAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface TidbClusterSpecDiscoveryAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecDiscoveryAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecDiscoveryAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecDiscoveryAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryDnsconfigArgs {
            nameservers?: pulumi.Input<pulumi.Input<string>[]>;
            options?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryDnsconfigOptionsArgs>[]>;
            searches?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryDnsconfigOptionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryEnvValuefromArgs>;
        }

        export interface TidbClusterSpecDiscoveryEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecDiscoveryEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecDiscoveryEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecDiscoveryEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecDiscoveryEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecDiscoveryEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecDiscoveryImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersEnvValuefromArgs>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersLifecyclePrestopArgs>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecDiscoveryInitcontainersPortsArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecDiscoveryInitcontainersPortsArgs
         */
        export function tidbClusterSpecDiscoveryInitcontainersPortsArgsProvideDefaults(val: TidbClusterSpecDiscoveryInitcontainersPortsArgs): TidbClusterSpecDiscoveryInitcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface TidbClusterSpecDiscoveryInitcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryInitcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryInitcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryPodsecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryPodsecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryPodsecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryPodsecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDiscoveryPodsecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecDiscoveryPodsecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryPodsecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryPodsecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryPodsecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoverySuspendactionArgs {
            suspendStatefulSet?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecDiscoveryTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDiscoveryTopologyspreadconstraintsArgs {
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecDnsconfigArgs {
            nameservers?: pulumi.Input<pulumi.Input<string>[]>;
            options?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecDnsconfigOptionsArgs>[]>;
            searches?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecDnsconfigOptionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecHelperArgs {
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdArgs {
            additionalContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersArgs>[]>;
            additionalVolumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumemountsArgs>[]>;
            additionalVolumes?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesArgs>[]>;
            affinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityArgs>;
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            baseImage?: pulumi.Input<string>;
            config?: pulumi.Input<{[key: string]: any}>;
            configUpdateStrategy?: pulumi.Input<string>;
            dataSubDir?: pulumi.Input<string>;
            dnsConfig?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdDnsconfigArgs>;
            dnsPolicy?: pulumi.Input<string>;
            enableDashboardInternalProxy?: pulumi.Input<boolean>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdEnvfromArgs>[]>;
            hostNetwork?: pulumi.Input<boolean>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdImagepullsecretsArgs>[]>;
            initContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersArgs>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            maxFailoverCount?: pulumi.Input<number>;
            mountClusterClientSecret?: pulumi.Input<boolean>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            podManagementPolicy?: pulumi.Input<string>;
            podSecurityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdPodsecuritycontextArgs>;
            priorityClassName?: pulumi.Input<string>;
            replicas: pulumi.Input<number>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            schedulerName?: pulumi.Input<string>;
            service?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdServiceArgs>;
            serviceAccount?: pulumi.Input<string>;
            startUpScriptVersion?: pulumi.Input<string>;
            statefulSetUpdateStrategy?: pulumi.Input<string>;
            storageClassName?: pulumi.Input<string>;
            storageVolumes?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdStoragevolumesArgs>[]>;
            suspendAction?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdSuspendactionArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            tlsClientSecretName?: pulumi.Input<string>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdTolerationsArgs>[]>;
            topologySpreadConstraints?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdTopologyspreadconstraintsArgs>[]>;
            version?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecPdArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecPdArgs
         */
        export function tidbClusterSpecPdArgsProvideDefaults(val: TidbClusterSpecPdArgs): TidbClusterSpecPdArgs {
            return {
                ...val,
                baseImage: (val.baseImage) ?? "pingcap/pd",
            };
        }

        export interface TidbClusterSpecPdAdditionalcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersEnvValuefromArgs>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersLifecyclePrestopArgs>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecPdAdditionalcontainersPortsArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecPdAdditionalcontainersPortsArgs
         */
        export function tidbClusterSpecPdAdditionalcontainersPortsArgsProvideDefaults(val: TidbClusterSpecPdAdditionalcontainersPortsArgs): TidbClusterSpecPdAdditionalcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface TidbClusterSpecPdAdditionalcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesArgs {
            awsElasticBlockStore?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesAwselasticblockstoreArgs>;
            azureDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesAzurediskArgs>;
            azureFile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesAzurefileArgs>;
            cephfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesCephfsArgs>;
            cinder?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesCinderArgs>;
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesConfigmapArgs>;
            csi?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesCsiArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesDownwardapiArgs>;
            emptyDir?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesEmptydirArgs>;
            ephemeral?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesEphemeralArgs>;
            fc?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesFcArgs>;
            flexVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesFlexvolumeArgs>;
            flocker?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesFlockerArgs>;
            gcePersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesGcepersistentdiskArgs>;
            gitRepo?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesGitrepoArgs>;
            glusterfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesGlusterfsArgs>;
            hostPath?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesHostpathArgs>;
            iscsi?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesIscsiArgs>;
            name: pulumi.Input<string>;
            nfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesNfsArgs>;
            persistentVolumeClaim?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesPersistentvolumeclaimArgs>;
            photonPersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesPhotonpersistentdiskArgs>;
            portworxVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesPortworxvolumeArgs>;
            projected?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesProjectedArgs>;
            quobyte?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesQuobyteArgs>;
            rbd?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesRbdArgs>;
            scaleIO?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesScaleioArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesSecretArgs>;
            storageos?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesStorageosArgs>;
            vsphereVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesVspherevolumeArgs>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesAwselasticblockstoreArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesAzurediskArgs {
            cachingMode?: pulumi.Input<string>;
            diskName: pulumi.Input<string>;
            diskURI: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesAzurefileArgs {
            readOnly?: pulumi.Input<boolean>;
            secretName: pulumi.Input<string>;
            shareName: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesCephfsArgs {
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            path?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretFile?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesCephfsSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesCephfsSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesCinderArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesCinderSecretrefArgs>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesCinderSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesConfigmapArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesCsiArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            nodePublishSecretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesCsiNodepublishsecretrefArgs>;
            readOnly?: pulumi.Input<boolean>;
            volumeAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesCsiNodepublishsecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesDownwardapiArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesDownwardapiItemsArgs>[]>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesEmptydirArgs {
            medium?: pulumi.Input<string>;
            sizeLimit?: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesEphemeralArgs {
            readOnly?: pulumi.Input<boolean>;
            volumeClaimTemplate?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesEphemeralVolumeclaimtemplateArgs>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesEphemeralVolumeclaimtemplateArgs {
            metadata?: pulumi.Input<{[key: string]: any}>;
            spec: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs {
            accessModes?: pulumi.Input<pulumi.Input<string>[]>;
            dataSource?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs>;
            selector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs>;
            storageClassName?: pulumi.Input<string>;
            volumeMode?: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs {
            apiGroup?: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesFcArgs {
            fsType?: pulumi.Input<string>;
            lun?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            targetWWNs?: pulumi.Input<pulumi.Input<string>[]>;
            wwids?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesFlexvolumeArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesFlexvolumeSecretrefArgs>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesFlexvolumeSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesFlockerArgs {
            datasetName?: pulumi.Input<string>;
            datasetUUID?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesGcepersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            pdName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesGitrepoArgs {
            directory?: pulumi.Input<string>;
            repository: pulumi.Input<string>;
            revision?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesGlusterfsArgs {
            endpoints: pulumi.Input<string>;
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesHostpathArgs {
            path: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesIscsiArgs {
            chapAuthDiscovery?: pulumi.Input<boolean>;
            chapAuthSession?: pulumi.Input<boolean>;
            fsType?: pulumi.Input<string>;
            initiatorName?: pulumi.Input<string>;
            iqn: pulumi.Input<string>;
            iscsiInterface?: pulumi.Input<string>;
            lun: pulumi.Input<number>;
            portals?: pulumi.Input<pulumi.Input<string>[]>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesIscsiSecretrefArgs>;
            targetPortal: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesIscsiSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesNfsArgs {
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            server: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesPersistentvolumeclaimArgs {
            claimName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesPhotonpersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            pdID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesPortworxvolumeArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesProjectedArgs {
            defaultMode?: pulumi.Input<number>;
            sources: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesProjectedSourcesArgs>[]>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesProjectedSourcesArgs {
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesProjectedSourcesConfigmapArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesProjectedSourcesDownwardapiArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesProjectedSourcesSecretArgs>;
            serviceAccountToken?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesProjectedSourcesServiceaccounttokenArgs>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesProjectedSourcesConfigmapArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesProjectedSourcesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesProjectedSourcesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesProjectedSourcesDownwardapiArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesProjectedSourcesDownwardapiItemsArgs>[]>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesProjectedSourcesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesProjectedSourcesSecretArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesProjectedSourcesSecretItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesProjectedSourcesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesProjectedSourcesServiceaccounttokenArgs {
            audience?: pulumi.Input<string>;
            expirationSeconds?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesQuobyteArgs {
            group?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            registry: pulumi.Input<string>;
            tenant?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
            volume: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesRbdArgs {
            fsType?: pulumi.Input<string>;
            image: pulumi.Input<string>;
            keyring?: pulumi.Input<string>;
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            pool?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesRbdSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesRbdSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesScaleioArgs {
            fsType?: pulumi.Input<string>;
            gateway: pulumi.Input<string>;
            protectionDomain?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesScaleioSecretrefArgs>;
            sslEnabled?: pulumi.Input<boolean>;
            storageMode?: pulumi.Input<string>;
            storagePool?: pulumi.Input<string>;
            system: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesScaleioSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesSecretArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesSecretItemsArgs>[]>;
            optional?: pulumi.Input<boolean>;
            secretName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesStorageosArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalvolumesStorageosSecretrefArgs>;
            volumeName?: pulumi.Input<string>;
            volumeNamespace?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesStorageosSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAdditionalvolumesVspherevolumeArgs {
            fsType?: pulumi.Input<string>;
            storagePolicyID?: pulumi.Input<string>;
            storagePolicyName?: pulumi.Input<string>;
            volumePath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodantiaffinityArgs>;
        }

        export interface TidbClusterSpecPdAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface TidbClusterSpecPdAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecPdAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface TidbClusterSpecPdAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface TidbClusterSpecPdAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface TidbClusterSpecPdAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface TidbClusterSpecPdAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecPdAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecPdAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecPdAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface TidbClusterSpecPdAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecPdAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecPdAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecPdAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdDnsconfigArgs {
            nameservers?: pulumi.Input<pulumi.Input<string>[]>;
            options?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdDnsconfigOptionsArgs>[]>;
            searches?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdDnsconfigOptionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdEnvValuefromArgs>;
        }

        export interface TidbClusterSpecPdEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecPdEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPdEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPdEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecPdEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPdEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPdImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdInitcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdInitcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersEnvValuefromArgs>;
        }

        export interface TidbClusterSpecPdInitcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecPdInitcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPdInitcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdInitcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdInitcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPdInitcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecPdInitcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPdInitcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPdInitcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersLifecyclePrestopArgs>;
        }

        export interface TidbClusterSpecPdInitcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface TidbClusterSpecPdInitcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdInitcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdInitcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdInitcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPdInitcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface TidbClusterSpecPdInitcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdInitcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdInitcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdInitcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPdInitcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecPdInitcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdInitcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdInitcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdInitcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPdInitcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecPdInitcontainersPortsArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecPdInitcontainersPortsArgs
         */
        export function tidbClusterSpecPdInitcontainersPortsArgsProvideDefaults(val: TidbClusterSpecPdInitcontainersPortsArgs): TidbClusterSpecPdInitcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface TidbClusterSpecPdInitcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecPdInitcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdInitcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdInitcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdInitcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPdInitcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecPdInitcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecPdInitcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdInitcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdInitcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdInitcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdInitcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecPdInitcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPdInitcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdInitcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdInitcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdInitcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPdInitcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdInitcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdPodsecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdPodsecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdPodsecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdPodsecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPdPodsecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecPdPodsecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdPodsecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdPodsecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdPodsecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdServiceArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            clusterIP?: pulumi.Input<string>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            loadBalancerIP?: pulumi.Input<string>;
            loadBalancerSourceRanges?: pulumi.Input<pulumi.Input<string>[]>;
            port?: pulumi.Input<number>;
            portName?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdStoragevolumesArgs {
            mountPath?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            storageClassName?: pulumi.Input<string>;
            storageSize: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdSuspendactionArgs {
            suspendStatefulSet?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPdTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPdTopologyspreadconstraintsArgs {
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPodsecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPodsecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPodsecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPodsecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPodsecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecPodsecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPodsecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPodsecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPodsecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpArgs {
            additionalContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersArgs>[]>;
            additionalVolumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumemountsArgs>[]>;
            additionalVolumes?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesArgs>[]>;
            affinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityArgs>;
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            baseImage?: pulumi.Input<string>;
            config?: pulumi.Input<{[key: string]: any}>;
            configUpdateStrategy?: pulumi.Input<string>;
            dnsConfig?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpDnsconfigArgs>;
            dnsPolicy?: pulumi.Input<string>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpEnvfromArgs>[]>;
            hostNetwork?: pulumi.Input<boolean>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpImagepullsecretsArgs>[]>;
            initContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersArgs>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            podManagementPolicy?: pulumi.Input<string>;
            podSecurityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpPodsecuritycontextArgs>;
            priorityClassName?: pulumi.Input<string>;
            replicas: pulumi.Input<number>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            schedulerName?: pulumi.Input<string>;
            serviceAccount?: pulumi.Input<string>;
            setTimeZone?: pulumi.Input<boolean>;
            statefulSetUpdateStrategy?: pulumi.Input<string>;
            storageClassName?: pulumi.Input<string>;
            suspendAction?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpSuspendactionArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpTolerationsArgs>[]>;
            topologySpreadConstraints?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpTopologyspreadconstraintsArgs>[]>;
            version?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecPumpArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecPumpArgs
         */
        export function tidbClusterSpecPumpArgsProvideDefaults(val: TidbClusterSpecPumpArgs): TidbClusterSpecPumpArgs {
            return {
                ...val,
                baseImage: (val.baseImage) ?? "pingcap/tidb-binlog",
            };
        }

        export interface TidbClusterSpecPumpAdditionalcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersEnvValuefromArgs>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersLifecyclePrestopArgs>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecPumpAdditionalcontainersPortsArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecPumpAdditionalcontainersPortsArgs
         */
        export function tidbClusterSpecPumpAdditionalcontainersPortsArgsProvideDefaults(val: TidbClusterSpecPumpAdditionalcontainersPortsArgs): TidbClusterSpecPumpAdditionalcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface TidbClusterSpecPumpAdditionalcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesArgs {
            awsElasticBlockStore?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesAwselasticblockstoreArgs>;
            azureDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesAzurediskArgs>;
            azureFile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesAzurefileArgs>;
            cephfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesCephfsArgs>;
            cinder?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesCinderArgs>;
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesConfigmapArgs>;
            csi?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesCsiArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesDownwardapiArgs>;
            emptyDir?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesEmptydirArgs>;
            ephemeral?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesEphemeralArgs>;
            fc?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesFcArgs>;
            flexVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesFlexvolumeArgs>;
            flocker?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesFlockerArgs>;
            gcePersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesGcepersistentdiskArgs>;
            gitRepo?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesGitrepoArgs>;
            glusterfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesGlusterfsArgs>;
            hostPath?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesHostpathArgs>;
            iscsi?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesIscsiArgs>;
            name: pulumi.Input<string>;
            nfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesNfsArgs>;
            persistentVolumeClaim?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesPersistentvolumeclaimArgs>;
            photonPersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesPhotonpersistentdiskArgs>;
            portworxVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesPortworxvolumeArgs>;
            projected?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesProjectedArgs>;
            quobyte?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesQuobyteArgs>;
            rbd?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesRbdArgs>;
            scaleIO?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesScaleioArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesSecretArgs>;
            storageos?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesStorageosArgs>;
            vsphereVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesVspherevolumeArgs>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesAwselasticblockstoreArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesAzurediskArgs {
            cachingMode?: pulumi.Input<string>;
            diskName: pulumi.Input<string>;
            diskURI: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesAzurefileArgs {
            readOnly?: pulumi.Input<boolean>;
            secretName: pulumi.Input<string>;
            shareName: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesCephfsArgs {
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            path?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretFile?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesCephfsSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesCephfsSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesCinderArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesCinderSecretrefArgs>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesCinderSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesConfigmapArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesCsiArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            nodePublishSecretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesCsiNodepublishsecretrefArgs>;
            readOnly?: pulumi.Input<boolean>;
            volumeAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesCsiNodepublishsecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesDownwardapiArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesDownwardapiItemsArgs>[]>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesEmptydirArgs {
            medium?: pulumi.Input<string>;
            sizeLimit?: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesEphemeralArgs {
            readOnly?: pulumi.Input<boolean>;
            volumeClaimTemplate?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesEphemeralVolumeclaimtemplateArgs>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesEphemeralVolumeclaimtemplateArgs {
            metadata?: pulumi.Input<{[key: string]: any}>;
            spec: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs {
            accessModes?: pulumi.Input<pulumi.Input<string>[]>;
            dataSource?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs>;
            selector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs>;
            storageClassName?: pulumi.Input<string>;
            volumeMode?: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs {
            apiGroup?: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesFcArgs {
            fsType?: pulumi.Input<string>;
            lun?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            targetWWNs?: pulumi.Input<pulumi.Input<string>[]>;
            wwids?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesFlexvolumeArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesFlexvolumeSecretrefArgs>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesFlexvolumeSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesFlockerArgs {
            datasetName?: pulumi.Input<string>;
            datasetUUID?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesGcepersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            pdName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesGitrepoArgs {
            directory?: pulumi.Input<string>;
            repository: pulumi.Input<string>;
            revision?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesGlusterfsArgs {
            endpoints: pulumi.Input<string>;
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesHostpathArgs {
            path: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesIscsiArgs {
            chapAuthDiscovery?: pulumi.Input<boolean>;
            chapAuthSession?: pulumi.Input<boolean>;
            fsType?: pulumi.Input<string>;
            initiatorName?: pulumi.Input<string>;
            iqn: pulumi.Input<string>;
            iscsiInterface?: pulumi.Input<string>;
            lun: pulumi.Input<number>;
            portals?: pulumi.Input<pulumi.Input<string>[]>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesIscsiSecretrefArgs>;
            targetPortal: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesIscsiSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesNfsArgs {
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            server: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesPersistentvolumeclaimArgs {
            claimName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesPhotonpersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            pdID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesPortworxvolumeArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesProjectedArgs {
            defaultMode?: pulumi.Input<number>;
            sources: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesProjectedSourcesArgs>[]>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesProjectedSourcesArgs {
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesProjectedSourcesConfigmapArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesProjectedSourcesDownwardapiArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesProjectedSourcesSecretArgs>;
            serviceAccountToken?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesProjectedSourcesServiceaccounttokenArgs>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesProjectedSourcesConfigmapArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesProjectedSourcesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesProjectedSourcesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesProjectedSourcesDownwardapiArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesProjectedSourcesDownwardapiItemsArgs>[]>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesProjectedSourcesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesProjectedSourcesSecretArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesProjectedSourcesSecretItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesProjectedSourcesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesProjectedSourcesServiceaccounttokenArgs {
            audience?: pulumi.Input<string>;
            expirationSeconds?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesQuobyteArgs {
            group?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            registry: pulumi.Input<string>;
            tenant?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
            volume: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesRbdArgs {
            fsType?: pulumi.Input<string>;
            image: pulumi.Input<string>;
            keyring?: pulumi.Input<string>;
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            pool?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesRbdSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesRbdSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesScaleioArgs {
            fsType?: pulumi.Input<string>;
            gateway: pulumi.Input<string>;
            protectionDomain?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesScaleioSecretrefArgs>;
            sslEnabled?: pulumi.Input<boolean>;
            storageMode?: pulumi.Input<string>;
            storagePool?: pulumi.Input<string>;
            system: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesScaleioSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesSecretArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesSecretItemsArgs>[]>;
            optional?: pulumi.Input<boolean>;
            secretName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesStorageosArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalvolumesStorageosSecretrefArgs>;
            volumeName?: pulumi.Input<string>;
            volumeNamespace?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesStorageosSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAdditionalvolumesVspherevolumeArgs {
            fsType?: pulumi.Input<string>;
            storagePolicyID?: pulumi.Input<string>;
            storagePolicyName?: pulumi.Input<string>;
            volumePath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodantiaffinityArgs>;
        }

        export interface TidbClusterSpecPumpAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface TidbClusterSpecPumpAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecPumpAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface TidbClusterSpecPumpAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface TidbClusterSpecPumpAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface TidbClusterSpecPumpAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface TidbClusterSpecPumpAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecPumpAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecPumpAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecPumpAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface TidbClusterSpecPumpAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecPumpAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecPumpAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecPumpAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpDnsconfigArgs {
            nameservers?: pulumi.Input<pulumi.Input<string>[]>;
            options?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpDnsconfigOptionsArgs>[]>;
            searches?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpDnsconfigOptionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpEnvValuefromArgs>;
        }

        export interface TidbClusterSpecPumpEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecPumpEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPumpEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPumpEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecPumpEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPumpEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPumpImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpInitcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpInitcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersEnvValuefromArgs>;
        }

        export interface TidbClusterSpecPumpInitcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecPumpInitcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPumpInitcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpInitcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpInitcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPumpInitcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecPumpInitcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPumpInitcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPumpInitcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersLifecyclePrestopArgs>;
        }

        export interface TidbClusterSpecPumpInitcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface TidbClusterSpecPumpInitcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpInitcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpInitcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpInitcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPumpInitcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface TidbClusterSpecPumpInitcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpInitcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpInitcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpInitcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPumpInitcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecPumpInitcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpInitcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpInitcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpInitcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPumpInitcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecPumpInitcontainersPortsArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecPumpInitcontainersPortsArgs
         */
        export function tidbClusterSpecPumpInitcontainersPortsArgsProvideDefaults(val: TidbClusterSpecPumpInitcontainersPortsArgs): TidbClusterSpecPumpInitcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface TidbClusterSpecPumpInitcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecPumpInitcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpInitcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpInitcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpInitcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPumpInitcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecPumpInitcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecPumpInitcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpInitcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpInitcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpInitcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpInitcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecPumpInitcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecPumpInitcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpInitcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpInitcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpInitcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecPumpInitcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpInitcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpPodsecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpPodsecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpPodsecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpPodsecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecPumpPodsecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecPumpPodsecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpPodsecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpPodsecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpPodsecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpSuspendactionArgs {
            suspendStatefulSet?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecPumpTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecPumpTopologyspreadconstraintsArgs {
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecServicesArgs {
            name?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecSuspendactionArgs {
            suspendStatefulSet?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcArgs {
            additionalContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersArgs>[]>;
            additionalVolumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumemountsArgs>[]>;
            additionalVolumes?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesArgs>[]>;
            affinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityArgs>;
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            baseImage?: pulumi.Input<string>;
            config?: pulumi.Input<{[key: string]: any}>;
            configUpdateStrategy?: pulumi.Input<string>;
            dnsConfig?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcDnsconfigArgs>;
            dnsPolicy?: pulumi.Input<string>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcEnvfromArgs>[]>;
            gracefulShutdownTimeout?: pulumi.Input<string>;
            hostNetwork?: pulumi.Input<boolean>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcImagepullsecretsArgs>[]>;
            initContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersArgs>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            podManagementPolicy?: pulumi.Input<string>;
            podSecurityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcPodsecuritycontextArgs>;
            priorityClassName?: pulumi.Input<string>;
            replicas: pulumi.Input<number>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            schedulerName?: pulumi.Input<string>;
            serviceAccount?: pulumi.Input<string>;
            statefulSetUpdateStrategy?: pulumi.Input<string>;
            storageClassName?: pulumi.Input<string>;
            storageVolumes?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcStoragevolumesArgs>[]>;
            suspendAction?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcSuspendactionArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            tlsClientSecretNames?: pulumi.Input<pulumi.Input<string>[]>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcTolerationsArgs>[]>;
            topologySpreadConstraints?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcTopologyspreadconstraintsArgs>[]>;
            version?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecTicdcArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecTicdcArgs
         */
        export function tidbClusterSpecTicdcArgsProvideDefaults(val: TidbClusterSpecTicdcArgs): TidbClusterSpecTicdcArgs {
            return {
                ...val,
                baseImage: (val.baseImage) ?? "pingcap/ticdc",
            };
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersEnvValuefromArgs>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersLifecyclePrestopArgs>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecTicdcAdditionalcontainersPortsArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecTicdcAdditionalcontainersPortsArgs
         */
        export function tidbClusterSpecTicdcAdditionalcontainersPortsArgsProvideDefaults(val: TidbClusterSpecTicdcAdditionalcontainersPortsArgs): TidbClusterSpecTicdcAdditionalcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesArgs {
            awsElasticBlockStore?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesAwselasticblockstoreArgs>;
            azureDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesAzurediskArgs>;
            azureFile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesAzurefileArgs>;
            cephfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesCephfsArgs>;
            cinder?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesCinderArgs>;
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesConfigmapArgs>;
            csi?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesCsiArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesDownwardapiArgs>;
            emptyDir?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesEmptydirArgs>;
            ephemeral?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesEphemeralArgs>;
            fc?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesFcArgs>;
            flexVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesFlexvolumeArgs>;
            flocker?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesFlockerArgs>;
            gcePersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesGcepersistentdiskArgs>;
            gitRepo?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesGitrepoArgs>;
            glusterfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesGlusterfsArgs>;
            hostPath?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesHostpathArgs>;
            iscsi?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesIscsiArgs>;
            name: pulumi.Input<string>;
            nfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesNfsArgs>;
            persistentVolumeClaim?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesPersistentvolumeclaimArgs>;
            photonPersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesPhotonpersistentdiskArgs>;
            portworxVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesPortworxvolumeArgs>;
            projected?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesProjectedArgs>;
            quobyte?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesQuobyteArgs>;
            rbd?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesRbdArgs>;
            scaleIO?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesScaleioArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesSecretArgs>;
            storageos?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesStorageosArgs>;
            vsphereVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesVspherevolumeArgs>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesAwselasticblockstoreArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesAzurediskArgs {
            cachingMode?: pulumi.Input<string>;
            diskName: pulumi.Input<string>;
            diskURI: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesAzurefileArgs {
            readOnly?: pulumi.Input<boolean>;
            secretName: pulumi.Input<string>;
            shareName: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesCephfsArgs {
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            path?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretFile?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesCephfsSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesCephfsSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesCinderArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesCinderSecretrefArgs>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesCinderSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesConfigmapArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesCsiArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            nodePublishSecretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesCsiNodepublishsecretrefArgs>;
            readOnly?: pulumi.Input<boolean>;
            volumeAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesCsiNodepublishsecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesDownwardapiArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesDownwardapiItemsArgs>[]>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesEmptydirArgs {
            medium?: pulumi.Input<string>;
            sizeLimit?: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesEphemeralArgs {
            readOnly?: pulumi.Input<boolean>;
            volumeClaimTemplate?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesEphemeralVolumeclaimtemplateArgs>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesEphemeralVolumeclaimtemplateArgs {
            metadata?: pulumi.Input<{[key: string]: any}>;
            spec: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs {
            accessModes?: pulumi.Input<pulumi.Input<string>[]>;
            dataSource?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs>;
            selector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs>;
            storageClassName?: pulumi.Input<string>;
            volumeMode?: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs {
            apiGroup?: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesFcArgs {
            fsType?: pulumi.Input<string>;
            lun?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            targetWWNs?: pulumi.Input<pulumi.Input<string>[]>;
            wwids?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesFlexvolumeArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesFlexvolumeSecretrefArgs>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesFlexvolumeSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesFlockerArgs {
            datasetName?: pulumi.Input<string>;
            datasetUUID?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesGcepersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            pdName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesGitrepoArgs {
            directory?: pulumi.Input<string>;
            repository: pulumi.Input<string>;
            revision?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesGlusterfsArgs {
            endpoints: pulumi.Input<string>;
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesHostpathArgs {
            path: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesIscsiArgs {
            chapAuthDiscovery?: pulumi.Input<boolean>;
            chapAuthSession?: pulumi.Input<boolean>;
            fsType?: pulumi.Input<string>;
            initiatorName?: pulumi.Input<string>;
            iqn: pulumi.Input<string>;
            iscsiInterface?: pulumi.Input<string>;
            lun: pulumi.Input<number>;
            portals?: pulumi.Input<pulumi.Input<string>[]>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesIscsiSecretrefArgs>;
            targetPortal: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesIscsiSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesNfsArgs {
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            server: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesPersistentvolumeclaimArgs {
            claimName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesPhotonpersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            pdID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesPortworxvolumeArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesProjectedArgs {
            defaultMode?: pulumi.Input<number>;
            sources: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesProjectedSourcesArgs>[]>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesProjectedSourcesArgs {
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesProjectedSourcesConfigmapArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesProjectedSourcesDownwardapiArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesProjectedSourcesSecretArgs>;
            serviceAccountToken?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesProjectedSourcesServiceaccounttokenArgs>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesProjectedSourcesConfigmapArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesProjectedSourcesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesProjectedSourcesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesProjectedSourcesDownwardapiArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesProjectedSourcesDownwardapiItemsArgs>[]>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesProjectedSourcesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesProjectedSourcesSecretArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesProjectedSourcesSecretItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesProjectedSourcesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesProjectedSourcesServiceaccounttokenArgs {
            audience?: pulumi.Input<string>;
            expirationSeconds?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesQuobyteArgs {
            group?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            registry: pulumi.Input<string>;
            tenant?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
            volume: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesRbdArgs {
            fsType?: pulumi.Input<string>;
            image: pulumi.Input<string>;
            keyring?: pulumi.Input<string>;
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            pool?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesRbdSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesRbdSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesScaleioArgs {
            fsType?: pulumi.Input<string>;
            gateway: pulumi.Input<string>;
            protectionDomain?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesScaleioSecretrefArgs>;
            sslEnabled?: pulumi.Input<boolean>;
            storageMode?: pulumi.Input<string>;
            storagePool?: pulumi.Input<string>;
            system: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesScaleioSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesSecretArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesSecretItemsArgs>[]>;
            optional?: pulumi.Input<boolean>;
            secretName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesStorageosArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalvolumesStorageosSecretrefArgs>;
            volumeName?: pulumi.Input<string>;
            volumeNamespace?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesStorageosSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAdditionalvolumesVspherevolumeArgs {
            fsType?: pulumi.Input<string>;
            storagePolicyID?: pulumi.Input<string>;
            storagePolicyName?: pulumi.Input<string>;
            volumePath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodantiaffinityArgs>;
        }

        export interface TidbClusterSpecTicdcAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface TidbClusterSpecTicdcAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTicdcAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface TidbClusterSpecTicdcAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface TidbClusterSpecTicdcAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface TidbClusterSpecTicdcAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface TidbClusterSpecTicdcAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTicdcAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTicdcAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTicdcAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface TidbClusterSpecTicdcAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTicdcAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTicdcAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTicdcAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcDnsconfigArgs {
            nameservers?: pulumi.Input<pulumi.Input<string>[]>;
            options?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcDnsconfigOptionsArgs>[]>;
            searches?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcDnsconfigOptionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcEnvValuefromArgs>;
        }

        export interface TidbClusterSpecTicdcEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecTicdcEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecTicdcEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersEnvValuefromArgs>;
        }

        export interface TidbClusterSpecTicdcInitcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecTicdcInitcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcInitcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcInitcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecTicdcInitcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcInitcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcInitcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersLifecyclePrestopArgs>;
        }

        export interface TidbClusterSpecTicdcInitcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface TidbClusterSpecTicdcInitcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcInitcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface TidbClusterSpecTicdcInitcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcInitcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTicdcInitcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcInitcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecTicdcInitcontainersPortsArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecTicdcInitcontainersPortsArgs
         */
        export function tidbClusterSpecTicdcInitcontainersPortsArgsProvideDefaults(val: TidbClusterSpecTicdcInitcontainersPortsArgs): TidbClusterSpecTicdcInitcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface TidbClusterSpecTicdcInitcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTicdcInitcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcInitcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecTicdcInitcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecTicdcInitcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcInitcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTicdcInitcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTicdcInitcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcInitcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcInitcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcPodsecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcPodsecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcPodsecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcPodsecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTicdcPodsecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecTicdcPodsecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcPodsecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcPodsecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcPodsecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcStoragevolumesArgs {
            mountPath?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            storageClassName?: pulumi.Input<string>;
            storageSize: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcSuspendactionArgs {
            suspendStatefulSet?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTicdcTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTicdcTopologyspreadconstraintsArgs {
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbArgs {
            additionalContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersArgs>[]>;
            additionalVolumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumemountsArgs>[]>;
            additionalVolumes?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesArgs>[]>;
            affinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityArgs>;
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            baseImage?: pulumi.Input<string>;
            binlogEnabled?: pulumi.Input<boolean>;
            config?: pulumi.Input<{[key: string]: any}>;
            configUpdateStrategy?: pulumi.Input<string>;
            dnsConfig?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbDnsconfigArgs>;
            dnsPolicy?: pulumi.Input<string>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbEnvfromArgs>[]>;
            hostNetwork?: pulumi.Input<boolean>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbImagepullsecretsArgs>[]>;
            initContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersArgs>[]>;
            initializer?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitializerArgs>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecycleArgs>;
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            maxFailoverCount?: pulumi.Input<number>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            plugins?: pulumi.Input<pulumi.Input<string>[]>;
            podManagementPolicy?: pulumi.Input<string>;
            podSecurityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbPodsecuritycontextArgs>;
            priorityClassName?: pulumi.Input<string>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbReadinessprobeArgs>;
            replicas: pulumi.Input<number>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            schedulerName?: pulumi.Input<string>;
            separateSlowLog?: pulumi.Input<boolean>;
            service?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbServiceArgs>;
            serviceAccount?: pulumi.Input<string>;
            slowLogTailer?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbSlowlogtailerArgs>;
            slowLogVolumeName?: pulumi.Input<string>;
            statefulSetUpdateStrategy?: pulumi.Input<string>;
            storageClassName?: pulumi.Input<string>;
            storageVolumes?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbStoragevolumesArgs>[]>;
            suspendAction?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbSuspendactionArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            tlsClient?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbTlsclientArgs>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbTolerationsArgs>[]>;
            topologySpreadConstraints?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbTopologyspreadconstraintsArgs>[]>;
            version?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecTidbArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecTidbArgs
         */
        export function tidbClusterSpecTidbArgsProvideDefaults(val: TidbClusterSpecTidbArgs): TidbClusterSpecTidbArgs {
            return {
                ...val,
                baseImage: (val.baseImage) ?? "pingcap/tidb",
            };
        }

        export interface TidbClusterSpecTidbAdditionalcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersEnvValuefromArgs>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersLifecyclePrestopArgs>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecTidbAdditionalcontainersPortsArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecTidbAdditionalcontainersPortsArgs
         */
        export function tidbClusterSpecTidbAdditionalcontainersPortsArgsProvideDefaults(val: TidbClusterSpecTidbAdditionalcontainersPortsArgs): TidbClusterSpecTidbAdditionalcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface TidbClusterSpecTidbAdditionalcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesArgs {
            awsElasticBlockStore?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesAwselasticblockstoreArgs>;
            azureDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesAzurediskArgs>;
            azureFile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesAzurefileArgs>;
            cephfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesCephfsArgs>;
            cinder?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesCinderArgs>;
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesConfigmapArgs>;
            csi?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesCsiArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesDownwardapiArgs>;
            emptyDir?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesEmptydirArgs>;
            ephemeral?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesEphemeralArgs>;
            fc?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesFcArgs>;
            flexVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesFlexvolumeArgs>;
            flocker?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesFlockerArgs>;
            gcePersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesGcepersistentdiskArgs>;
            gitRepo?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesGitrepoArgs>;
            glusterfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesGlusterfsArgs>;
            hostPath?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesHostpathArgs>;
            iscsi?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesIscsiArgs>;
            name: pulumi.Input<string>;
            nfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesNfsArgs>;
            persistentVolumeClaim?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesPersistentvolumeclaimArgs>;
            photonPersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesPhotonpersistentdiskArgs>;
            portworxVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesPortworxvolumeArgs>;
            projected?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesProjectedArgs>;
            quobyte?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesQuobyteArgs>;
            rbd?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesRbdArgs>;
            scaleIO?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesScaleioArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesSecretArgs>;
            storageos?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesStorageosArgs>;
            vsphereVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesVspherevolumeArgs>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesAwselasticblockstoreArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesAzurediskArgs {
            cachingMode?: pulumi.Input<string>;
            diskName: pulumi.Input<string>;
            diskURI: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesAzurefileArgs {
            readOnly?: pulumi.Input<boolean>;
            secretName: pulumi.Input<string>;
            shareName: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesCephfsArgs {
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            path?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretFile?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesCephfsSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesCephfsSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesCinderArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesCinderSecretrefArgs>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesCinderSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesConfigmapArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesCsiArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            nodePublishSecretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesCsiNodepublishsecretrefArgs>;
            readOnly?: pulumi.Input<boolean>;
            volumeAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesCsiNodepublishsecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesDownwardapiArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesDownwardapiItemsArgs>[]>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesEmptydirArgs {
            medium?: pulumi.Input<string>;
            sizeLimit?: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesEphemeralArgs {
            readOnly?: pulumi.Input<boolean>;
            volumeClaimTemplate?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesEphemeralVolumeclaimtemplateArgs>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesEphemeralVolumeclaimtemplateArgs {
            metadata?: pulumi.Input<{[key: string]: any}>;
            spec: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs {
            accessModes?: pulumi.Input<pulumi.Input<string>[]>;
            dataSource?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs>;
            selector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs>;
            storageClassName?: pulumi.Input<string>;
            volumeMode?: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs {
            apiGroup?: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesFcArgs {
            fsType?: pulumi.Input<string>;
            lun?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            targetWWNs?: pulumi.Input<pulumi.Input<string>[]>;
            wwids?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesFlexvolumeArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesFlexvolumeSecretrefArgs>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesFlexvolumeSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesFlockerArgs {
            datasetName?: pulumi.Input<string>;
            datasetUUID?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesGcepersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            pdName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesGitrepoArgs {
            directory?: pulumi.Input<string>;
            repository: pulumi.Input<string>;
            revision?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesGlusterfsArgs {
            endpoints: pulumi.Input<string>;
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesHostpathArgs {
            path: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesIscsiArgs {
            chapAuthDiscovery?: pulumi.Input<boolean>;
            chapAuthSession?: pulumi.Input<boolean>;
            fsType?: pulumi.Input<string>;
            initiatorName?: pulumi.Input<string>;
            iqn: pulumi.Input<string>;
            iscsiInterface?: pulumi.Input<string>;
            lun: pulumi.Input<number>;
            portals?: pulumi.Input<pulumi.Input<string>[]>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesIscsiSecretrefArgs>;
            targetPortal: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesIscsiSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesNfsArgs {
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            server: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesPersistentvolumeclaimArgs {
            claimName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesPhotonpersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            pdID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesPortworxvolumeArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesProjectedArgs {
            defaultMode?: pulumi.Input<number>;
            sources: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesProjectedSourcesArgs>[]>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesProjectedSourcesArgs {
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesProjectedSourcesConfigmapArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesProjectedSourcesDownwardapiArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesProjectedSourcesSecretArgs>;
            serviceAccountToken?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesProjectedSourcesServiceaccounttokenArgs>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesProjectedSourcesConfigmapArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesProjectedSourcesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesProjectedSourcesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesProjectedSourcesDownwardapiArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesProjectedSourcesDownwardapiItemsArgs>[]>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesProjectedSourcesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesProjectedSourcesSecretArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesProjectedSourcesSecretItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesProjectedSourcesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesProjectedSourcesServiceaccounttokenArgs {
            audience?: pulumi.Input<string>;
            expirationSeconds?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesQuobyteArgs {
            group?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            registry: pulumi.Input<string>;
            tenant?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
            volume: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesRbdArgs {
            fsType?: pulumi.Input<string>;
            image: pulumi.Input<string>;
            keyring?: pulumi.Input<string>;
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            pool?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesRbdSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesRbdSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesScaleioArgs {
            fsType?: pulumi.Input<string>;
            gateway: pulumi.Input<string>;
            protectionDomain?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesScaleioSecretrefArgs>;
            sslEnabled?: pulumi.Input<boolean>;
            storageMode?: pulumi.Input<string>;
            storagePool?: pulumi.Input<string>;
            system: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesScaleioSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesSecretArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesSecretItemsArgs>[]>;
            optional?: pulumi.Input<boolean>;
            secretName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesStorageosArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalvolumesStorageosSecretrefArgs>;
            volumeName?: pulumi.Input<string>;
            volumeNamespace?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesStorageosSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAdditionalvolumesVspherevolumeArgs {
            fsType?: pulumi.Input<string>;
            storagePolicyID?: pulumi.Input<string>;
            storagePolicyName?: pulumi.Input<string>;
            volumePath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodantiaffinityArgs>;
        }

        export interface TidbClusterSpecTidbAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface TidbClusterSpecTidbAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTidbAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface TidbClusterSpecTidbAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface TidbClusterSpecTidbAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface TidbClusterSpecTidbAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface TidbClusterSpecTidbAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTidbAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTidbAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTidbAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface TidbClusterSpecTidbAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTidbAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTidbAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTidbAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbDnsconfigArgs {
            nameservers?: pulumi.Input<pulumi.Input<string>[]>;
            options?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbDnsconfigOptionsArgs>[]>;
            searches?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbDnsconfigOptionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbEnvValuefromArgs>;
        }

        export interface TidbClusterSpecTidbEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecTidbEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecTidbEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbInitcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbInitcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersEnvValuefromArgs>;
        }

        export interface TidbClusterSpecTidbInitcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecTidbInitcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbInitcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbInitcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbInitcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbInitcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecTidbInitcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbInitcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbInitcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersLifecyclePrestopArgs>;
        }

        export interface TidbClusterSpecTidbInitcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface TidbClusterSpecTidbInitcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbInitcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbInitcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbInitcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTidbInitcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface TidbClusterSpecTidbInitcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbInitcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbInitcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbInitcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTidbInitcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTidbInitcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbInitcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbInitcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbInitcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTidbInitcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecTidbInitcontainersPortsArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecTidbInitcontainersPortsArgs
         */
        export function tidbClusterSpecTidbInitcontainersPortsArgsProvideDefaults(val: TidbClusterSpecTidbInitcontainersPortsArgs): TidbClusterSpecTidbInitcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface TidbClusterSpecTidbInitcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTidbInitcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbInitcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbInitcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbInitcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTidbInitcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecTidbInitcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecTidbInitcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbInitcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbInitcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbInitcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbInitcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTidbInitcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbInitcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbInitcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbInitcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbInitcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTidbInitcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbInitcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbInitializerArgs {
            createPassword?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePrestopArgs>;
        }

        export interface TidbClusterSpecTidbLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePoststartTcpsocketArgs>;
        }

        export interface TidbClusterSpecTidbLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTidbLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePrestopTcpsocketArgs>;
        }

        export interface TidbClusterSpecTidbLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTidbLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTidbPodsecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbPodsecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbPodsecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbPodsecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbPodsecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecTidbPodsecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbPodsecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbPodsecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbPodsecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbReadinessprobeArgs {
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            type?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbServiceArgs {
            additionalPorts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTidbServiceAdditionalportsArgs>[]>;
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            clusterIP?: pulumi.Input<string>;
            exposeStatus?: pulumi.Input<boolean>;
            externalTrafficPolicy?: pulumi.Input<string>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            loadBalancerIP?: pulumi.Input<string>;
            loadBalancerSourceRanges?: pulumi.Input<pulumi.Input<string>[]>;
            mysqlNodePort?: pulumi.Input<number>;
            port?: pulumi.Input<number>;
            portName?: pulumi.Input<string>;
            statusNodePort?: pulumi.Input<number>;
            type?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbServiceAdditionalportsArgs {
            appProtocol?: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            nodePort?: pulumi.Input<number>;
            port: pulumi.Input<number>;
            protocol?: pulumi.Input<string>;
            targetPort?: pulumi.Input<number | string>;
        }
        /**
         * tidbClusterSpecTidbServiceAdditionalportsArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecTidbServiceAdditionalportsArgs
         */
        export function tidbClusterSpecTidbServiceAdditionalportsArgsProvideDefaults(val: TidbClusterSpecTidbServiceAdditionalportsArgs): TidbClusterSpecTidbServiceAdditionalportsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface TidbClusterSpecTidbSlowlogtailerArgs {
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecTidbStoragevolumesArgs {
            mountPath?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            storageClassName?: pulumi.Input<string>;
            storageSize: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbSuspendactionArgs {
            suspendStatefulSet?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbTlsclientArgs {
            disableClientAuthn?: pulumi.Input<boolean>;
            enabled?: pulumi.Input<boolean>;
            skipInternalClientCA?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTidbTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTidbTopologyspreadconstraintsArgs {
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashArgs {
            additionalContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersArgs>[]>;
            additionalVolumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumemountsArgs>[]>;
            additionalVolumes?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesArgs>[]>;
            affinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityArgs>;
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            baseImage?: pulumi.Input<string>;
            config?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashConfigArgs>;
            configUpdateStrategy?: pulumi.Input<string>;
            dnsConfig?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashDnsconfigArgs>;
            dnsPolicy?: pulumi.Input<string>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashEnvfromArgs>[]>;
            failover?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashFailoverArgs>;
            hostNetwork?: pulumi.Input<boolean>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashImagepullsecretsArgs>[]>;
            initContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersArgs>[]>;
            initializer?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitializerArgs>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            logTailer?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashLogtailerArgs>;
            maxFailoverCount?: pulumi.Input<number>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            podManagementPolicy?: pulumi.Input<string>;
            podSecurityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashPodsecuritycontextArgs>;
            priorityClassName?: pulumi.Input<string>;
            privileged?: pulumi.Input<boolean>;
            recoverFailover?: pulumi.Input<boolean>;
            replicas: pulumi.Input<number>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            schedulerName?: pulumi.Input<string>;
            serviceAccount?: pulumi.Input<string>;
            statefulSetUpdateStrategy?: pulumi.Input<string>;
            storageClaims: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashStorageclaimsArgs>[]>;
            suspendAction?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashSuspendactionArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashTolerationsArgs>[]>;
            topologySpreadConstraints?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashTopologyspreadconstraintsArgs>[]>;
            version?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecTiflashArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecTiflashArgs
         */
        export function tidbClusterSpecTiflashArgsProvideDefaults(val: TidbClusterSpecTiflashArgs): TidbClusterSpecTiflashArgs {
            return {
                ...val,
                baseImage: (val.baseImage) ?? "pingcap/tiflash",
            };
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersEnvValuefromArgs>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersLifecyclePrestopArgs>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecTiflashAdditionalcontainersPortsArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecTiflashAdditionalcontainersPortsArgs
         */
        export function tidbClusterSpecTiflashAdditionalcontainersPortsArgsProvideDefaults(val: TidbClusterSpecTiflashAdditionalcontainersPortsArgs): TidbClusterSpecTiflashAdditionalcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesArgs {
            awsElasticBlockStore?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesAwselasticblockstoreArgs>;
            azureDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesAzurediskArgs>;
            azureFile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesAzurefileArgs>;
            cephfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesCephfsArgs>;
            cinder?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesCinderArgs>;
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesConfigmapArgs>;
            csi?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesCsiArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesDownwardapiArgs>;
            emptyDir?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesEmptydirArgs>;
            ephemeral?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesEphemeralArgs>;
            fc?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesFcArgs>;
            flexVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesFlexvolumeArgs>;
            flocker?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesFlockerArgs>;
            gcePersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesGcepersistentdiskArgs>;
            gitRepo?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesGitrepoArgs>;
            glusterfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesGlusterfsArgs>;
            hostPath?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesHostpathArgs>;
            iscsi?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesIscsiArgs>;
            name: pulumi.Input<string>;
            nfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesNfsArgs>;
            persistentVolumeClaim?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesPersistentvolumeclaimArgs>;
            photonPersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesPhotonpersistentdiskArgs>;
            portworxVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesPortworxvolumeArgs>;
            projected?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesProjectedArgs>;
            quobyte?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesQuobyteArgs>;
            rbd?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesRbdArgs>;
            scaleIO?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesScaleioArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesSecretArgs>;
            storageos?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesStorageosArgs>;
            vsphereVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesVspherevolumeArgs>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesAwselasticblockstoreArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesAzurediskArgs {
            cachingMode?: pulumi.Input<string>;
            diskName: pulumi.Input<string>;
            diskURI: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesAzurefileArgs {
            readOnly?: pulumi.Input<boolean>;
            secretName: pulumi.Input<string>;
            shareName: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesCephfsArgs {
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            path?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretFile?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesCephfsSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesCephfsSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesCinderArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesCinderSecretrefArgs>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesCinderSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesConfigmapArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesCsiArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            nodePublishSecretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesCsiNodepublishsecretrefArgs>;
            readOnly?: pulumi.Input<boolean>;
            volumeAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesCsiNodepublishsecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesDownwardapiArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesDownwardapiItemsArgs>[]>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesEmptydirArgs {
            medium?: pulumi.Input<string>;
            sizeLimit?: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesEphemeralArgs {
            readOnly?: pulumi.Input<boolean>;
            volumeClaimTemplate?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesEphemeralVolumeclaimtemplateArgs>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesEphemeralVolumeclaimtemplateArgs {
            metadata?: pulumi.Input<{[key: string]: any}>;
            spec: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs {
            accessModes?: pulumi.Input<pulumi.Input<string>[]>;
            dataSource?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs>;
            selector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs>;
            storageClassName?: pulumi.Input<string>;
            volumeMode?: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs {
            apiGroup?: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesFcArgs {
            fsType?: pulumi.Input<string>;
            lun?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            targetWWNs?: pulumi.Input<pulumi.Input<string>[]>;
            wwids?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesFlexvolumeArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesFlexvolumeSecretrefArgs>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesFlexvolumeSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesFlockerArgs {
            datasetName?: pulumi.Input<string>;
            datasetUUID?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesGcepersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            pdName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesGitrepoArgs {
            directory?: pulumi.Input<string>;
            repository: pulumi.Input<string>;
            revision?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesGlusterfsArgs {
            endpoints: pulumi.Input<string>;
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesHostpathArgs {
            path: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesIscsiArgs {
            chapAuthDiscovery?: pulumi.Input<boolean>;
            chapAuthSession?: pulumi.Input<boolean>;
            fsType?: pulumi.Input<string>;
            initiatorName?: pulumi.Input<string>;
            iqn: pulumi.Input<string>;
            iscsiInterface?: pulumi.Input<string>;
            lun: pulumi.Input<number>;
            portals?: pulumi.Input<pulumi.Input<string>[]>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesIscsiSecretrefArgs>;
            targetPortal: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesIscsiSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesNfsArgs {
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            server: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesPersistentvolumeclaimArgs {
            claimName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesPhotonpersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            pdID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesPortworxvolumeArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesProjectedArgs {
            defaultMode?: pulumi.Input<number>;
            sources: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesProjectedSourcesArgs>[]>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesProjectedSourcesArgs {
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesProjectedSourcesConfigmapArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesProjectedSourcesDownwardapiArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesProjectedSourcesSecretArgs>;
            serviceAccountToken?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesProjectedSourcesServiceaccounttokenArgs>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesProjectedSourcesConfigmapArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesProjectedSourcesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesProjectedSourcesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesProjectedSourcesDownwardapiArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesProjectedSourcesDownwardapiItemsArgs>[]>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesProjectedSourcesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesProjectedSourcesSecretArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesProjectedSourcesSecretItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesProjectedSourcesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesProjectedSourcesServiceaccounttokenArgs {
            audience?: pulumi.Input<string>;
            expirationSeconds?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesQuobyteArgs {
            group?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            registry: pulumi.Input<string>;
            tenant?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
            volume: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesRbdArgs {
            fsType?: pulumi.Input<string>;
            image: pulumi.Input<string>;
            keyring?: pulumi.Input<string>;
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            pool?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesRbdSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesRbdSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesScaleioArgs {
            fsType?: pulumi.Input<string>;
            gateway: pulumi.Input<string>;
            protectionDomain?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesScaleioSecretrefArgs>;
            sslEnabled?: pulumi.Input<boolean>;
            storageMode?: pulumi.Input<string>;
            storagePool?: pulumi.Input<string>;
            system: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesScaleioSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesSecretArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesSecretItemsArgs>[]>;
            optional?: pulumi.Input<boolean>;
            secretName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesStorageosArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalvolumesStorageosSecretrefArgs>;
            volumeName?: pulumi.Input<string>;
            volumeNamespace?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesStorageosSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAdditionalvolumesVspherevolumeArgs {
            fsType?: pulumi.Input<string>;
            storagePolicyID?: pulumi.Input<string>;
            storagePolicyName?: pulumi.Input<string>;
            volumePath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodantiaffinityArgs>;
        }

        export interface TidbClusterSpecTiflashAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface TidbClusterSpecTiflashAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTiflashAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface TidbClusterSpecTiflashAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface TidbClusterSpecTiflashAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface TidbClusterSpecTiflashAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface TidbClusterSpecTiflashAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTiflashAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTiflashAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTiflashAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface TidbClusterSpecTiflashAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTiflashAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTiflashAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTiflashAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashConfigArgs {
            config?: pulumi.Input<{[key: string]: any}>;
            proxy?: pulumi.Input<{[key: string]: any}>;
        }

        export interface TidbClusterSpecTiflashDnsconfigArgs {
            nameservers?: pulumi.Input<pulumi.Input<string>[]>;
            options?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashDnsconfigOptionsArgs>[]>;
            searches?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashDnsconfigOptionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashEnvValuefromArgs>;
        }

        export interface TidbClusterSpecTiflashEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecTiflashEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTiflashEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTiflashEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecTiflashEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTiflashEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTiflashFailoverArgs {
            recoverByUID?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersEnvValuefromArgs>;
        }

        export interface TidbClusterSpecTiflashInitcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecTiflashInitcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTiflashInitcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTiflashInitcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecTiflashInitcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTiflashInitcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTiflashInitcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersLifecyclePrestopArgs>;
        }

        export interface TidbClusterSpecTiflashInitcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface TidbClusterSpecTiflashInitcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashInitcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface TidbClusterSpecTiflashInitcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashInitcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTiflashInitcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashInitcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecTiflashInitcontainersPortsArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecTiflashInitcontainersPortsArgs
         */
        export function tidbClusterSpecTiflashInitcontainersPortsArgsProvideDefaults(val: TidbClusterSpecTiflashInitcontainersPortsArgs): TidbClusterSpecTiflashInitcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface TidbClusterSpecTiflashInitcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTiflashInitcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashInitcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecTiflashInitcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecTiflashInitcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashInitcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTiflashInitcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTiflashInitcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashInitcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashInitcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashInitializerArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecTiflashLogtailerArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecTiflashPodsecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashPodsecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashPodsecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashPodsecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashPodsecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecTiflashPodsecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashPodsecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashPodsecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashPodsecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashStorageclaimsArgs {
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTiflashStorageclaimsResourcesArgs>;
            storageClassName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashStorageclaimsResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecTiflashSuspendactionArgs {
            suspendStatefulSet?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTiflashTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTiflashTopologyspreadconstraintsArgs {
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvArgs {
            additionalContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersArgs>[]>;
            additionalVolumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumemountsArgs>[]>;
            additionalVolumes?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesArgs>[]>;
            affinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityArgs>;
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            baseImage?: pulumi.Input<string>;
            config?: pulumi.Input<{[key: string]: any}>;
            configUpdateStrategy?: pulumi.Input<string>;
            dataSubDir?: pulumi.Input<string>;
            dnsConfig?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvDnsconfigArgs>;
            dnsPolicy?: pulumi.Input<string>;
            enableNamedStatusPort?: pulumi.Input<boolean>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvEnvfromArgs>[]>;
            evictLeaderTimeout?: pulumi.Input<string>;
            failover?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvFailoverArgs>;
            hostNetwork?: pulumi.Input<boolean>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvImagepullsecretsArgs>[]>;
            initContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersArgs>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            logTailer?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvLogtailerArgs>;
            maxFailoverCount?: pulumi.Input<number>;
            mountClusterClientSecret?: pulumi.Input<boolean>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            podManagementPolicy?: pulumi.Input<string>;
            podSecurityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvPodsecuritycontextArgs>;
            priorityClassName?: pulumi.Input<string>;
            privileged?: pulumi.Input<boolean>;
            raftLogVolumeName?: pulumi.Input<string>;
            recoverFailover?: pulumi.Input<boolean>;
            replicas: pulumi.Input<number>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            rocksDBLogVolumeName?: pulumi.Input<string>;
            schedulerName?: pulumi.Input<string>;
            separateRaftLog?: pulumi.Input<boolean>;
            separateRocksDBLog?: pulumi.Input<boolean>;
            serviceAccount?: pulumi.Input<string>;
            statefulSetUpdateStrategy?: pulumi.Input<string>;
            storageClassName?: pulumi.Input<string>;
            storageVolumes?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvStoragevolumesArgs>[]>;
            storeLabels?: pulumi.Input<pulumi.Input<string>[]>;
            suspendAction?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvSuspendactionArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvTolerationsArgs>[]>;
            topologySpreadConstraints?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvTopologyspreadconstraintsArgs>[]>;
            version?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecTikvArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecTikvArgs
         */
        export function tidbClusterSpecTikvArgsProvideDefaults(val: TidbClusterSpecTikvArgs): TidbClusterSpecTikvArgs {
            return {
                ...val,
                baseImage: (val.baseImage) ?? "pingcap/tikv",
            };
        }

        export interface TidbClusterSpecTikvAdditionalcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersEnvValuefromArgs>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersLifecyclePrestopArgs>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecTikvAdditionalcontainersPortsArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecTikvAdditionalcontainersPortsArgs
         */
        export function tidbClusterSpecTikvAdditionalcontainersPortsArgsProvideDefaults(val: TidbClusterSpecTikvAdditionalcontainersPortsArgs): TidbClusterSpecTikvAdditionalcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface TidbClusterSpecTikvAdditionalcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesArgs {
            awsElasticBlockStore?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesAwselasticblockstoreArgs>;
            azureDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesAzurediskArgs>;
            azureFile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesAzurefileArgs>;
            cephfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesCephfsArgs>;
            cinder?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesCinderArgs>;
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesConfigmapArgs>;
            csi?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesCsiArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesDownwardapiArgs>;
            emptyDir?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesEmptydirArgs>;
            ephemeral?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesEphemeralArgs>;
            fc?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesFcArgs>;
            flexVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesFlexvolumeArgs>;
            flocker?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesFlockerArgs>;
            gcePersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesGcepersistentdiskArgs>;
            gitRepo?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesGitrepoArgs>;
            glusterfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesGlusterfsArgs>;
            hostPath?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesHostpathArgs>;
            iscsi?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesIscsiArgs>;
            name: pulumi.Input<string>;
            nfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesNfsArgs>;
            persistentVolumeClaim?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesPersistentvolumeclaimArgs>;
            photonPersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesPhotonpersistentdiskArgs>;
            portworxVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesPortworxvolumeArgs>;
            projected?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesProjectedArgs>;
            quobyte?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesQuobyteArgs>;
            rbd?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesRbdArgs>;
            scaleIO?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesScaleioArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesSecretArgs>;
            storageos?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesStorageosArgs>;
            vsphereVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesVspherevolumeArgs>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesAwselasticblockstoreArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesAzurediskArgs {
            cachingMode?: pulumi.Input<string>;
            diskName: pulumi.Input<string>;
            diskURI: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesAzurefileArgs {
            readOnly?: pulumi.Input<boolean>;
            secretName: pulumi.Input<string>;
            shareName: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesCephfsArgs {
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            path?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretFile?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesCephfsSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesCephfsSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesCinderArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesCinderSecretrefArgs>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesCinderSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesConfigmapArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesCsiArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            nodePublishSecretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesCsiNodepublishsecretrefArgs>;
            readOnly?: pulumi.Input<boolean>;
            volumeAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesCsiNodepublishsecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesDownwardapiArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesDownwardapiItemsArgs>[]>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesEmptydirArgs {
            medium?: pulumi.Input<string>;
            sizeLimit?: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesEphemeralArgs {
            readOnly?: pulumi.Input<boolean>;
            volumeClaimTemplate?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesEphemeralVolumeclaimtemplateArgs>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesEphemeralVolumeclaimtemplateArgs {
            metadata?: pulumi.Input<{[key: string]: any}>;
            spec: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs {
            accessModes?: pulumi.Input<pulumi.Input<string>[]>;
            dataSource?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs>;
            selector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs>;
            storageClassName?: pulumi.Input<string>;
            volumeMode?: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs {
            apiGroup?: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesFcArgs {
            fsType?: pulumi.Input<string>;
            lun?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            targetWWNs?: pulumi.Input<pulumi.Input<string>[]>;
            wwids?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesFlexvolumeArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesFlexvolumeSecretrefArgs>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesFlexvolumeSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesFlockerArgs {
            datasetName?: pulumi.Input<string>;
            datasetUUID?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesGcepersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            pdName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesGitrepoArgs {
            directory?: pulumi.Input<string>;
            repository: pulumi.Input<string>;
            revision?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesGlusterfsArgs {
            endpoints: pulumi.Input<string>;
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesHostpathArgs {
            path: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesIscsiArgs {
            chapAuthDiscovery?: pulumi.Input<boolean>;
            chapAuthSession?: pulumi.Input<boolean>;
            fsType?: pulumi.Input<string>;
            initiatorName?: pulumi.Input<string>;
            iqn: pulumi.Input<string>;
            iscsiInterface?: pulumi.Input<string>;
            lun: pulumi.Input<number>;
            portals?: pulumi.Input<pulumi.Input<string>[]>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesIscsiSecretrefArgs>;
            targetPortal: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesIscsiSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesNfsArgs {
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            server: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesPersistentvolumeclaimArgs {
            claimName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesPhotonpersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            pdID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesPortworxvolumeArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesProjectedArgs {
            defaultMode?: pulumi.Input<number>;
            sources: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesProjectedSourcesArgs>[]>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesProjectedSourcesArgs {
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesProjectedSourcesConfigmapArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesProjectedSourcesDownwardapiArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesProjectedSourcesSecretArgs>;
            serviceAccountToken?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesProjectedSourcesServiceaccounttokenArgs>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesProjectedSourcesConfigmapArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesProjectedSourcesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesProjectedSourcesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesProjectedSourcesDownwardapiArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesProjectedSourcesDownwardapiItemsArgs>[]>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesProjectedSourcesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesProjectedSourcesSecretArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesProjectedSourcesSecretItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesProjectedSourcesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesProjectedSourcesServiceaccounttokenArgs {
            audience?: pulumi.Input<string>;
            expirationSeconds?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesQuobyteArgs {
            group?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            registry: pulumi.Input<string>;
            tenant?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
            volume: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesRbdArgs {
            fsType?: pulumi.Input<string>;
            image: pulumi.Input<string>;
            keyring?: pulumi.Input<string>;
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            pool?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesRbdSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesRbdSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesScaleioArgs {
            fsType?: pulumi.Input<string>;
            gateway: pulumi.Input<string>;
            protectionDomain?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesScaleioSecretrefArgs>;
            sslEnabled?: pulumi.Input<boolean>;
            storageMode?: pulumi.Input<string>;
            storagePool?: pulumi.Input<string>;
            system: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesScaleioSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesSecretArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesSecretItemsArgs>[]>;
            optional?: pulumi.Input<boolean>;
            secretName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesStorageosArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalvolumesStorageosSecretrefArgs>;
            volumeName?: pulumi.Input<string>;
            volumeNamespace?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesStorageosSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAdditionalvolumesVspherevolumeArgs {
            fsType?: pulumi.Input<string>;
            storagePolicyID?: pulumi.Input<string>;
            storagePolicyName?: pulumi.Input<string>;
            volumePath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodantiaffinityArgs>;
        }

        export interface TidbClusterSpecTikvAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface TidbClusterSpecTikvAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTikvAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface TidbClusterSpecTikvAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface TidbClusterSpecTikvAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface TidbClusterSpecTikvAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface TidbClusterSpecTikvAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTikvAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTikvAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTikvAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface TidbClusterSpecTikvAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTikvAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTikvAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbClusterSpecTikvAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvDnsconfigArgs {
            nameservers?: pulumi.Input<pulumi.Input<string>[]>;
            options?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvDnsconfigOptionsArgs>[]>;
            searches?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvDnsconfigOptionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvEnvValuefromArgs>;
        }

        export interface TidbClusterSpecTikvEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecTikvEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTikvEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTikvEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecTikvEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTikvEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTikvFailoverArgs {
            recoverByUID?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvInitcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvInitcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersEnvValuefromArgs>;
        }

        export interface TidbClusterSpecTikvInitcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbClusterSpecTikvInitcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTikvInitcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvInitcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvInitcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTikvInitcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersEnvfromSecretrefArgs>;
        }

        export interface TidbClusterSpecTikvInitcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTikvInitcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTikvInitcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersLifecyclePrestopArgs>;
        }

        export interface TidbClusterSpecTikvInitcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface TidbClusterSpecTikvInitcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvInitcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvInitcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvInitcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTikvInitcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface TidbClusterSpecTikvInitcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvInitcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvInitcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvInitcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTikvInitcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTikvInitcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvInitcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvInitcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvInitcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTikvInitcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * tidbClusterSpecTikvInitcontainersPortsArgsProvideDefaults sets the appropriate defaults for TidbClusterSpecTikvInitcontainersPortsArgs
         */
        export function tidbClusterSpecTikvInitcontainersPortsArgsProvideDefaults(val: TidbClusterSpecTikvInitcontainersPortsArgs): TidbClusterSpecTikvInitcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface TidbClusterSpecTikvInitcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTikvInitcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvInitcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvInitcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvInitcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTikvInitcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecTikvInitcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecTikvInitcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvInitcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvInitcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvInitcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvInitcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbClusterSpecTikvInitcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbClusterSpecTikvInitcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvInitcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvInitcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvInitcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbClusterSpecTikvInitcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvInitcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvLogtailerArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbClusterSpecTikvPodsecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvPodsecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvPodsecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvPodsecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterSpecTikvPodsecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbClusterSpecTikvPodsecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvPodsecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvPodsecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvPodsecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvStoragevolumesArgs {
            mountPath?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            storageClassName?: pulumi.Input<string>;
            storageSize: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvSuspendactionArgs {
            suspendStatefulSet?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTikvTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTikvTopologyspreadconstraintsArgs {
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTlsclusterArgs {
            enabled?: pulumi.Input<boolean>;
        }

        export interface TidbClusterSpecTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface TidbClusterSpecTopologyspreadconstraintsArgs {
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbClusterStatusArgs {
            "auto-scaler"?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusAutoScalerArgs>;
            clusterID?: pulumi.Input<string>;
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusConditionsArgs>[]>;
            pd?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusPdArgs>;
            pump?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusPumpArgs>;
            ticdc?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTicdcArgs>;
            tidb?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTidbArgs>;
            tiflash?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTiflashArgs>;
            tikv?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTikvArgs>;
        }

        export interface TidbClusterStatusAutoScalerArgs {
            name: pulumi.Input<string>;
            namespace: pulumi.Input<string>;
        }

        export interface TidbClusterStatusConditionsArgs {
            lastTransitionTime?: pulumi.Input<string>;
            lastUpdateTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterStatusPdArgs {
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusPdConditionsArgs>[]>;
            failureMembers?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusPdFailuremembersArgs>}>;
            image?: pulumi.Input<string>;
            leader?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusPdLeaderArgs>;
            members?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusPdMembersArgs>}>;
            peerMembers?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusPdPeermembersArgs>}>;
            phase?: pulumi.Input<string>;
            statefulSet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusPdStatefulsetArgs>;
            synced?: pulumi.Input<boolean>;
            unjoinedMembers?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusPdUnjoinedmembersArgs>}>;
            volumes?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusPdVolumesArgs>}>;
        }

        export interface TidbClusterStatusPdConditionsArgs {
            lastTransitionTime: pulumi.Input<string>;
            message: pulumi.Input<string>;
            observedGeneration?: pulumi.Input<number>;
            reason: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterStatusPdFailuremembersArgs {
            createdAt?: pulumi.Input<string>;
            memberDeleted?: pulumi.Input<boolean>;
            memberID?: pulumi.Input<string>;
            podName?: pulumi.Input<string>;
            pvcUID?: pulumi.Input<string>;
            pvcUIDSet?: pulumi.Input<{[key: string]: pulumi.Input<{[key: string]: any}>}>;
        }

        export interface TidbClusterStatusPdLeaderArgs {
            clientURL: pulumi.Input<string>;
            health: pulumi.Input<boolean>;
            id: pulumi.Input<string>;
            lastTransitionTime?: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterStatusPdMembersArgs {
            clientURL: pulumi.Input<string>;
            health: pulumi.Input<boolean>;
            id: pulumi.Input<string>;
            lastTransitionTime?: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterStatusPdPeermembersArgs {
            clientURL: pulumi.Input<string>;
            health: pulumi.Input<boolean>;
            id: pulumi.Input<string>;
            lastTransitionTime?: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbClusterStatusPdStatefulsetArgs {
            collisionCount?: pulumi.Input<number>;
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusPdStatefulsetConditionsArgs>[]>;
            currentReplicas?: pulumi.Input<number>;
            currentRevision?: pulumi.Input<string>;
            observedGeneration?: pulumi.Input<number>;
            readyReplicas?: pulumi.Input<number>;
            replicas: pulumi.Input<number>;
            updateRevision?: pulumi.Input<string>;
            updatedReplicas?: pulumi.Input<number>;
        }

        export interface TidbClusterStatusPdStatefulsetConditionsArgs {
            lastTransitionTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterStatusPdUnjoinedmembersArgs {
            createdAt?: pulumi.Input<string>;
            podName?: pulumi.Input<string>;
            pvcUID?: pulumi.Input<string>;
            pvcUIDSet?: pulumi.Input<{[key: string]: pulumi.Input<{[key: string]: any}>}>;
        }

        export interface TidbClusterStatusPdVolumesArgs {
            boundCount?: pulumi.Input<number>;
            currentCapacity: pulumi.Input<number | string>;
            currentCount?: pulumi.Input<number>;
            name: pulumi.Input<string>;
            resizedCapacity: pulumi.Input<number | string>;
            resizedCount?: pulumi.Input<number>;
        }

        export interface TidbClusterStatusPumpArgs {
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusPumpConditionsArgs>[]>;
            members?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusPumpMembersArgs>[]>;
            phase?: pulumi.Input<string>;
            statefulSet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusPumpStatefulsetArgs>;
            volumes?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusPumpVolumesArgs>}>;
        }

        export interface TidbClusterStatusPumpConditionsArgs {
            lastTransitionTime: pulumi.Input<string>;
            message: pulumi.Input<string>;
            observedGeneration?: pulumi.Input<number>;
            reason: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterStatusPumpMembersArgs {
            host: pulumi.Input<string>;
            nodeId: pulumi.Input<string>;
            state: pulumi.Input<string>;
        }

        export interface TidbClusterStatusPumpStatefulsetArgs {
            collisionCount?: pulumi.Input<number>;
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusPumpStatefulsetConditionsArgs>[]>;
            currentReplicas?: pulumi.Input<number>;
            currentRevision?: pulumi.Input<string>;
            observedGeneration?: pulumi.Input<number>;
            readyReplicas?: pulumi.Input<number>;
            replicas: pulumi.Input<number>;
            updateRevision?: pulumi.Input<string>;
            updatedReplicas?: pulumi.Input<number>;
        }

        export interface TidbClusterStatusPumpStatefulsetConditionsArgs {
            lastTransitionTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterStatusPumpVolumesArgs {
            boundCount?: pulumi.Input<number>;
            currentCapacity: pulumi.Input<number | string>;
            currentCount?: pulumi.Input<number>;
            name: pulumi.Input<string>;
            resizedCapacity: pulumi.Input<number | string>;
            resizedCount?: pulumi.Input<number>;
        }

        export interface TidbClusterStatusTicdcArgs {
            captures?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTicdcCapturesArgs>}>;
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTicdcConditionsArgs>[]>;
            phase?: pulumi.Input<string>;
            statefulSet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTicdcStatefulsetArgs>;
            synced?: pulumi.Input<boolean>;
            volumes?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTicdcVolumesArgs>}>;
        }

        export interface TidbClusterStatusTicdcCapturesArgs {
            id?: pulumi.Input<string>;
            isOwner?: pulumi.Input<boolean>;
            podName?: pulumi.Input<string>;
            ready?: pulumi.Input<boolean>;
            version?: pulumi.Input<string>;
        }

        export interface TidbClusterStatusTicdcConditionsArgs {
            lastTransitionTime: pulumi.Input<string>;
            message: pulumi.Input<string>;
            observedGeneration?: pulumi.Input<number>;
            reason: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterStatusTicdcStatefulsetArgs {
            collisionCount?: pulumi.Input<number>;
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTicdcStatefulsetConditionsArgs>[]>;
            currentReplicas?: pulumi.Input<number>;
            currentRevision?: pulumi.Input<string>;
            observedGeneration?: pulumi.Input<number>;
            readyReplicas?: pulumi.Input<number>;
            replicas: pulumi.Input<number>;
            updateRevision?: pulumi.Input<string>;
            updatedReplicas?: pulumi.Input<number>;
        }

        export interface TidbClusterStatusTicdcStatefulsetConditionsArgs {
            lastTransitionTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterStatusTicdcVolumesArgs {
            boundCount?: pulumi.Input<number>;
            currentCapacity: pulumi.Input<number | string>;
            currentCount?: pulumi.Input<number>;
            name: pulumi.Input<string>;
            resizedCapacity: pulumi.Input<number | string>;
            resizedCount?: pulumi.Input<number>;
        }

        export interface TidbClusterStatusTidbArgs {
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTidbConditionsArgs>[]>;
            failureMembers?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTidbFailuremembersArgs>}>;
            image?: pulumi.Input<string>;
            members?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTidbMembersArgs>}>;
            passwordInitialized?: pulumi.Input<boolean>;
            phase?: pulumi.Input<string>;
            resignDDLOwnerRetryCount?: pulumi.Input<number>;
            statefulSet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTidbStatefulsetArgs>;
            volumes?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTidbVolumesArgs>}>;
        }

        export interface TidbClusterStatusTidbConditionsArgs {
            lastTransitionTime: pulumi.Input<string>;
            message: pulumi.Input<string>;
            observedGeneration?: pulumi.Input<number>;
            reason: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterStatusTidbFailuremembersArgs {
            createdAt?: pulumi.Input<string>;
            podName?: pulumi.Input<string>;
        }

        export interface TidbClusterStatusTidbMembersArgs {
            health: pulumi.Input<boolean>;
            lastTransitionTime?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            node?: pulumi.Input<string>;
        }

        export interface TidbClusterStatusTidbStatefulsetArgs {
            collisionCount?: pulumi.Input<number>;
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTidbStatefulsetConditionsArgs>[]>;
            currentReplicas?: pulumi.Input<number>;
            currentRevision?: pulumi.Input<string>;
            observedGeneration?: pulumi.Input<number>;
            readyReplicas?: pulumi.Input<number>;
            replicas: pulumi.Input<number>;
            updateRevision?: pulumi.Input<string>;
            updatedReplicas?: pulumi.Input<number>;
        }

        export interface TidbClusterStatusTidbStatefulsetConditionsArgs {
            lastTransitionTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterStatusTidbVolumesArgs {
            boundCount?: pulumi.Input<number>;
            currentCapacity: pulumi.Input<number | string>;
            currentCount?: pulumi.Input<number>;
            name: pulumi.Input<string>;
            resizedCapacity: pulumi.Input<number | string>;
            resizedCount?: pulumi.Input<number>;
        }

        export interface TidbClusterStatusTiflashArgs {
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTiflashConditionsArgs>[]>;
            failoverUID?: pulumi.Input<string>;
            failureStores?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTiflashFailurestoresArgs>}>;
            image?: pulumi.Input<string>;
            peerStores?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTiflashPeerstoresArgs>}>;
            phase?: pulumi.Input<string>;
            statefulSet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTiflashStatefulsetArgs>;
            stores?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTiflashStoresArgs>}>;
            synced?: pulumi.Input<boolean>;
            tombstoneStores?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTiflashTombstonestoresArgs>}>;
            volumes?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTiflashVolumesArgs>}>;
        }

        export interface TidbClusterStatusTiflashConditionsArgs {
            lastTransitionTime: pulumi.Input<string>;
            message: pulumi.Input<string>;
            observedGeneration?: pulumi.Input<number>;
            reason: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterStatusTiflashFailurestoresArgs {
            createdAt?: pulumi.Input<string>;
            podName?: pulumi.Input<string>;
            storeID?: pulumi.Input<string>;
        }

        export interface TidbClusterStatusTiflashPeerstoresArgs {
            id: pulumi.Input<string>;
            ip: pulumi.Input<string>;
            lastTransitionTime?: pulumi.Input<string>;
            leaderCount: pulumi.Input<number>;
            podName: pulumi.Input<string>;
            state: pulumi.Input<string>;
        }

        export interface TidbClusterStatusTiflashStatefulsetArgs {
            collisionCount?: pulumi.Input<number>;
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTiflashStatefulsetConditionsArgs>[]>;
            currentReplicas?: pulumi.Input<number>;
            currentRevision?: pulumi.Input<string>;
            observedGeneration?: pulumi.Input<number>;
            readyReplicas?: pulumi.Input<number>;
            replicas: pulumi.Input<number>;
            updateRevision?: pulumi.Input<string>;
            updatedReplicas?: pulumi.Input<number>;
        }

        export interface TidbClusterStatusTiflashStatefulsetConditionsArgs {
            lastTransitionTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterStatusTiflashStoresArgs {
            id: pulumi.Input<string>;
            ip: pulumi.Input<string>;
            lastTransitionTime?: pulumi.Input<string>;
            leaderCount: pulumi.Input<number>;
            podName: pulumi.Input<string>;
            state: pulumi.Input<string>;
        }

        export interface TidbClusterStatusTiflashTombstonestoresArgs {
            id: pulumi.Input<string>;
            ip: pulumi.Input<string>;
            lastTransitionTime?: pulumi.Input<string>;
            leaderCount: pulumi.Input<number>;
            podName: pulumi.Input<string>;
            state: pulumi.Input<string>;
        }

        export interface TidbClusterStatusTiflashVolumesArgs {
            boundCount?: pulumi.Input<number>;
            currentCapacity: pulumi.Input<number | string>;
            currentCount?: pulumi.Input<number>;
            name: pulumi.Input<string>;
            resizedCapacity: pulumi.Input<number | string>;
            resizedCount?: pulumi.Input<number>;
        }

        export interface TidbClusterStatusTikvArgs {
            bootStrapped?: pulumi.Input<boolean>;
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTikvConditionsArgs>[]>;
            evictLeader?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTikvEvictleaderArgs>}>;
            failoverUID?: pulumi.Input<string>;
            failureStores?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTikvFailurestoresArgs>}>;
            image?: pulumi.Input<string>;
            peerStores?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTikvPeerstoresArgs>}>;
            phase?: pulumi.Input<string>;
            statefulSet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTikvStatefulsetArgs>;
            stores?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTikvStoresArgs>}>;
            synced?: pulumi.Input<boolean>;
            tombstoneStores?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTikvTombstonestoresArgs>}>;
            volumes?: pulumi.Input<{[key: string]: pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTikvVolumesArgs>}>;
        }

        export interface TidbClusterStatusTikvConditionsArgs {
            lastTransitionTime: pulumi.Input<string>;
            message: pulumi.Input<string>;
            observedGeneration?: pulumi.Input<number>;
            reason: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterStatusTikvEvictleaderArgs {
            beginTime?: pulumi.Input<string>;
            podCreateTime?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface TidbClusterStatusTikvFailurestoresArgs {
            createdAt?: pulumi.Input<string>;
            podName?: pulumi.Input<string>;
            storeID?: pulumi.Input<string>;
        }

        export interface TidbClusterStatusTikvPeerstoresArgs {
            id: pulumi.Input<string>;
            ip: pulumi.Input<string>;
            lastTransitionTime?: pulumi.Input<string>;
            leaderCount: pulumi.Input<number>;
            podName: pulumi.Input<string>;
            state: pulumi.Input<string>;
        }

        export interface TidbClusterStatusTikvStatefulsetArgs {
            collisionCount?: pulumi.Input<number>;
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbClusterStatusTikvStatefulsetConditionsArgs>[]>;
            currentReplicas?: pulumi.Input<number>;
            currentRevision?: pulumi.Input<string>;
            observedGeneration?: pulumi.Input<number>;
            readyReplicas?: pulumi.Input<number>;
            replicas: pulumi.Input<number>;
            updateRevision?: pulumi.Input<string>;
            updatedReplicas?: pulumi.Input<number>;
        }

        export interface TidbClusterStatusTikvStatefulsetConditionsArgs {
            lastTransitionTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbClusterStatusTikvStoresArgs {
            id: pulumi.Input<string>;
            ip: pulumi.Input<string>;
            lastTransitionTime?: pulumi.Input<string>;
            leaderCount: pulumi.Input<number>;
            podName: pulumi.Input<string>;
            state: pulumi.Input<string>;
        }

        export interface TidbClusterStatusTikvTombstonestoresArgs {
            id: pulumi.Input<string>;
            ip: pulumi.Input<string>;
            lastTransitionTime?: pulumi.Input<string>;
            leaderCount: pulumi.Input<number>;
            podName: pulumi.Input<string>;
            state: pulumi.Input<string>;
        }

        export interface TidbClusterStatusTikvVolumesArgs {
            boundCount?: pulumi.Input<number>;
            currentCapacity: pulumi.Input<number | string>;
            currentCount?: pulumi.Input<number>;
            name: pulumi.Input<string>;
            resizedCapacity: pulumi.Input<number | string>;
            resizedCount?: pulumi.Input<number>;
        }

        export interface TidbInitializerSpecArgs {
            cluster: pulumi.Input<inputs.pingcap.v1alpha1.TidbInitializerSpecClusterArgs>;
            image: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbInitializerSpecImagepullsecretsArgs>[]>;
            initSql?: pulumi.Input<string>;
            initSqlConfigMap?: pulumi.Input<string>;
            passwordSecret?: pulumi.Input<string>;
            permitHost?: pulumi.Input<string>;
            podSecurityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbInitializerSpecPodsecuritycontextArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbInitializerSpecResourcesArgs>;
            timezone?: pulumi.Input<string>;
            tlsClientSecretName?: pulumi.Input<string>;
        }

        export interface TidbInitializerSpecClusterArgs {
            clusterDomain?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface TidbInitializerSpecImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbInitializerSpecPodsecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbInitializerSpecPodsecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbInitializerSpecPodsecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbInitializerSpecPodsecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbInitializerSpecPodsecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbInitializerSpecPodsecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbInitializerSpecPodsecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbInitializerSpecPodsecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbInitializerSpecPodsecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbInitializerSpecResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbInitializerStatusArgs {
            active?: pulumi.Input<number>;
            completionTime?: pulumi.Input<string>;
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbInitializerStatusConditionsArgs>[]>;
            failed?: pulumi.Input<number>;
            phase?: pulumi.Input<string>;
            startTime?: pulumi.Input<string>;
            succeeded?: pulumi.Input<number>;
        }

        export interface TidbInitializerStatusConditionsArgs {
            lastProbeTime?: pulumi.Input<string>;
            lastTransitionTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecArgs {
            additionalContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersArgs>[]>;
            additionalVolumes?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesArgs>[]>;
            alertManagerRulesVersion?: pulumi.Input<string>;
            alertmanagerURL?: pulumi.Input<string>;
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            clusterScoped?: pulumi.Input<boolean>;
            clusters?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecClustersArgs>[]>;
            dm?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecDmArgs>;
            enableAlertRules?: pulumi.Input<boolean>;
            externalLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            grafana?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecGrafanaArgs>;
            imagePullPolicy?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecImagepullsecretsArgs>[]>;
            initializer: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecInitializerArgs>;
            kubePrometheusURL?: pulumi.Input<string>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            persistent?: pulumi.Input<boolean>;
            podSecurityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPodsecuritycontextArgs>;
            prometheus: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusArgs>;
            prometheusReloader?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusreloaderArgs>;
            pvReclaimPolicy?: pulumi.Input<string>;
            reloader: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecReloaderArgs>;
            replicaExternalLabelName?: pulumi.Input<string>;
            replicas?: pulumi.Input<number>;
            shards?: pulumi.Input<number>;
            storage?: pulumi.Input<string>;
            storageClassName?: pulumi.Input<string>;
            thanos?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecThanosArgs>;
            timezone?: pulumi.Input<string>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecTolerationsArgs>[]>;
        }
        /**
         * tidbMonitorSpecArgsProvideDefaults sets the appropriate defaults for TidbMonitorSpecArgs
         */
        export function tidbMonitorSpecArgsProvideDefaults(val: TidbMonitorSpecArgs): TidbMonitorSpecArgs {
            return {
                ...val,
                pvReclaimPolicy: (val.pvReclaimPolicy) ?? "Retain",
            };
        }

        export interface TidbMonitorSpecAdditionalcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersEnvValuefromArgs>;
        }

        export interface TidbMonitorSpecAdditionalcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbMonitorSpecAdditionalcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecAdditionalcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecAdditionalcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersEnvfromSecretrefArgs>;
        }

        export interface TidbMonitorSpecAdditionalcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecAdditionalcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecAdditionalcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersLifecyclePrestopArgs>;
        }

        export interface TidbMonitorSpecAdditionalcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface TidbMonitorSpecAdditionalcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbMonitorSpecAdditionalcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface TidbMonitorSpecAdditionalcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbMonitorSpecAdditionalcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbMonitorSpecAdditionalcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbMonitorSpecAdditionalcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * tidbMonitorSpecAdditionalcontainersPortsArgsProvideDefaults sets the appropriate defaults for TidbMonitorSpecAdditionalcontainersPortsArgs
         */
        export function tidbMonitorSpecAdditionalcontainersPortsArgsProvideDefaults(val: TidbMonitorSpecAdditionalcontainersPortsArgs): TidbMonitorSpecAdditionalcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface TidbMonitorSpecAdditionalcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbMonitorSpecAdditionalcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbMonitorSpecAdditionalcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbMonitorSpecAdditionalcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbMonitorSpecAdditionalcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbMonitorSpecAdditionalcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbMonitorSpecAdditionalcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbMonitorSpecAdditionalcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesArgs {
            awsElasticBlockStore?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesAwselasticblockstoreArgs>;
            azureDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesAzurediskArgs>;
            azureFile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesAzurefileArgs>;
            cephfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesCephfsArgs>;
            cinder?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesCinderArgs>;
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesConfigmapArgs>;
            csi?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesCsiArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesDownwardapiArgs>;
            emptyDir?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesEmptydirArgs>;
            ephemeral?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesEphemeralArgs>;
            fc?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesFcArgs>;
            flexVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesFlexvolumeArgs>;
            flocker?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesFlockerArgs>;
            gcePersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesGcepersistentdiskArgs>;
            gitRepo?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesGitrepoArgs>;
            glusterfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesGlusterfsArgs>;
            hostPath?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesHostpathArgs>;
            iscsi?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesIscsiArgs>;
            name: pulumi.Input<string>;
            nfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesNfsArgs>;
            persistentVolumeClaim?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesPersistentvolumeclaimArgs>;
            photonPersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesPhotonpersistentdiskArgs>;
            portworxVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesPortworxvolumeArgs>;
            projected?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesProjectedArgs>;
            quobyte?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesQuobyteArgs>;
            rbd?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesRbdArgs>;
            scaleIO?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesScaleioArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesSecretArgs>;
            storageos?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesStorageosArgs>;
            vsphereVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesVspherevolumeArgs>;
        }

        export interface TidbMonitorSpecAdditionalvolumesAwselasticblockstoreArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesAzurediskArgs {
            cachingMode?: pulumi.Input<string>;
            diskName: pulumi.Input<string>;
            diskURI: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecAdditionalvolumesAzurefileArgs {
            readOnly?: pulumi.Input<boolean>;
            secretName: pulumi.Input<string>;
            shareName: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesCephfsArgs {
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            path?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretFile?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesCephfsSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesCephfsSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesCinderArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesCinderSecretrefArgs>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesCinderSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesConfigmapArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecAdditionalvolumesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesCsiArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            nodePublishSecretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesCsiNodepublishsecretrefArgs>;
            readOnly?: pulumi.Input<boolean>;
            volumeAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbMonitorSpecAdditionalvolumesCsiNodepublishsecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesDownwardapiArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesDownwardapiItemsArgs>[]>;
        }

        export interface TidbMonitorSpecAdditionalvolumesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface TidbMonitorSpecAdditionalvolumesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesEmptydirArgs {
            medium?: pulumi.Input<string>;
            sizeLimit?: pulumi.Input<number | string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesEphemeralArgs {
            readOnly?: pulumi.Input<boolean>;
            volumeClaimTemplate?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesEphemeralVolumeclaimtemplateArgs>;
        }

        export interface TidbMonitorSpecAdditionalvolumesEphemeralVolumeclaimtemplateArgs {
            metadata?: pulumi.Input<{[key: string]: any}>;
            spec: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs>;
        }

        export interface TidbMonitorSpecAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs {
            accessModes?: pulumi.Input<pulumi.Input<string>[]>;
            dataSource?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs>;
            selector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs>;
            storageClassName?: pulumi.Input<string>;
            volumeMode?: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs {
            apiGroup?: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbMonitorSpecAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbMonitorSpecAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbMonitorSpecAdditionalvolumesFcArgs {
            fsType?: pulumi.Input<string>;
            lun?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            targetWWNs?: pulumi.Input<pulumi.Input<string>[]>;
            wwids?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbMonitorSpecAdditionalvolumesFlexvolumeArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesFlexvolumeSecretrefArgs>;
        }

        export interface TidbMonitorSpecAdditionalvolumesFlexvolumeSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesFlockerArgs {
            datasetName?: pulumi.Input<string>;
            datasetUUID?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesGcepersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            pdName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecAdditionalvolumesGitrepoArgs {
            directory?: pulumi.Input<string>;
            repository: pulumi.Input<string>;
            revision?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesGlusterfsArgs {
            endpoints: pulumi.Input<string>;
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecAdditionalvolumesHostpathArgs {
            path: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesIscsiArgs {
            chapAuthDiscovery?: pulumi.Input<boolean>;
            chapAuthSession?: pulumi.Input<boolean>;
            fsType?: pulumi.Input<string>;
            initiatorName?: pulumi.Input<string>;
            iqn: pulumi.Input<string>;
            iscsiInterface?: pulumi.Input<string>;
            lun: pulumi.Input<number>;
            portals?: pulumi.Input<pulumi.Input<string>[]>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesIscsiSecretrefArgs>;
            targetPortal: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesIscsiSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesNfsArgs {
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            server: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesPersistentvolumeclaimArgs {
            claimName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecAdditionalvolumesPhotonpersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            pdID: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesPortworxvolumeArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesProjectedArgs {
            defaultMode?: pulumi.Input<number>;
            sources: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesProjectedSourcesArgs>[]>;
        }

        export interface TidbMonitorSpecAdditionalvolumesProjectedSourcesArgs {
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesProjectedSourcesConfigmapArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesProjectedSourcesDownwardapiArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesProjectedSourcesSecretArgs>;
            serviceAccountToken?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesProjectedSourcesServiceaccounttokenArgs>;
        }

        export interface TidbMonitorSpecAdditionalvolumesProjectedSourcesConfigmapArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesProjectedSourcesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecAdditionalvolumesProjectedSourcesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesProjectedSourcesDownwardapiArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesProjectedSourcesDownwardapiItemsArgs>[]>;
        }

        export interface TidbMonitorSpecAdditionalvolumesProjectedSourcesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface TidbMonitorSpecAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesProjectedSourcesSecretArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesProjectedSourcesSecretItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecAdditionalvolumesProjectedSourcesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesProjectedSourcesServiceaccounttokenArgs {
            audience?: pulumi.Input<string>;
            expirationSeconds?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesQuobyteArgs {
            group?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            registry: pulumi.Input<string>;
            tenant?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
            volume: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesRbdArgs {
            fsType?: pulumi.Input<string>;
            image: pulumi.Input<string>;
            keyring?: pulumi.Input<string>;
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            pool?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesRbdSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesRbdSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesScaleioArgs {
            fsType?: pulumi.Input<string>;
            gateway: pulumi.Input<string>;
            protectionDomain?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesScaleioSecretrefArgs>;
            sslEnabled?: pulumi.Input<boolean>;
            storageMode?: pulumi.Input<string>;
            storagePool?: pulumi.Input<string>;
            system: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesScaleioSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesSecretArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesSecretItemsArgs>[]>;
            optional?: pulumi.Input<boolean>;
            secretName?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesStorageosArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalvolumesStorageosSecretrefArgs>;
            volumeName?: pulumi.Input<string>;
            volumeNamespace?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesStorageosSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecAdditionalvolumesVspherevolumeArgs {
            fsType?: pulumi.Input<string>;
            storagePolicyID?: pulumi.Input<string>;
            storagePolicyName?: pulumi.Input<string>;
            volumePath: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecClustersArgs {
            clusterDomain?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecDmArgs {
            clusters: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecDmClustersArgs>[]>;
            initializer: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecDmInitializerArgs>;
        }

        export interface TidbMonitorSpecDmClustersArgs {
            clusterDomain?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecDmInitializerArgs {
            baseImage?: pulumi.Input<string>;
            envs?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            imagePullPolicy?: pulumi.Input<string>;
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            version?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecGrafanaArgs {
            additionalVolumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecGrafanaAdditionalvolumemountsArgs>[]>;
            baseImage?: pulumi.Input<string>;
            envs?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            imagePullPolicy?: pulumi.Input<string>;
            ingress?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecGrafanaIngressArgs>;
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            logLevel?: pulumi.Input<string>;
            password?: pulumi.Input<string>;
            passwordSecret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecGrafanaPasswordsecretArgs>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            service?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecGrafanaServiceArgs>;
            username?: pulumi.Input<string>;
            usernameSecret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecGrafanaUsernamesecretArgs>;
            version?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecGrafanaAdditionalvolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecGrafanaIngressArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            hosts: pulumi.Input<pulumi.Input<string>[]>;
            tls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecGrafanaIngressTlsArgs>[]>;
        }

        export interface TidbMonitorSpecGrafanaIngressTlsArgs {
            hosts?: pulumi.Input<pulumi.Input<string>[]>;
            secretName?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecGrafanaPasswordsecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecGrafanaServiceArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            clusterIP?: pulumi.Input<string>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            loadBalancerIP?: pulumi.Input<string>;
            loadBalancerSourceRanges?: pulumi.Input<pulumi.Input<string>[]>;
            port?: pulumi.Input<number>;
            portName?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecGrafanaUsernamesecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecInitializerArgs {
            baseImage?: pulumi.Input<string>;
            envs?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            imagePullPolicy?: pulumi.Input<string>;
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            version?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecPodsecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPodsecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPodsecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPodsecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPodsecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbMonitorSpecPodsecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecPodsecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecPodsecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecPodsecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecPrometheusArgs {
            additionalVolumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusAdditionalvolumemountsArgs>[]>;
            baseImage?: pulumi.Input<string>;
            config?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusConfigArgs>;
            disableCompaction?: pulumi.Input<boolean>;
            imagePullPolicy?: pulumi.Input<string>;
            ingress?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusIngressArgs>;
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            logLevel?: pulumi.Input<string>;
            remoteWrite?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusRemotewriteArgs>[]>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            reserveDays?: pulumi.Input<number>;
            retentionTime?: pulumi.Input<string>;
            service?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusServiceArgs>;
            version?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecPrometheusAdditionalvolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecPrometheusConfigArgs {
            commandOptions?: pulumi.Input<pulumi.Input<string>[]>;
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusConfigConfigmaprefArgs>;
            ruleConfigRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusConfigRuleconfigrefArgs>;
        }

        export interface TidbMonitorSpecPrometheusConfigConfigmaprefArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecPrometheusConfigRuleconfigrefArgs {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecPrometheusIngressArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            hosts: pulumi.Input<pulumi.Input<string>[]>;
            tls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusIngressTlsArgs>[]>;
        }

        export interface TidbMonitorSpecPrometheusIngressTlsArgs {
            hosts?: pulumi.Input<pulumi.Input<string>[]>;
            secretName?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecPrometheusRemotewriteArgs {
            basicAuth?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusRemotewriteBasicauthArgs>;
            bearerToken?: pulumi.Input<string>;
            bearerTokenFile?: pulumi.Input<string>;
            proxyUrl?: pulumi.Input<string>;
            queueConfig?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusRemotewriteQueueconfigArgs>;
            remoteTimeout?: pulumi.Input<number>;
            tlsConfig?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusRemotewriteTlsconfigArgs>;
            url: pulumi.Input<string>;
            writeRelabelConfigs?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusRemotewriteWriterelabelconfigsArgs>[]>;
        }

        export interface TidbMonitorSpecPrometheusRemotewriteBasicauthArgs {
            password?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusRemotewriteBasicauthPasswordArgs>;
            username?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusRemotewriteBasicauthUsernameArgs>;
        }

        export interface TidbMonitorSpecPrometheusRemotewriteBasicauthPasswordArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecPrometheusRemotewriteBasicauthUsernameArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecPrometheusRemotewriteQueueconfigArgs {
            batchSendDeadline?: pulumi.Input<number>;
            capacity?: pulumi.Input<number>;
            maxBackoff?: pulumi.Input<number>;
            maxRetries?: pulumi.Input<number>;
            maxSamplesPerSend?: pulumi.Input<number>;
            maxShards?: pulumi.Input<number>;
            minBackoff?: pulumi.Input<number>;
        }

        export interface TidbMonitorSpecPrometheusRemotewriteTlsconfigArgs {
            ca?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusRemotewriteTlsconfigCaArgs>;
            caFile?: pulumi.Input<string>;
            cert?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusRemotewriteTlsconfigCertArgs>;
            certFile?: pulumi.Input<string>;
            insecureSkipVerify?: pulumi.Input<boolean>;
            keyFile?: pulumi.Input<string>;
            keySecret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusRemotewriteTlsconfigKeysecretArgs>;
            serverName?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecPrometheusRemotewriteTlsconfigCaArgs {
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusRemotewriteTlsconfigCaConfigmapArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusRemotewriteTlsconfigCaSecretArgs>;
        }

        export interface TidbMonitorSpecPrometheusRemotewriteTlsconfigCaConfigmapArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecPrometheusRemotewriteTlsconfigCaSecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecPrometheusRemotewriteTlsconfigCertArgs {
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusRemotewriteTlsconfigCertConfigmapArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecPrometheusRemotewriteTlsconfigCertSecretArgs>;
        }

        export interface TidbMonitorSpecPrometheusRemotewriteTlsconfigCertConfigmapArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecPrometheusRemotewriteTlsconfigCertSecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecPrometheusRemotewriteTlsconfigKeysecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecPrometheusRemotewriteWriterelabelconfigsArgs {
            action?: pulumi.Input<string>;
            modulus?: pulumi.Input<number>;
            regex?: pulumi.Input<string>;
            replacement?: pulumi.Input<string>;
            separator?: pulumi.Input<string>;
            sourceLabels?: pulumi.Input<pulumi.Input<string>[]>;
            targetLabel?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecPrometheusServiceArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            clusterIP?: pulumi.Input<string>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            loadBalancerIP?: pulumi.Input<string>;
            loadBalancerSourceRanges?: pulumi.Input<pulumi.Input<string>[]>;
            port?: pulumi.Input<number>;
            portName?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecPrometheusreloaderArgs {
            baseImage?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            version?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecReloaderArgs {
            baseImage?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            service?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecReloaderServiceArgs>;
            version?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecReloaderServiceArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            clusterIP?: pulumi.Input<string>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            loadBalancerIP?: pulumi.Input<string>;
            loadBalancerSourceRanges?: pulumi.Input<pulumi.Input<string>[]>;
            port?: pulumi.Input<number>;
            portName?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecThanosArgs {
            additionalVolumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecThanosAdditionalvolumemountsArgs>[]>;
            baseImage?: pulumi.Input<string>;
            grpcServerTlsConfig?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecThanosGrpcservertlsconfigArgs>;
            imagePullPolicy?: pulumi.Input<string>;
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            listenLocal?: pulumi.Input<boolean>;
            logFormat?: pulumi.Input<string>;
            logLevel?: pulumi.Input<string>;
            minTime?: pulumi.Input<string>;
            objectStorageConfig?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecThanosObjectstorageconfigArgs>;
            objectStorageConfigFile?: pulumi.Input<string>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            routePrefix?: pulumi.Input<string>;
            tracingConfig?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecThanosTracingconfigArgs>;
            tracingConfigFile?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecThanosAdditionalvolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecThanosGrpcservertlsconfigArgs {
            ca?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecThanosGrpcservertlsconfigCaArgs>;
            caFile?: pulumi.Input<string>;
            cert?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecThanosGrpcservertlsconfigCertArgs>;
            certFile?: pulumi.Input<string>;
            insecureSkipVerify?: pulumi.Input<boolean>;
            keyFile?: pulumi.Input<string>;
            keySecret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecThanosGrpcservertlsconfigKeysecretArgs>;
            serverName?: pulumi.Input<string>;
        }

        export interface TidbMonitorSpecThanosGrpcservertlsconfigCaArgs {
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecThanosGrpcservertlsconfigCaConfigmapArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecThanosGrpcservertlsconfigCaSecretArgs>;
        }

        export interface TidbMonitorSpecThanosGrpcservertlsconfigCaConfigmapArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecThanosGrpcservertlsconfigCaSecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecThanosGrpcservertlsconfigCertArgs {
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecThanosGrpcservertlsconfigCertConfigmapArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorSpecThanosGrpcservertlsconfigCertSecretArgs>;
        }

        export interface TidbMonitorSpecThanosGrpcservertlsconfigCertConfigmapArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecThanosGrpcservertlsconfigCertSecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecThanosGrpcservertlsconfigKeysecretArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecThanosObjectstorageconfigArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecThanosTracingconfigArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbMonitorSpecTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface TidbMonitorStatusArgs {
            deploymentStorageStatus?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorStatusDeploymentstoragestatusArgs>;
            statefulSet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorStatusStatefulsetArgs>;
        }

        export interface TidbMonitorStatusDeploymentstoragestatusArgs {
            pvName?: pulumi.Input<string>;
        }

        export interface TidbMonitorStatusStatefulsetArgs {
            collisionCount?: pulumi.Input<number>;
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbMonitorStatusStatefulsetConditionsArgs>[]>;
            currentReplicas?: pulumi.Input<number>;
            currentRevision?: pulumi.Input<string>;
            observedGeneration?: pulumi.Input<number>;
            readyReplicas?: pulumi.Input<number>;
            replicas: pulumi.Input<number>;
            updateRevision?: pulumi.Input<string>;
            updatedReplicas?: pulumi.Input<number>;
        }

        export interface TidbMonitorStatusStatefulsetConditionsArgs {
            lastTransitionTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecArgs {
            additionalContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersArgs>[]>;
            additionalVolumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumemountsArgs>[]>;
            additionalVolumes?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesArgs>[]>;
            affinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityArgs>;
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            clusterDomain?: pulumi.Input<string>;
            clusters: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecClustersArgs>[]>;
            configUpdateStrategy?: pulumi.Input<string>;
            dnsConfig?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecDnsconfigArgs>;
            dnsPolicy?: pulumi.Input<string>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecEnvfromArgs>[]>;
            hostNetwork?: pulumi.Input<boolean>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecImagepullsecretsArgs>[]>;
            initContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersArgs>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            ngMonitoring: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringArgs>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            paused?: pulumi.Input<boolean>;
            podManagementPolicy?: pulumi.Input<string>;
            podSecurityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecPodsecuritycontextArgs>;
            priorityClassName?: pulumi.Input<string>;
            pvReclaimPolicy?: pulumi.Input<string>;
            schedulerName?: pulumi.Input<string>;
            statefulSetUpdateStrategy?: pulumi.Input<string>;
            suspendAction?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecSuspendactionArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecTolerationsArgs>[]>;
            topologySpreadConstraints?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecTopologyspreadconstraintsArgs>[]>;
            version?: pulumi.Input<string>;
        }
        /**
         * tidbNGMonitoringSpecArgsProvideDefaults sets the appropriate defaults for TidbNGMonitoringSpecArgs
         */
        export function tidbNGMonitoringSpecArgsProvideDefaults(val: TidbNGMonitoringSpecArgs): TidbNGMonitoringSpecArgs {
            return {
                ...val,
                ngMonitoring: pulumi.output(val.ngMonitoring).apply(inputs.pingcap.v1alpha1.tidbNGMonitoringSpecNgmonitoringArgsProvideDefaults),
                pvReclaimPolicy: (val.pvReclaimPolicy) ?? "Retain",
            };
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersEnvValuefromArgs>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersEnvfromSecretrefArgs>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersLifecyclePrestopArgs>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * tidbNGMonitoringSpecAdditionalcontainersPortsArgsProvideDefaults sets the appropriate defaults for TidbNGMonitoringSpecAdditionalcontainersPortsArgs
         */
        export function tidbNGMonitoringSpecAdditionalcontainersPortsArgsProvideDefaults(val: TidbNGMonitoringSpecAdditionalcontainersPortsArgs): TidbNGMonitoringSpecAdditionalcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesArgs {
            awsElasticBlockStore?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesAwselasticblockstoreArgs>;
            azureDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesAzurediskArgs>;
            azureFile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesAzurefileArgs>;
            cephfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesCephfsArgs>;
            cinder?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesCinderArgs>;
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesConfigmapArgs>;
            csi?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesCsiArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesDownwardapiArgs>;
            emptyDir?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesEmptydirArgs>;
            ephemeral?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesEphemeralArgs>;
            fc?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesFcArgs>;
            flexVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesFlexvolumeArgs>;
            flocker?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesFlockerArgs>;
            gcePersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesGcepersistentdiskArgs>;
            gitRepo?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesGitrepoArgs>;
            glusterfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesGlusterfsArgs>;
            hostPath?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesHostpathArgs>;
            iscsi?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesIscsiArgs>;
            name: pulumi.Input<string>;
            nfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesNfsArgs>;
            persistentVolumeClaim?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesPersistentvolumeclaimArgs>;
            photonPersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesPhotonpersistentdiskArgs>;
            portworxVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesPortworxvolumeArgs>;
            projected?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesProjectedArgs>;
            quobyte?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesQuobyteArgs>;
            rbd?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesRbdArgs>;
            scaleIO?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesScaleioArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesSecretArgs>;
            storageos?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesStorageosArgs>;
            vsphereVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesVspherevolumeArgs>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesAwselasticblockstoreArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesAzurediskArgs {
            cachingMode?: pulumi.Input<string>;
            diskName: pulumi.Input<string>;
            diskURI: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesAzurefileArgs {
            readOnly?: pulumi.Input<boolean>;
            secretName: pulumi.Input<string>;
            shareName: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesCephfsArgs {
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            path?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretFile?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesCephfsSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesCephfsSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesCinderArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesCinderSecretrefArgs>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesCinderSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesConfigmapArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesCsiArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            nodePublishSecretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesCsiNodepublishsecretrefArgs>;
            readOnly?: pulumi.Input<boolean>;
            volumeAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesCsiNodepublishsecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesDownwardapiArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesDownwardapiItemsArgs>[]>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesEmptydirArgs {
            medium?: pulumi.Input<string>;
            sizeLimit?: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesEphemeralArgs {
            readOnly?: pulumi.Input<boolean>;
            volumeClaimTemplate?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesEphemeralVolumeclaimtemplateArgs>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesEphemeralVolumeclaimtemplateArgs {
            metadata?: pulumi.Input<{[key: string]: any}>;
            spec: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs {
            accessModes?: pulumi.Input<pulumi.Input<string>[]>;
            dataSource?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs>;
            selector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs>;
            storageClassName?: pulumi.Input<string>;
            volumeMode?: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs {
            apiGroup?: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesFcArgs {
            fsType?: pulumi.Input<string>;
            lun?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            targetWWNs?: pulumi.Input<pulumi.Input<string>[]>;
            wwids?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesFlexvolumeArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesFlexvolumeSecretrefArgs>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesFlexvolumeSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesFlockerArgs {
            datasetName?: pulumi.Input<string>;
            datasetUUID?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesGcepersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            pdName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesGitrepoArgs {
            directory?: pulumi.Input<string>;
            repository: pulumi.Input<string>;
            revision?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesGlusterfsArgs {
            endpoints: pulumi.Input<string>;
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesHostpathArgs {
            path: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesIscsiArgs {
            chapAuthDiscovery?: pulumi.Input<boolean>;
            chapAuthSession?: pulumi.Input<boolean>;
            fsType?: pulumi.Input<string>;
            initiatorName?: pulumi.Input<string>;
            iqn: pulumi.Input<string>;
            iscsiInterface?: pulumi.Input<string>;
            lun: pulumi.Input<number>;
            portals?: pulumi.Input<pulumi.Input<string>[]>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesIscsiSecretrefArgs>;
            targetPortal: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesIscsiSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesNfsArgs {
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            server: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesPersistentvolumeclaimArgs {
            claimName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesPhotonpersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            pdID: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesPortworxvolumeArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesProjectedArgs {
            defaultMode?: pulumi.Input<number>;
            sources: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesProjectedSourcesArgs>[]>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesProjectedSourcesArgs {
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesProjectedSourcesConfigmapArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesProjectedSourcesDownwardapiArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesProjectedSourcesSecretArgs>;
            serviceAccountToken?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesProjectedSourcesServiceaccounttokenArgs>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesProjectedSourcesConfigmapArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesProjectedSourcesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesProjectedSourcesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesProjectedSourcesDownwardapiArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesProjectedSourcesDownwardapiItemsArgs>[]>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesProjectedSourcesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesProjectedSourcesSecretArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesProjectedSourcesSecretItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesProjectedSourcesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesProjectedSourcesServiceaccounttokenArgs {
            audience?: pulumi.Input<string>;
            expirationSeconds?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesQuobyteArgs {
            group?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            registry: pulumi.Input<string>;
            tenant?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
            volume: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesRbdArgs {
            fsType?: pulumi.Input<string>;
            image: pulumi.Input<string>;
            keyring?: pulumi.Input<string>;
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            pool?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesRbdSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesRbdSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesScaleioArgs {
            fsType?: pulumi.Input<string>;
            gateway: pulumi.Input<string>;
            protectionDomain?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesScaleioSecretrefArgs>;
            sslEnabled?: pulumi.Input<boolean>;
            storageMode?: pulumi.Input<string>;
            storagePool?: pulumi.Input<string>;
            system: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesScaleioSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesSecretArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesSecretItemsArgs>[]>;
            optional?: pulumi.Input<boolean>;
            secretName?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesStorageosArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAdditionalvolumesStorageosSecretrefArgs>;
            volumeName?: pulumi.Input<string>;
            volumeNamespace?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesStorageosSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAdditionalvolumesVspherevolumeArgs {
            fsType?: pulumi.Input<string>;
            storagePolicyID?: pulumi.Input<string>;
            storagePolicyName?: pulumi.Input<string>;
            volumePath: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityPodantiaffinityArgs>;
        }

        export interface TidbNGMonitoringSpecAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface TidbNGMonitoringSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbNGMonitoringSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface TidbNGMonitoringSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface TidbNGMonitoringSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface TidbNGMonitoringSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface TidbNGMonitoringSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbNGMonitoringSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbNGMonitoringSpecAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbNGMonitoringSpecAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface TidbNGMonitoringSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbNGMonitoringSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbNGMonitoringSpecAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbNGMonitoringSpecAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecClustersArgs {
            clusterDomain?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecDnsconfigArgs {
            nameservers?: pulumi.Input<pulumi.Input<string>[]>;
            options?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecDnsconfigOptionsArgs>[]>;
            searches?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecDnsconfigOptionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecEnvValuefromArgs>;
        }

        export interface TidbNGMonitoringSpecEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbNGMonitoringSpecEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecEnvfromSecretrefArgs>;
        }

        export interface TidbNGMonitoringSpecEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersEnvValuefromArgs>;
        }

        export interface TidbNGMonitoringSpecInitcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbNGMonitoringSpecInitcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecInitcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecInitcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersEnvfromSecretrefArgs>;
        }

        export interface TidbNGMonitoringSpecInitcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecInitcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecInitcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersLifecyclePrestopArgs>;
        }

        export interface TidbNGMonitoringSpecInitcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface TidbNGMonitoringSpecInitcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecInitcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface TidbNGMonitoringSpecInitcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecInitcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbNGMonitoringSpecInitcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecInitcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * tidbNGMonitoringSpecInitcontainersPortsArgsProvideDefaults sets the appropriate defaults for TidbNGMonitoringSpecInitcontainersPortsArgs
         */
        export function tidbNGMonitoringSpecInitcontainersPortsArgsProvideDefaults(val: TidbNGMonitoringSpecInitcontainersPortsArgs): TidbNGMonitoringSpecInitcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface TidbNGMonitoringSpecInitcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbNGMonitoringSpecInitcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecInitcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbNGMonitoringSpecInitcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbNGMonitoringSpecInitcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecInitcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbNGMonitoringSpecInitcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecInitcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecInitcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecInitcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringArgs {
            additionalContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersArgs>[]>;
            additionalVolumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumemountsArgs>[]>;
            additionalVolumes?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesArgs>[]>;
            affinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityArgs>;
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            baseImage?: pulumi.Input<string>;
            config?: pulumi.Input<{[key: string]: any}>;
            configUpdateStrategy?: pulumi.Input<string>;
            dnsConfig?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringDnsconfigArgs>;
            dnsPolicy?: pulumi.Input<string>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringEnvfromArgs>[]>;
            hostNetwork?: pulumi.Input<boolean>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringImagepullsecretsArgs>[]>;
            initContainers?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersArgs>[]>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            podManagementPolicy?: pulumi.Input<string>;
            podSecurityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringPodsecuritycontextArgs>;
            priorityClassName?: pulumi.Input<string>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            schedulerName?: pulumi.Input<string>;
            statefulSetUpdateStrategy?: pulumi.Input<string>;
            storageClassName?: pulumi.Input<string>;
            storageVolumes?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringStoragevolumesArgs>[]>;
            suspendAction?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringSuspendactionArgs>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringTolerationsArgs>[]>;
            topologySpreadConstraints?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringTopologyspreadconstraintsArgs>[]>;
            version?: pulumi.Input<string>;
        }
        /**
         * tidbNGMonitoringSpecNgmonitoringArgsProvideDefaults sets the appropriate defaults for TidbNGMonitoringSpecNgmonitoringArgs
         */
        export function tidbNGMonitoringSpecNgmonitoringArgsProvideDefaults(val: TidbNGMonitoringSpecNgmonitoringArgs): TidbNGMonitoringSpecNgmonitoringArgs {
            return {
                ...val,
                baseImage: (val.baseImage) ?? "pingcap/ng-monitoring",
            };
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersEnvValuefromArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersEnvfromSecretrefArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecyclePrestopArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * tidbNGMonitoringSpecNgmonitoringAdditionalcontainersPortsArgsProvideDefaults sets the appropriate defaults for TidbNGMonitoringSpecNgmonitoringAdditionalcontainersPortsArgs
         */
        export function tidbNGMonitoringSpecNgmonitoringAdditionalcontainersPortsArgsProvideDefaults(val: TidbNGMonitoringSpecNgmonitoringAdditionalcontainersPortsArgs): TidbNGMonitoringSpecNgmonitoringAdditionalcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesArgs {
            awsElasticBlockStore?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesAwselasticblockstoreArgs>;
            azureDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesAzurediskArgs>;
            azureFile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesAzurefileArgs>;
            cephfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesCephfsArgs>;
            cinder?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesCinderArgs>;
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesConfigmapArgs>;
            csi?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesCsiArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesDownwardapiArgs>;
            emptyDir?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesEmptydirArgs>;
            ephemeral?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesEphemeralArgs>;
            fc?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesFcArgs>;
            flexVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesFlexvolumeArgs>;
            flocker?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesFlockerArgs>;
            gcePersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesGcepersistentdiskArgs>;
            gitRepo?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesGitrepoArgs>;
            glusterfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesGlusterfsArgs>;
            hostPath?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesHostpathArgs>;
            iscsi?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesIscsiArgs>;
            name: pulumi.Input<string>;
            nfs?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesNfsArgs>;
            persistentVolumeClaim?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesPersistentvolumeclaimArgs>;
            photonPersistentDisk?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesPhotonpersistentdiskArgs>;
            portworxVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesPortworxvolumeArgs>;
            projected?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedArgs>;
            quobyte?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesQuobyteArgs>;
            rbd?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesRbdArgs>;
            scaleIO?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesScaleioArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesSecretArgs>;
            storageos?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesStorageosArgs>;
            vsphereVolume?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesVspherevolumeArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesAwselasticblockstoreArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesAzurediskArgs {
            cachingMode?: pulumi.Input<string>;
            diskName: pulumi.Input<string>;
            diskURI: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesAzurefileArgs {
            readOnly?: pulumi.Input<boolean>;
            secretName: pulumi.Input<string>;
            shareName: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesCephfsArgs {
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            path?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretFile?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesCephfsSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesCephfsSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesCinderArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesCinderSecretrefArgs>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesCinderSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesConfigmapArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesCsiArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            nodePublishSecretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesCsiNodepublishsecretrefArgs>;
            readOnly?: pulumi.Input<boolean>;
            volumeAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesCsiNodepublishsecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesDownwardapiArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesDownwardapiItemsArgs>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesEmptydirArgs {
            medium?: pulumi.Input<string>;
            sizeLimit?: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesEphemeralArgs {
            readOnly?: pulumi.Input<boolean>;
            volumeClaimTemplate?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesEphemeralVolumeclaimtemplateArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesEphemeralVolumeclaimtemplateArgs {
            metadata?: pulumi.Input<{[key: string]: any}>;
            spec: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesEphemeralVolumeclaimtemplateSpecArgs {
            accessModes?: pulumi.Input<pulumi.Input<string>[]>;
            dataSource?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs>;
            selector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs>;
            storageClassName?: pulumi.Input<string>;
            volumeMode?: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesEphemeralVolumeclaimtemplateSpecDatasourceArgs {
            apiGroup?: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesEphemeralVolumeclaimtemplateSpecResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesEphemeralVolumeclaimtemplateSpecSelectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesFcArgs {
            fsType?: pulumi.Input<string>;
            lun?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            targetWWNs?: pulumi.Input<pulumi.Input<string>[]>;
            wwids?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesFlexvolumeArgs {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesFlexvolumeSecretrefArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesFlexvolumeSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesFlockerArgs {
            datasetName?: pulumi.Input<string>;
            datasetUUID?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesGcepersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            pdName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesGitrepoArgs {
            directory?: pulumi.Input<string>;
            repository: pulumi.Input<string>;
            revision?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesGlusterfsArgs {
            endpoints: pulumi.Input<string>;
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesHostpathArgs {
            path: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesIscsiArgs {
            chapAuthDiscovery?: pulumi.Input<boolean>;
            chapAuthSession?: pulumi.Input<boolean>;
            fsType?: pulumi.Input<string>;
            initiatorName?: pulumi.Input<string>;
            iqn: pulumi.Input<string>;
            iscsiInterface?: pulumi.Input<string>;
            lun: pulumi.Input<number>;
            portals?: pulumi.Input<pulumi.Input<string>[]>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesIscsiSecretrefArgs>;
            targetPortal: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesIscsiSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesNfsArgs {
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            server: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesPersistentvolumeclaimArgs {
            claimName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesPhotonpersistentdiskArgs {
            fsType?: pulumi.Input<string>;
            pdID: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesPortworxvolumeArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedArgs {
            defaultMode?: pulumi.Input<number>;
            sources: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedSourcesArgs>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedSourcesArgs {
            configMap?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedSourcesConfigmapArgs>;
            downwardAPI?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedSourcesDownwardapiArgs>;
            secret?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedSourcesSecretArgs>;
            serviceAccountToken?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedSourcesServiceaccounttokenArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedSourcesConfigmapArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedSourcesConfigmapItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedSourcesConfigmapItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedSourcesDownwardapiArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedSourcesDownwardapiItemsArgs>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedSourcesDownwardapiItemsArgs {
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedSourcesDownwardapiItemsFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedSourcesDownwardapiItemsResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedSourcesSecretArgs {
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedSourcesSecretItemsArgs>[]>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedSourcesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesProjectedSourcesServiceaccounttokenArgs {
            audience?: pulumi.Input<string>;
            expirationSeconds?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesQuobyteArgs {
            group?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            registry: pulumi.Input<string>;
            tenant?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
            volume: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesRbdArgs {
            fsType?: pulumi.Input<string>;
            image: pulumi.Input<string>;
            keyring?: pulumi.Input<string>;
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            pool?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesRbdSecretrefArgs>;
            user?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesRbdSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesScaleioArgs {
            fsType?: pulumi.Input<string>;
            gateway: pulumi.Input<string>;
            protectionDomain?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesScaleioSecretrefArgs>;
            sslEnabled?: pulumi.Input<boolean>;
            storageMode?: pulumi.Input<string>;
            storagePool?: pulumi.Input<string>;
            system: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesScaleioSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesSecretArgs {
            defaultMode?: pulumi.Input<number>;
            items?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesSecretItemsArgs>[]>;
            optional?: pulumi.Input<boolean>;
            secretName?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesSecretItemsArgs {
            key: pulumi.Input<string>;
            mode?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesStorageosArgs {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAdditionalvolumesStorageosSecretrefArgs>;
            volumeName?: pulumi.Input<string>;
            volumeNamespace?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesStorageosSecretrefArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAdditionalvolumesVspherevolumeArgs {
            fsType?: pulumi.Input<string>;
            storagePolicyID?: pulumi.Input<string>;
            storagePolicyName?: pulumi.Input<string>;
            volumePath: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityArgs {
            nodeAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityNodeaffinityArgs>;
            podAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityPodaffinityArgs>;
            podAntiAffinity?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityPodantiaffinityArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityNodeaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionArgs {
            preference: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityNodeaffinityPreferredduringschedulingignoredduringexecutionPreferenceMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionArgs {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectortermsMatchfieldsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityPodaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityPodaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityPodaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityPodaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityPodaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityPodantiaffinityArgs {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionArgs {
            podAffinityTerm: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs>;
            weight: pulumi.Input<number>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityPodantiaffinityPreferredduringschedulingignoredduringexecutionPodaffinitytermLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionArgs {
            labelSelector?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringAffinityPodantiaffinityRequiredduringschedulingignoredduringexecutionLabelselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringDnsconfigArgs {
            nameservers?: pulumi.Input<pulumi.Input<string>[]>;
            options?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringDnsconfigOptionsArgs>[]>;
            searches?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringDnsconfigOptionsArgs {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringEnvValuefromArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringEnvfromSecretrefArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringImagepullsecretsArgs {
            name?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersArgs {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersEnvArgs>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersEnvfromArgs>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersLifecycleArgs>;
            livenessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersLivenessprobeArgs>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersPortsArgs>[]>;
            readinessProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersReadinessprobeArgs>;
            resources?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersResourcesArgs>;
            securityContext?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersSecuritycontextArgs>;
            startupProbe?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersStartupprobeArgs>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersVolumedevicesArgs>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersVolumemountsArgs>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersEnvArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersEnvValuefromArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersEnvValuefromArgs {
            configMapKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersEnvValuefromConfigmapkeyrefArgs>;
            fieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersEnvValuefromFieldrefArgs>;
            resourceFieldRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersEnvValuefromResourcefieldrefArgs>;
            secretKeyRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersEnvValuefromSecretkeyrefArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersEnvValuefromConfigmapkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersEnvValuefromFieldrefArgs {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersEnvValuefromResourcefieldrefArgs {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<number | string>;
            resource: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersEnvValuefromSecretkeyrefArgs {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersEnvfromArgs {
            configMapRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersEnvfromConfigmaprefArgs>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersEnvfromSecretrefArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersEnvfromConfigmaprefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersEnvfromSecretrefArgs {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersLifecycleArgs {
            postStart?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersLifecyclePoststartArgs>;
            preStop?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersLifecyclePrestopArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersLifecyclePoststartArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersLifecyclePoststartExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersLifecyclePoststartHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersLifecyclePoststartTcpsocketArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersLifecyclePoststartExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersLifecyclePoststartHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersLifecyclePoststartHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersLifecyclePoststartHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersLifecyclePoststartTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersLifecyclePrestopArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersLifecyclePrestopExecArgs>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersLifecyclePrestopHttpgetArgs>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersLifecyclePrestopTcpsocketArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersLifecyclePrestopExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersLifecyclePrestopHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersLifecyclePrestopHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersLifecyclePrestopHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersLifecyclePrestopTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersLivenessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersLivenessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersLivenessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersLivenessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersLivenessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersLivenessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersLivenessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersLivenessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersLivenessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersPortsArgs {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }
        /**
         * tidbNGMonitoringSpecNgmonitoringInitcontainersPortsArgsProvideDefaults sets the appropriate defaults for TidbNGMonitoringSpecNgmonitoringInitcontainersPortsArgs
         */
        export function tidbNGMonitoringSpecNgmonitoringInitcontainersPortsArgsProvideDefaults(val: TidbNGMonitoringSpecNgmonitoringInitcontainersPortsArgs): TidbNGMonitoringSpecNgmonitoringInitcontainersPortsArgs {
            return {
                ...val,
                protocol: (val.protocol) ?? "TCP",
            };
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersReadinessprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersReadinessprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersReadinessprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersReadinessprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersReadinessprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersReadinessprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersReadinessprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersReadinessprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersReadinessprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersResourcesArgs {
            limits?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
            requests?: pulumi.Input<{[key: string]: pulumi.Input<number | string>}>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersSecuritycontextArgs {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersSecuritycontextCapabilitiesArgs>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersSecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersSecuritycontextSeccompprofileArgs>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersSecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersSecuritycontextCapabilitiesArgs {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersSecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersSecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersSecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersStartupprobeArgs {
            exec?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersStartupprobeExecArgs>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersStartupprobeHttpgetArgs>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersStartupprobeTcpsocketArgs>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersStartupprobeExecArgs {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersStartupprobeHttpgetArgs {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringInitcontainersStartupprobeHttpgetHttpheadersArgs>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
            scheme?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersStartupprobeHttpgetHttpheadersArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersStartupprobeTcpsocketArgs {
            host?: pulumi.Input<string>;
            port: pulumi.Input<number | string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersVolumedevicesArgs {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringInitcontainersVolumemountsArgs {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringPodsecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringPodsecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringPodsecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringPodsecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecNgmonitoringPodsecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringPodsecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringPodsecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringPodsecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringPodsecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringStoragevolumesArgs {
            mountPath?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            storageClassName?: pulumi.Input<string>;
            storageSize: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringSuspendactionArgs {
            suspendStatefulSet?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecNgmonitoringTopologyspreadconstraintsArgs {
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecPodsecuritycontextArgs {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecPodsecuritycontextSelinuxoptionsArgs>;
            seccompProfile?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecPodsecuritycontextSeccompprofileArgs>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecPodsecuritycontextSysctlsArgs>[]>;
            windowsOptions?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringSpecPodsecuritycontextWindowsoptionsArgs>;
        }

        export interface TidbNGMonitoringSpecPodsecuritycontextSeccompprofileArgs {
            localhostProfile?: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecPodsecuritycontextSelinuxoptionsArgs {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecPodsecuritycontextSysctlsArgs {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecPodsecuritycontextWindowsoptionsArgs {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecSuspendactionArgs {
            suspendStatefulSet?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringSpecTolerationsArgs {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringSpecTopologyspreadconstraintsArgs {
            topologyKey: pulumi.Input<string>;
        }

        export interface TidbNGMonitoringStatusArgs {
            ngMonitoring?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringStatusNgmonitoringArgs>;
        }

        export interface TidbNGMonitoringStatusNgmonitoringArgs {
            phase?: pulumi.Input<string>;
            statefulSet?: pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringStatusNgmonitoringStatefulsetArgs>;
            synced?: pulumi.Input<boolean>;
        }

        export interface TidbNGMonitoringStatusNgmonitoringStatefulsetArgs {
            collisionCount?: pulumi.Input<number>;
            conditions?: pulumi.Input<pulumi.Input<inputs.pingcap.v1alpha1.TidbNGMonitoringStatusNgmonitoringStatefulsetConditionsArgs>[]>;
            currentReplicas?: pulumi.Input<number>;
            currentRevision?: pulumi.Input<string>;
            observedGeneration?: pulumi.Input<number>;
            readyReplicas?: pulumi.Input<number>;
            replicas: pulumi.Input<number>;
            updateRevision?: pulumi.Input<string>;
            updatedReplicas?: pulumi.Input<number>;
        }

        export interface TidbNGMonitoringStatusNgmonitoringStatefulsetConditionsArgs {
            lastTransitionTime?: pulumi.Input<string>;
            message?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

    }
}

export namespace policy {
    export namespace v1alpha1 {
        /**
         * Authorizes clients to communicate with Linkerd-proxied server resources.
         */
        export interface AuthorizationPolicySpecArgs {
            /**
             * RequiredAuthenticationRefs enumerates a set of required authentications. ALL authentications must be satisfied for the authorization to apply. If any of the referred objects cannot be found, the authorization will be ignored.
             */
            requiredAuthenticationRefs: pulumi.Input<pulumi.Input<inputs.policy.v1alpha1.AuthorizationPolicySpecRequiredauthenticationrefsArgs>[]>;
            /**
             * TargetRef references a resource to which the authorization policy applies.
             */
            targetRef: pulumi.Input<inputs.policy.v1alpha1.AuthorizationPolicySpecTargetrefArgs>;
        }

        export interface AuthorizationPolicySpecRequiredauthenticationrefsArgs {
            /**
             * Group is the group of the referent. When empty, the Kubernetes core API group is inferred."
             */
            group?: pulumi.Input<string>;
            /**
             * Kind is the kind of the referent.
             */
            kind: pulumi.Input<string>;
            /**
             * Name is the name of the referent.
             */
            name: pulumi.Input<string>;
            /**
             * Name is the name of the referent. When unspecified, this authentication refers to the local namespace.
             */
            namespace?: pulumi.Input<string>;
        }

        /**
         * TargetRef references a resource to which the authorization policy applies.
         */
        export interface AuthorizationPolicySpecTargetrefArgs {
            /**
             * Group is the group of the referent. When empty, the Kubernetes core API group is inferred.
             */
            group?: pulumi.Input<string>;
            /**
             * Kind is the kind of the referent.
             */
            kind: pulumi.Input<string>;
            /**
             * Name is the name of the referent.
             */
            name: pulumi.Input<string>;
        }

        /**
         * Spec defines the desired state of HTTPRoute.
         */
        export interface HTTPRouteSpecArgs {
            /**
             * Hostnames defines a set of hostname that should match against the HTTP Host header to select a HTTPRoute to process the request. This matches the RFC 1123 definition of a hostname with 2 notable exceptions: 
             *  1. IPs are not allowed. 2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard    label must appear by itself as the first label. 
             *  If a hostname is specified by both the Listener and HTTPRoute, there must be at least one intersecting hostname for the HTTPRoute to be attached to the Listener. For example: 
             *  * A Listener with `test.example.com` as the hostname matches HTTPRoutes   that have either not specified any hostnames, or have specified at   least one of `test.example.com` or `*.example.com`. * A Listener with `*.example.com` as the hostname matches HTTPRoutes   that have either not specified any hostnames or have specified at least   one hostname that matches the Listener hostname. For example,   `*.example.com`, `test.example.com`, and `foo.test.example.com` would   all match. On the other hand, `example.com` and `test.example.net` would   not match. 
             *  Hostnames that are prefixed with a wildcard label (`*.`) are interpreted as a suffix match. That means that a match for `*.example.com` would match both `test.example.com`, and `foo.test.example.com`, but not `example.com`. 
             *  If both the Listener and HTTPRoute have specified hostnames, any HTTPRoute hostnames that do not match the Listener hostname MUST be ignored. For example, if a Listener specified `*.example.com`, and the HTTPRoute specified `test.example.com` and `test.example.net`, `test.example.net` must not be considered for a match. 
             *  If both the Listener and HTTPRoute have specified hostnames, and none match with the criteria above, then the HTTPRoute is not accepted. The implementation must raise an 'Accepted' Condition with a status of `False` in the corresponding RouteParentStatus. 
             *  Support: Core
             */
            hostnames?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * ParentRefs references the resources (usually Gateways) that a Route wants to be attached to. Note that the referenced parent resource needs to allow this for the attachment to be complete. For Gateways, that means the Gateway needs to allow attachment from Routes of this kind and namespace. 
             *  The only kind of parent resource with "Core" support is Gateway. This API may be extended in the future to support additional kinds of parent resources such as one of the route kinds. 
             *  It is invalid to reference an identical parent more than once. It is valid to reference multiple distinct sections within the same parent resource, such as 2 Listeners within a Gateway. 
             *  It is possible to separately reference multiple distinct objects that may be collapsed by an implementation. For example, some implementations may choose to merge compatible Gateway Listeners together. If that is the case, the list of routes attached to those resources should also be merged.
             */
            parentRefs?: pulumi.Input<pulumi.Input<inputs.policy.v1alpha1.HTTPRouteSpecParentrefsArgs>[]>;
            /**
             * Rules are a list of HTTP matchers, filters and actions.
             */
            rules?: pulumi.Input<pulumi.Input<inputs.policy.v1alpha1.HTTPRouteSpecRulesArgs>[]>;
        }

        /**
         * ParentReference identifies an API object (usually a Gateway) that can be considered a parent of this resource (usually a route). The only kind of parent resource with "Core" support is Gateway. This API may be extended in the future to support additional kinds of parent resources, such as HTTPRoute. 
         *  The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid.
         */
        export interface HTTPRouteSpecParentrefsArgs {
            /**
             * Group is the group of the referent. 
             *  Support: Core
             */
            group?: pulumi.Input<string>;
            /**
             * Kind is kind of the referent. 
             *  Support: Core (Gateway) Support: Custom (Other Resources)
             */
            kind?: pulumi.Input<string>;
            /**
             * Name is the name of the referent. 
             *  Support: Core
             */
            name: pulumi.Input<string>;
            /**
             * Namespace is the namespace of the referent. When unspecified (or empty string), this refers to the local namespace of the Route. 
             *  Support: Core
             */
            namespace?: pulumi.Input<string>;
            /**
             * SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: 
             *  * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. 
             *  Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. 
             *  When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. 
             *  Support: Core
             */
            sectionName?: pulumi.Input<string>;
        }
        /**
         * httprouteSpecParentrefsArgsProvideDefaults sets the appropriate defaults for HTTPRouteSpecParentrefsArgs
         */
        export function httprouteSpecParentrefsArgsProvideDefaults(val: HTTPRouteSpecParentrefsArgs): HTTPRouteSpecParentrefsArgs {
            return {
                ...val,
                group: (val.group) ?? "policy.linkerd.io",
                kind: (val.kind) ?? "Gateway",
            };
        }

        /**
         * HTTPRouteRule defines semantics for matching an HTTP request based on conditions (matches) and processing it (filters).
         */
        export interface HTTPRouteSpecRulesArgs {
            /**
             * Filters define the filters that are applied to requests that match this rule. 
             *  The effects of ordering of multiple behaviors are currently unspecified. This can change in the future based on feedback during the alpha stage. 
             *  C"onformance-levels at this level are defined based on the type of filter": 
             *  - ALL core filters MUST be supported by all implementations. - Implementers are encouraged to support extended filters. - Implementation-specific custom filters have no API guarantees across   implementations. 
             *  Specifying a core filter multiple times has unspecified or custom conformance. 
             *  All filters are expected to be compatible with each other except for the URLRewrite and RequestRedirect filters, which may not be combined. If an implementation can not support other combinations of filters, they must clearly document that limitation. In all cases where incompatible or unsupported filters are specified, implementations MUST add a warning condition to status. 
             *  Support: Core
             */
            filters?: pulumi.Input<pulumi.Input<inputs.policy.v1alpha1.HTTPRouteSpecRulesFiltersArgs>[]>;
            /**
             * Matches define conditions used for matching the rule against incoming HTTP requests. Each match is independent, i.e. this rule will be matched if **any** one of the matches is satisfied. 
             *  For example, take the following matches configuration: 
             *  ``` matches: - path:     value: "/foo"   headers:   - name: "version"     value: "v2" - path:     value: "/v2/foo" ``` 
             *  For a request to match against this rule, a request must satisfy EITHER of the two conditions: 
             *  - path prefixed with `/foo` AND contains the header `version: v2` - path prefix of `/v2/foo` 
             *  See the documentation for HTTPRouteMatch on how to specify multiple match conditions that should be ANDed together. 
             *  If no matches are specified, the default is a prefix path match on "/", which has the effect of matching every HTTP request. 
             *  Proxy or Load Balancer routing configuration generated from HTTPRoutes MUST prioritize rules based on the following criteria, continuing on ties. Precedence must be given to the the Rule with the largest number of: 
             *  * Characters in a matching non-wildcard hostname. * Characters in a matching hostname. * Characters in a matching path. * Header matches. * Query param matches. 
             *  If ties still exist across multiple Routes, matching precedence MUST be determined in order of the following criteria, continuing on ties: 
             *  * The oldest Route based on creation timestamp. * The Route appearing first in alphabetical order by   "{namespace}/{name}". 
             *  If ties still exist within the Route that has been given precedence, matching precedence MUST be granted to the first matching rule meeting the above criteria. 
             *  When no rules matching a request have been successfully attached to the parent a request is coming from, a HTTP 404 status code MUST be returned.
             */
            matches?: pulumi.Input<pulumi.Input<inputs.policy.v1alpha1.HTTPRouteSpecRulesMatchesArgs>[]>;
        }

        /**
         * HTTPRouteFilter defines processing steps that must be completed during the request or response lifecycle. HTTPRouteFilters are meant as an extension point to express processing that may be done in Gateway implementations. Some examples include request or response modification, implementing authentication strategies, rate-limiting, and traffic shaping. API guarantee/conformance is defined based on the type of the filter.
         */
        export interface HTTPRouteSpecRulesFiltersArgs {
            /**
             * RequestHeaderModifier defines a schema for a filter that modifies request headers. 
             *  Support: Core
             */
            requestHeaderModifier?: pulumi.Input<inputs.policy.v1alpha1.HTTPRouteSpecRulesFiltersRequestheadermodifierArgs>;
            /**
             * RequestRedirect defines a schema for a filter that responds to the request with an HTTP redirection. 
             *  Support: Core
             */
            requestRedirect?: pulumi.Input<inputs.policy.v1alpha1.HTTPRouteSpecRulesFiltersRequestredirectArgs>;
            /**
             * Type identifies the type of filter to apply. As with other API fields, types are classified into three conformance levels: 
             *  - Core: Filter types and their corresponding configuration defined by   "Support: Core" in this package, e.g. "RequestHeaderModifier". All   implementations must support core filters. 
             *
             *  
             */
            type: pulumi.Input<string>;
        }
        /**
         * httprouteSpecRulesFiltersArgsProvideDefaults sets the appropriate defaults for HTTPRouteSpecRulesFiltersArgs
         */
        export function httprouteSpecRulesFiltersArgsProvideDefaults(val: HTTPRouteSpecRulesFiltersArgs): HTTPRouteSpecRulesFiltersArgs {
            return {
                ...val,
                requestRedirect: (val.requestRedirect ? pulumi.output(val.requestRedirect).apply(inputs.policy.v1alpha1.httprouteSpecRulesFiltersRequestredirectArgsProvideDefaults) : undefined),
            };
        }

        /**
         * RequestHeaderModifier defines a schema for a filter that modifies request headers. 
         *  Support: Core
         */
        export interface HTTPRouteSpecRulesFiltersRequestheadermodifierArgs {
            /**
             * Add adds the given header(s) (name, value) to the request before the action. It appends to any existing values associated with the header name. 
             *  Input:   GET /foo HTTP/1.1   "my-header": foo 
             *  Config:   add:   - name: ""my-header"     value": "bar" 
             *  Output:   GET /foo HTTP/1.1   "my-header: foo   my-header": bar
             */
            add?: pulumi.Input<pulumi.Input<inputs.policy.v1alpha1.HTTPRouteSpecRulesFiltersRequestheadermodifierAddArgs>[]>;
            /**
             * Remove the given header(s) from the HTTP request before the action. The value of Remove is a list of HTTP header names. Note that the header names are "case-insensitive (see https"://datatracker.ietf.org/doc/html/rfc2616#section-4.2). 
             *  Input:   GET /foo HTTP/1.1   my-header1: foo   my-header2: bar   my-header3: baz 
             *  Config:   remove: ["my-header1", "my-header3"] 
             *  Output:   GET /foo HTTP/1.1   my-header2: bar
             */
            remove?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Set overwrites the request with the given header (name, value) before the action. 
             *  Input:   GET /foo HTTP/1.1   "my-header": foo 
             *  Config:   set:   - name: ""my-header"     value": "bar" 
             *  Output:   GET /foo HTTP/1.1   "my-header": bar
             */
            set?: pulumi.Input<pulumi.Input<inputs.policy.v1alpha1.HTTPRouteSpecRulesFiltersRequestheadermodifierSetArgs>[]>;
        }

        /**
         * HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
         */
        export interface HTTPRouteSpecRulesFiltersRequestheadermodifierAddArgs {
            /**
             * Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). 
             *  If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, "foo" and "Foo" are considered equivalent.
             */
            name: pulumi.Input<string>;
            /**
             * Value is the value of HTTP Header to be matched.
             */
            value: pulumi.Input<string>;
        }

        /**
         * HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
         */
        export interface HTTPRouteSpecRulesFiltersRequestheadermodifierSetArgs {
            /**
             * Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). 
             *  If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, "foo" and "Foo" are considered equivalent.
             */
            name: pulumi.Input<string>;
            /**
             * Value is the value of HTTP Header to be matched.
             */
            value: pulumi.Input<string>;
        }

        /**
         * RequestRedirect defines a schema for a filter that responds to the request with an HTTP redirection. 
         *  Support: Core
         */
        export interface HTTPRouteSpecRulesFiltersRequestredirectArgs {
            /**
             * Hostname is the hostname to be used in the value of the `Location` header in the response. When empty, the hostname of the request is used. 
             *  Support: Core
             */
            hostname?: pulumi.Input<string>;
            /**
             * Port is the port to be used in the value of the `Location` header in the response. When empty, port (if specified) of the request is used. 
             *  Support: Extended
             */
            port?: pulumi.Input<number>;
            /**
             * Scheme is the scheme to be used in the value of the `Location` header in the response. When empty, the scheme of the request is used. 
             *  Support: Extended
             */
            scheme?: pulumi.Input<string>;
            /**
             * StatusCode is the HTTP status code to be used in response. 
             *  Support: Core
             */
            statusCode?: pulumi.Input<number>;
        }
        /**
         * httprouteSpecRulesFiltersRequestredirectArgsProvideDefaults sets the appropriate defaults for HTTPRouteSpecRulesFiltersRequestredirectArgs
         */
        export function httprouteSpecRulesFiltersRequestredirectArgsProvideDefaults(val: HTTPRouteSpecRulesFiltersRequestredirectArgs): HTTPRouteSpecRulesFiltersRequestredirectArgs {
            return {
                ...val,
                statusCode: (val.statusCode) ?? 302,
            };
        }

        /**
         * HTTPRouteMatch defines the predicate used to match requests to a given action. Multiple match types are ANDed together, i.e. the match will evaluate to true only if all conditions are satisfied. 
         *  For example, the match below will match a HTTP request only if its path starts with `/foo` AND it contains the `version: v1` header: 
         *  ``` match:   path:     value: "/foo"   headers:   - name: "version"     value "v1" ```
         */
        export interface HTTPRouteSpecRulesMatchesArgs {
            /**
             * Headers specifies HTTP request header matchers. Multiple match values are ANDed together, meaning, a request must match all the specified headers to select the route.
             */
            headers?: pulumi.Input<pulumi.Input<inputs.policy.v1alpha1.HTTPRouteSpecRulesMatchesHeadersArgs>[]>;
            /**
             * Method specifies HTTP method matcher. When specified, this route will be matched only if the request has the specified method. 
             *  Support: Extended
             */
            method?: pulumi.Input<string>;
            /**
             * Path specifies a HTTP request path matcher. If this field is not specified, a default prefix match on the "/" path is provided.
             */
            path?: pulumi.Input<inputs.policy.v1alpha1.HTTPRouteSpecRulesMatchesPathArgs>;
            /**
             * QueryParams specifies HTTP query parameter matchers. Multiple match values are ANDed together, meaning, a request must match all the specified query parameters to select the route.
             */
            queryParams?: pulumi.Input<pulumi.Input<inputs.policy.v1alpha1.HTTPRouteSpecRulesMatchesQueryparamsArgs>[]>;
        }
        /**
         * httprouteSpecRulesMatchesArgsProvideDefaults sets the appropriate defaults for HTTPRouteSpecRulesMatchesArgs
         */
        export function httprouteSpecRulesMatchesArgsProvideDefaults(val: HTTPRouteSpecRulesMatchesArgs): HTTPRouteSpecRulesMatchesArgs {
            return {
                ...val,
                path: (val.path ? pulumi.output(val.path).apply(inputs.policy.v1alpha1.httprouteSpecRulesMatchesPathArgsProvideDefaults) : undefined),
            };
        }

        /**
         * HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request headers.
         */
        export interface HTTPRouteSpecRulesMatchesHeadersArgs {
            /**
             * Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). 
             *  If multiple entries specify equivalent header names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, "foo" and "Foo" are considered equivalent. 
             *  When a header is repeated in an HTTP request, it is "implementation-specific behavior as to how this is represented. Generally, proxies should follow the guidance from the RFC: https"://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding processing a repeated header, with special handling for "Set-Cookie".
             */
            name: pulumi.Input<string>;
            /**
             * Type specifies how to match against the value of the header. 
             *  Support: Core (Exact) 
             *  Support: Custom (RegularExpression) 
             *  Since RegularExpression HeaderMatchType has custom conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect.
             */
            type?: pulumi.Input<string>;
            /**
             * Value is the value of HTTP Header to be matched.
             */
            value: pulumi.Input<string>;
        }
        /**
         * httprouteSpecRulesMatchesHeadersArgsProvideDefaults sets the appropriate defaults for HTTPRouteSpecRulesMatchesHeadersArgs
         */
        export function httprouteSpecRulesMatchesHeadersArgsProvideDefaults(val: HTTPRouteSpecRulesMatchesHeadersArgs): HTTPRouteSpecRulesMatchesHeadersArgs {
            return {
                ...val,
                type: (val.type) ?? "Exact",
            };
        }

        /**
         * Path specifies a HTTP request path matcher. If this field is not specified, a default prefix match on the "/" path is provided.
         */
        export interface HTTPRouteSpecRulesMatchesPathArgs {
            /**
             * Type specifies how to match against the path Value. 
             *  Support: Core (Exact, PathPrefix) 
             *  Support: Custom (RegularExpression)
             */
            type?: pulumi.Input<string>;
            /**
             * Value of the HTTP path to match against.
             */
            value?: pulumi.Input<string>;
        }
        /**
         * httprouteSpecRulesMatchesPathArgsProvideDefaults sets the appropriate defaults for HTTPRouteSpecRulesMatchesPathArgs
         */
        export function httprouteSpecRulesMatchesPathArgsProvideDefaults(val: HTTPRouteSpecRulesMatchesPathArgs): HTTPRouteSpecRulesMatchesPathArgs {
            return {
                ...val,
                type: (val.type) ?? "PathPrefix",
                value: (val.value) ?? "/",
            };
        }

        /**
         * HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP query parameters.
         */
        export interface HTTPRouteSpecRulesMatchesQueryparamsArgs {
            /**
             * Name is the name of the HTTP query param to be matched. This must be an exact string match. (See https://tools.ietf.org/html/rfc7230#section-2.7.3).
             */
            name: pulumi.Input<string>;
            /**
             * Type specifies how to match against the value of the query parameter. 
             *  Support: Extended (Exact) 
             *  Support: Custom (RegularExpression) 
             *  Since RegularExpression QueryParamMatchType has custom conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect.
             */
            type?: pulumi.Input<string>;
            /**
             * Value is the value of HTTP query param to be matched.
             */
            value: pulumi.Input<string>;
        }
        /**
         * httprouteSpecRulesMatchesQueryparamsArgsProvideDefaults sets the appropriate defaults for HTTPRouteSpecRulesMatchesQueryparamsArgs
         */
        export function httprouteSpecRulesMatchesQueryparamsArgsProvideDefaults(val: HTTPRouteSpecRulesMatchesQueryparamsArgs): HTTPRouteSpecRulesMatchesQueryparamsArgs {
            return {
                ...val,
                type: (val.type) ?? "Exact",
            };
        }

        /**
         * Status defines the current state of HTTPRoute.
         */
        export interface HTTPRouteStatusArgs {
            /**
             * Parents is a list of parent resources (usually Gateways) that are associated with the route, and the status of the route with respect to each parent. When this route attaches to a parent, the controller that manages the parent must add an entry to this list when the controller first sees the route and should update the entry as appropriate when the route or gateway is modified. 
             *  Note that parent references that cannot be resolved by an implementation of this API will not be added to this list. Implementations of this API can only populate Route status for the Gateways/parent resources they are responsible for. 
             *  A maximum of 32 Gateways will be represented in this list. An empty list means the route has not been attached to any Gateway.
             */
            parents: pulumi.Input<pulumi.Input<inputs.policy.v1alpha1.HTTPRouteStatusParentsArgs>[]>;
        }

        /**
         * RouteParentStatus describes the status of a route with respect to an associated Parent.
         */
        export interface HTTPRouteStatusParentsArgs {
            /**
             * Conditions describes the status of the route with respect to the Gateway. Note that the route's availability is also subject to the Gateway's own status conditions and listener status. 
             *  If the Route's ParentRef specifies an existing Gateway that supports Routes of this kind AND that Gateway's controller has sufficient access, then that Gateway's controller MUST set the "Accepted" condition on the Route, to indicate whether the route has been accepted or rejected by the Gateway, and why. 
             *  A Route MUST be considered "Accepted" if at least one of the Route's rules is implemented by the Gateway. 
             *  There are a number of cases where the "Accepted" condition may not be set due to lack of controller visibility, that includes when: 
             *  * The Route refers to a non-existent parent. * The Route is of a type that the controller does not support. * The Route is in a namespace the the controller does not have access to.
             */
            conditions?: pulumi.Input<pulumi.Input<inputs.policy.v1alpha1.HTTPRouteStatusParentsConditionsArgs>[]>;
            /**
             * ControllerName is a domain/path string that indicates the name of the controller that wrote this status. This corresponds with the controllerName field on GatewayClass. 
             *  Example: "example.net/gateway-controller". 
             *  The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are valid Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). 
             *  Controllers MUST populate this field when writing status. Controllers should ensure that entries to status populated with their ControllerName are cleaned up when they are no longer necessary.
             */
            controllerName: pulumi.Input<string>;
            /**
             * ParentRef corresponds with a ParentRef in the spec that this RouteParentStatus struct describes the status of.
             */
            parentRef: pulumi.Input<inputs.policy.v1alpha1.HTTPRouteStatusParentsParentrefArgs>;
        }
        /**
         * httprouteStatusParentsArgsProvideDefaults sets the appropriate defaults for HTTPRouteStatusParentsArgs
         */
        export function httprouteStatusParentsArgsProvideDefaults(val: HTTPRouteStatusParentsArgs): HTTPRouteStatusParentsArgs {
            return {
                ...val,
                parentRef: pulumi.output(val.parentRef).apply(inputs.policy.v1alpha1.httprouteStatusParentsParentrefArgsProvideDefaults),
            };
        }

        /**
         * Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: "Available", "Progressing", and "Degraded"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"` 
         *      // other fields }
         */
        export interface HTTPRouteStatusParentsConditionsArgs {
            /**
             * lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
             */
            lastTransitionTime: pulumi.Input<string>;
            /**
             * message is a human readable message indicating details about the transition. This may be an empty string.
             */
            message: pulumi.Input<string>;
            /**
             * observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
             */
            observedGeneration?: pulumi.Input<number>;
            /**
             * reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
             */
            reason: pulumi.Input<string>;
            /**
             * status of the condition, one of True, False, Unknown.
             */
            status: pulumi.Input<string>;
            /**
             * type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
             */
            type: pulumi.Input<string>;
        }

        /**
         * ParentRef corresponds with a ParentRef in the spec that this RouteParentStatus struct describes the status of.
         */
        export interface HTTPRouteStatusParentsParentrefArgs {
            /**
             * Group is the group of the referent. 
             *  Support: Core
             */
            group?: pulumi.Input<string>;
            /**
             * Kind is kind of the referent. 
             *  Support: Core (Gateway) Support: Custom (Other Resources)
             */
            kind?: pulumi.Input<string>;
            /**
             * Name is the name of the referent. 
             *  Support: Core
             */
            name: pulumi.Input<string>;
            /**
             * Namespace is the namespace of the referent. When unspecified (or empty string), this refers to the local namespace of the Route. 
             *  Support: Core
             */
            namespace?: pulumi.Input<string>;
            /**
             * SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: 
             *  * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. 
             *  Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. 
             *  When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. 
             *  Support: Core
             */
            sectionName?: pulumi.Input<string>;
        }
        /**
         * httprouteStatusParentsParentrefArgsProvideDefaults sets the appropriate defaults for HTTPRouteStatusParentsParentrefArgs
         */
        export function httprouteStatusParentsParentrefArgsProvideDefaults(val: HTTPRouteStatusParentsParentrefArgs): HTTPRouteStatusParentsParentrefArgs {
            return {
                ...val,
                group: (val.group) ?? "policy.linkerd.io",
                kind: (val.kind) ?? "Gateway",
            };
        }

        /**
         * NetworkAuthentication defines a list of authenticated client networks to be referenced by an `AuthorizationPolicy`. If a client connection originates from ANY of the of the provided networks, the connection is considered authenticated.
         */
        export interface NetworkAuthenticationSpecArgs {
            networks: pulumi.Input<pulumi.Input<inputs.policy.v1alpha1.NetworkAuthenticationSpecNetworksArgs>[]>;
        }

        export interface NetworkAuthenticationSpecNetworksArgs {
            /**
             * The CIDR of the network to be authorized.
             */
            cidr: pulumi.Input<string>;
            /**
             * A list of IP networks/addresses not to be included in the above `cidr`.
             */
            except?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Authorizes clients to communicate with Linkerd-proxied servers.
         */
        export interface ServerAuthorizationSpecArgs {
            /**
             * Describes clients authorized to access a server.
             */
            client: pulumi.Input<inputs.policy.v1alpha1.ServerAuthorizationSpecClientArgs>;
            /**
             * Identifies servers in the same namespace for which this authorization applies.
             * Only one of `name` or `selector` may be specified.
             */
            server: any;
        }

        /**
         * Describes clients authorized to access a server.
         */
        export interface ServerAuthorizationSpecClientArgs {
            meshTLS?: pulumi.Input<inputs.policy.v1alpha1.ServerAuthorizationSpecClientMeshtlsArgs>;
            /**
             * Limits the client IP addresses to which this authorization applies. If unset, the server chooses a default (typically, all IPs or the cluster's pod network).
             */
            networks?: pulumi.Input<pulumi.Input<inputs.policy.v1alpha1.ServerAuthorizationSpecClientNetworksArgs>[]>;
            /**
             * Authorizes unauthenticated clients to access a server.
             */
            unauthenticated?: pulumi.Input<boolean>;
        }

        export interface ServerAuthorizationSpecClientMeshtlsArgs {
            /**
             * Authorizes clients with the provided proxy identity strings (as provided via MTLS)
             * The `*` prefix can be used to match all identities in a domain. An identity string of `*` indicates that all authentication clients are authorized.
             */
            identities?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Authorizes clients with the provided proxy identity service accounts (as provided via MTLS)
             */
            serviceAccounts?: pulumi.Input<pulumi.Input<inputs.policy.v1alpha1.ServerAuthorizationSpecClientMeshtlsServiceaccountsArgs>[]>;
            /**
             * Indicates that no client identity is required for communication.
             * This is mostly important for the identity controller, which must terminate TLS connections from clients that do not yet have a certificate.
             */
            unauthenticatedTLS?: pulumi.Input<boolean>;
        }

        export interface ServerAuthorizationSpecClientMeshtlsServiceaccountsArgs {
            /**
             * The ServiceAccount's name.
             */
            name: pulumi.Input<string>;
            /**
             * The ServiceAccount's namespace. If unset, the authorization's namespace is used.
             */
            namespace?: pulumi.Input<string>;
        }

        export interface ServerAuthorizationSpecClientNetworksArgs {
            cidr: pulumi.Input<string>;
            except?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ServerSpecArgs {
            /**
             * Selects pods in the same namespace.
             */
            podSelector: any;
            /**
             * A port name or number. Must exist in a pod spec.
             */
            port: pulumi.Input<number | string>;
            /**
             * Configures protocol discovery for inbound connections.
             * Supersedes the `config.linkerd.io/opaque-ports` annotation.
             */
            proxyProtocol?: pulumi.Input<string>;
        }
        /**
         * serverSpecArgsProvideDefaults sets the appropriate defaults for ServerSpecArgs
         */
        export function serverSpecArgsProvideDefaults(val: ServerSpecArgs): ServerSpecArgs {
            return {
                ...val,
                proxyProtocol: (val.proxyProtocol) ?? "unknown",
            };
        }
    }

    export namespace v1beta1 {
        /**
         * Spec defines the desired state of HTTPRoute.
         */
        export interface HTTPRouteSpecArgs {
            /**
             * Hostnames defines a set of hostname that should match against the HTTP Host header to select a HTTPRoute to process the request. This matches the RFC 1123 definition of a hostname with 2 notable exceptions: 
             *  1. IPs are not allowed. 2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard    label must appear by itself as the first label. 
             *  If a hostname is specified by both the Listener and HTTPRoute, there must be at least one intersecting hostname for the HTTPRoute to be attached to the Listener. For example: 
             *  * A Listener with `test.example.com` as the hostname matches HTTPRoutes   that have either not specified any hostnames, or have specified at   least one of `test.example.com` or `*.example.com`. * A Listener with `*.example.com` as the hostname matches HTTPRoutes   that have either not specified any hostnames or have specified at least   one hostname that matches the Listener hostname. For example,   `*.example.com`, `test.example.com`, and `foo.test.example.com` would   all match. On the other hand, `example.com` and `test.example.net` would   not match. 
             *  Hostnames that are prefixed with a wildcard label (`*.`) are interpreted as a suffix match. That means that a match for `*.example.com` would match both `test.example.com`, and `foo.test.example.com`, but not `example.com`. 
             *  If both the Listener and HTTPRoute have specified hostnames, any HTTPRoute hostnames that do not match the Listener hostname MUST be ignored. For example, if a Listener specified `*.example.com`, and the HTTPRoute specified `test.example.com` and `test.example.net`, `test.example.net` must not be considered for a match. 
             *  If both the Listener and HTTPRoute have specified hostnames, and none match with the criteria above, then the HTTPRoute is not accepted. The implementation must raise an 'Accepted' Condition with a status of `False` in the corresponding RouteParentStatus. 
             *  Support: Core
             */
            hostnames?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * ParentRefs references the resources (usually Gateways) that a Route wants to be attached to. Note that the referenced parent resource needs to allow this for the attachment to be complete. For Gateways, that means the Gateway needs to allow attachment from Routes of this kind and namespace. 
             *  The only kind of parent resource with "Core" support is Gateway. This API may be extended in the future to support additional kinds of parent resources such as one of the route kinds. 
             *  It is invalid to reference an identical parent more than once. It is valid to reference multiple distinct sections within the same parent resource, such as 2 Listeners within a Gateway. 
             *  It is possible to separately reference multiple distinct objects that may be collapsed by an implementation. For example, some implementations may choose to merge compatible Gateway Listeners together. If that is the case, the list of routes attached to those resources should also be merged.
             */
            parentRefs?: pulumi.Input<pulumi.Input<inputs.policy.v1beta1.HTTPRouteSpecParentrefsArgs>[]>;
            /**
             * Rules are a list of HTTP matchers, filters and actions.
             */
            rules?: pulumi.Input<pulumi.Input<inputs.policy.v1beta1.HTTPRouteSpecRulesArgs>[]>;
        }

        /**
         * ParentReference identifies an API object (usually a Gateway) that can be considered a parent of this resource (usually a route). The only kind of parent resource with "Core" support is Gateway. This API may be extended in the future to support additional kinds of parent resources, such as HTTPRoute. 
         *  The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid.
         */
        export interface HTTPRouteSpecParentrefsArgs {
            /**
             * Group is the group of the referent. 
             *  Support: Core
             */
            group?: pulumi.Input<string>;
            /**
             * Kind is kind of the referent. 
             *  Support: Core (Gateway) Support: Custom (Other Resources)
             */
            kind?: pulumi.Input<string>;
            /**
             * Name is the name of the referent. 
             *  Support: Core
             */
            name: pulumi.Input<string>;
            /**
             * Namespace is the namespace of the referent. When unspecified (or empty string), this refers to the local namespace of the Route. 
             *  Support: Core
             */
            namespace?: pulumi.Input<string>;
            /**
             * SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: 
             *  * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. 
             *  Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. 
             *  When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. 
             *  Support: Core
             */
            sectionName?: pulumi.Input<string>;
        }
        /**
         * httprouteSpecParentrefsArgsProvideDefaults sets the appropriate defaults for HTTPRouteSpecParentrefsArgs
         */
        export function httprouteSpecParentrefsArgsProvideDefaults(val: HTTPRouteSpecParentrefsArgs): HTTPRouteSpecParentrefsArgs {
            return {
                ...val,
                group: (val.group) ?? "policy.linkerd.io",
                kind: (val.kind) ?? "Gateway",
            };
        }

        /**
         * HTTPRouteRule defines semantics for matching an HTTP request based on conditions (matches) and processing it (filters).
         */
        export interface HTTPRouteSpecRulesArgs {
            /**
             * Filters define the filters that are applied to requests that match this rule. 
             *  The effects of ordering of multiple behaviors are currently unspecified. This can change in the future based on feedback during the alpha stage. 
             *  C"onformance-levels at this level are defined based on the type of filter": 
             *  - ALL core filters MUST be supported by all implementations. - Implementers are encouraged to support extended filters. - Implementation-specific custom filters have no API guarantees across   implementations. 
             *  Specifying a core filter multiple times has unspecified or custom conformance. 
             *  All filters are expected to be compatible with each other except for the URLRewrite and RequestRedirect filters, which may not be combined. If an implementation can not support other combinations of filters, they must clearly document that limitation. In all cases where incompatible or unsupported filters are specified, implementations MUST add a warning condition to status. 
             *  Support: Core
             */
            filters?: pulumi.Input<pulumi.Input<inputs.policy.v1beta1.HTTPRouteSpecRulesFiltersArgs>[]>;
            /**
             * Matches define conditions used for matching the rule against incoming HTTP requests. Each match is independent, i.e. this rule will be matched if **any** one of the matches is satisfied. 
             *  For example, take the following matches configuration: 
             *  ``` matches: - path:     value: "/foo"   headers:   - name: "version"     value: "v2" - path:     value: "/v2/foo" ``` 
             *  For a request to match against this rule, a request must satisfy EITHER of the two conditions: 
             *  - path prefixed with `/foo` AND contains the header `version: v2` - path prefix of `/v2/foo` 
             *  See the documentation for HTTPRouteMatch on how to specify multiple match conditions that should be ANDed together. 
             *  If no matches are specified, the default is a prefix path match on "/", which has the effect of matching every HTTP request. 
             *  Proxy or Load Balancer routing configuration generated from HTTPRoutes MUST prioritize rules based on the following criteria, continuing on ties. Precedence must be given to the the Rule with the largest number of: 
             *  * Characters in a matching non-wildcard hostname. * Characters in a matching hostname. * Characters in a matching path. * Header matches. * Query param matches. 
             *  If ties still exist across multiple Routes, matching precedence MUST be determined in order of the following criteria, continuing on ties: 
             *  * The oldest Route based on creation timestamp. * The Route appearing first in alphabetical order by   "{namespace}/{name}". 
             *  If ties still exist within the Route that has been given precedence, matching precedence MUST be granted to the first matching rule meeting the above criteria. 
             *  When no rules matching a request have been successfully attached to the parent a request is coming from, a HTTP 404 status code MUST be returned.
             */
            matches?: pulumi.Input<pulumi.Input<inputs.policy.v1beta1.HTTPRouteSpecRulesMatchesArgs>[]>;
        }

        /**
         * HTTPRouteFilter defines processing steps that must be completed during the request or response lifecycle. HTTPRouteFilters are meant as an extension point to express processing that may be done in Gateway implementations. Some examples include request or response modification, implementing authentication strategies, rate-limiting, and traffic shaping. API guarantee/conformance is defined based on the type of the filter.
         */
        export interface HTTPRouteSpecRulesFiltersArgs {
            /**
             * RequestHeaderModifier defines a schema for a filter that modifies request headers. 
             *  Support: Core
             */
            requestHeaderModifier?: pulumi.Input<inputs.policy.v1beta1.HTTPRouteSpecRulesFiltersRequestheadermodifierArgs>;
            /**
             * RequestRedirect defines a schema for a filter that responds to the request with an HTTP redirection. 
             *  Support: Core
             */
            requestRedirect?: pulumi.Input<inputs.policy.v1beta1.HTTPRouteSpecRulesFiltersRequestredirectArgs>;
            /**
             * Type identifies the type of filter to apply. As with other API fields, types are classified into three conformance levels: 
             *  - Core: Filter types and their corresponding configuration defined by   "Support: Core" in this package, e.g. "RequestHeaderModifier".
             */
            type: pulumi.Input<string>;
        }
        /**
         * httprouteSpecRulesFiltersArgsProvideDefaults sets the appropriate defaults for HTTPRouteSpecRulesFiltersArgs
         */
        export function httprouteSpecRulesFiltersArgsProvideDefaults(val: HTTPRouteSpecRulesFiltersArgs): HTTPRouteSpecRulesFiltersArgs {
            return {
                ...val,
                requestRedirect: (val.requestRedirect ? pulumi.output(val.requestRedirect).apply(inputs.policy.v1beta1.httprouteSpecRulesFiltersRequestredirectArgsProvideDefaults) : undefined),
            };
        }

        /**
         * RequestHeaderModifier defines a schema for a filter that modifies request headers. 
         *  Support: Core
         */
        export interface HTTPRouteSpecRulesFiltersRequestheadermodifierArgs {
            /**
             * Add adds the given header(s) (name, value) to the request before the action. It appends to any existing values associated with the header name. 
             *  Input:   GET /foo HTTP/1.1   "my-header": foo 
             *  Config:   add:   - name: ""my-header"     value": "bar" 
             *  Output:   GET /foo HTTP/1.1   "my-header: foo   my-header": bar
             */
            add?: pulumi.Input<pulumi.Input<inputs.policy.v1beta1.HTTPRouteSpecRulesFiltersRequestheadermodifierAddArgs>[]>;
            /**
             * Remove the given header(s) from the HTTP request before the action. The value of Remove is a list of HTTP header names. Note that the header names are "case-insensitive (see https"://datatracker.ietf.org/doc/html/rfc2616#section-4.2). 
             *  Input:   GET /foo HTTP/1.1   my-header1: foo   my-header2: bar   my-header3: baz 
             *  Config:   remove: ["my-header1", "my-header3"] 
             *  Output:   GET /foo HTTP/1.1   my-header2: bar
             */
            remove?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Set overwrites the request with the given header (name, value) before the action. 
             *  Input:   GET /foo HTTP/1.1   "my-header": foo 
             *  Config:   set:   - name: ""my-header"     value": "bar" 
             *  Output:   GET /foo HTTP/1.1   "my-header": bar
             */
            set?: pulumi.Input<pulumi.Input<inputs.policy.v1beta1.HTTPRouteSpecRulesFiltersRequestheadermodifierSetArgs>[]>;
        }

        /**
         * HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
         */
        export interface HTTPRouteSpecRulesFiltersRequestheadermodifierAddArgs {
            /**
             * Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). 
             *  If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, "foo" and "Foo" are considered equivalent.
             */
            name: pulumi.Input<string>;
            /**
             * Value is the value of HTTP Header to be matched.
             */
            value: pulumi.Input<string>;
        }

        /**
         * HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
         */
        export interface HTTPRouteSpecRulesFiltersRequestheadermodifierSetArgs {
            /**
             * Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). 
             *  If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, "foo" and "Foo" are considered equivalent.
             */
            name: pulumi.Input<string>;
            /**
             * Value is the value of HTTP Header to be matched.
             */
            value: pulumi.Input<string>;
        }

        /**
         * RequestRedirect defines a schema for a filter that responds to the request with an HTTP redirection. 
         *  Support: Core
         */
        export interface HTTPRouteSpecRulesFiltersRequestredirectArgs {
            /**
             * Hostname is the hostname to be used in the value of the `Location` header in the response. When empty, the hostname of the request is used. 
             *  Support: Core
             */
            hostname?: pulumi.Input<string>;
            /**
             * Port is the port to be used in the value of the `Location` header in the response. When empty, port (if specified) of the request is used. 
             *  Support: Extended
             */
            port?: pulumi.Input<number>;
            /**
             * Scheme is the scheme to be used in the value of the `Location` header in the response. When empty, the scheme of the request is used. 
             *  Support: Extended
             */
            scheme?: pulumi.Input<string>;
            /**
             * StatusCode is the HTTP status code to be used in response. 
             *  Support: Core
             */
            statusCode?: pulumi.Input<number>;
        }
        /**
         * httprouteSpecRulesFiltersRequestredirectArgsProvideDefaults sets the appropriate defaults for HTTPRouteSpecRulesFiltersRequestredirectArgs
         */
        export function httprouteSpecRulesFiltersRequestredirectArgsProvideDefaults(val: HTTPRouteSpecRulesFiltersRequestredirectArgs): HTTPRouteSpecRulesFiltersRequestredirectArgs {
            return {
                ...val,
                statusCode: (val.statusCode) ?? 302,
            };
        }

        /**
         * HTTPRouteMatch defines the predicate used to match requests to a given action. Multiple match types are ANDed together, i.e. the match will evaluate to true only if all conditions are satisfied. 
         *  For example, the match below will match a HTTP request only if its path starts with `/foo` AND it contains the `version: v1` header: 
         *  ``` match:   path:     value: "/foo"   headers:   - name: "version"     value "v1" ```
         */
        export interface HTTPRouteSpecRulesMatchesArgs {
            /**
             * Headers specifies HTTP request header matchers. Multiple match values are ANDed together, meaning, a request must match all the specified headers to select the route.
             */
            headers?: pulumi.Input<pulumi.Input<inputs.policy.v1beta1.HTTPRouteSpecRulesMatchesHeadersArgs>[]>;
            /**
             * Method specifies HTTP method matcher. When specified, this route will be matched only if the request has the specified method. 
             *  Support: Extended
             */
            method?: pulumi.Input<string>;
            /**
             * Path specifies a HTTP request path matcher. If this field is not specified, a default prefix match on the "/" path is provided.
             */
            path?: pulumi.Input<inputs.policy.v1beta1.HTTPRouteSpecRulesMatchesPathArgs>;
            /**
             * QueryParams specifies HTTP query parameter matchers. Multiple match values are ANDed together, meaning, a request must match all the specified query parameters to select the route.
             */
            queryParams?: pulumi.Input<pulumi.Input<inputs.policy.v1beta1.HTTPRouteSpecRulesMatchesQueryparamsArgs>[]>;
        }
        /**
         * httprouteSpecRulesMatchesArgsProvideDefaults sets the appropriate defaults for HTTPRouteSpecRulesMatchesArgs
         */
        export function httprouteSpecRulesMatchesArgsProvideDefaults(val: HTTPRouteSpecRulesMatchesArgs): HTTPRouteSpecRulesMatchesArgs {
            return {
                ...val,
                path: (val.path ? pulumi.output(val.path).apply(inputs.policy.v1beta1.httprouteSpecRulesMatchesPathArgsProvideDefaults) : undefined),
            };
        }

        /**
         * HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request headers.
         */
        export interface HTTPRouteSpecRulesMatchesHeadersArgs {
            /**
             * Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). 
             *  If multiple entries specify equivalent header names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, "foo" and "Foo" are considered equivalent. 
             *  When a header is repeated in an HTTP request, it is "implementation-specific behavior as to how this is represented. Generally, proxies should follow the guidance from the RFC: https"://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding processing a repeated header, with special handling for "Set-Cookie".
             */
            name: pulumi.Input<string>;
            /**
             * Type specifies how to match against the value of the header. 
             *  Support: Core (Exact) 
             *  Support: Custom (RegularExpression) 
             *  Since RegularExpression HeaderMatchType has custom conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect.
             */
            type?: pulumi.Input<string>;
            /**
             * Value is the value of HTTP Header to be matched.
             */
            value: pulumi.Input<string>;
        }
        /**
         * httprouteSpecRulesMatchesHeadersArgsProvideDefaults sets the appropriate defaults for HTTPRouteSpecRulesMatchesHeadersArgs
         */
        export function httprouteSpecRulesMatchesHeadersArgsProvideDefaults(val: HTTPRouteSpecRulesMatchesHeadersArgs): HTTPRouteSpecRulesMatchesHeadersArgs {
            return {
                ...val,
                type: (val.type) ?? "Exact",
            };
        }

        /**
         * Path specifies a HTTP request path matcher. If this field is not specified, a default prefix match on the "/" path is provided.
         */
        export interface HTTPRouteSpecRulesMatchesPathArgs {
            /**
             * Type specifies how to match against the path Value. 
             *  Support: Core (Exact, PathPrefix) 
             *  Support: Custom (RegularExpression)
             */
            type?: pulumi.Input<string>;
            /**
             * Value of the HTTP path to match against.
             */
            value?: pulumi.Input<string>;
        }
        /**
         * httprouteSpecRulesMatchesPathArgsProvideDefaults sets the appropriate defaults for HTTPRouteSpecRulesMatchesPathArgs
         */
        export function httprouteSpecRulesMatchesPathArgsProvideDefaults(val: HTTPRouteSpecRulesMatchesPathArgs): HTTPRouteSpecRulesMatchesPathArgs {
            return {
                ...val,
                type: (val.type) ?? "PathPrefix",
                value: (val.value) ?? "/",
            };
        }

        /**
         * HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP query parameters.
         */
        export interface HTTPRouteSpecRulesMatchesQueryparamsArgs {
            /**
             * Name is the name of the HTTP query param to be matched. This must be an exact string match. (See https://tools.ietf.org/html/rfc7230#section-2.7.3).
             */
            name: pulumi.Input<string>;
            /**
             * Type specifies how to match against the value of the query parameter. 
             *  Support: Extended (Exact) 
             *  Support: Custom (RegularExpression) 
             *  Since RegularExpression QueryParamMatchType has custom conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect.
             */
            type?: pulumi.Input<string>;
            /**
             * Value is the value of HTTP query param to be matched.
             */
            value: pulumi.Input<string>;
        }
        /**
         * httprouteSpecRulesMatchesQueryparamsArgsProvideDefaults sets the appropriate defaults for HTTPRouteSpecRulesMatchesQueryparamsArgs
         */
        export function httprouteSpecRulesMatchesQueryparamsArgsProvideDefaults(val: HTTPRouteSpecRulesMatchesQueryparamsArgs): HTTPRouteSpecRulesMatchesQueryparamsArgs {
            return {
                ...val,
                type: (val.type) ?? "Exact",
            };
        }

        /**
         * Status defines the current state of HTTPRoute.
         */
        export interface HTTPRouteStatusArgs {
            /**
             * Parents is a list of parent resources (usually Gateways) that are associated with the route, and the status of the route with respect to each parent. When this route attaches to a parent, the controller that manages the parent must add an entry to this list when the controller first sees the route and should update the entry as appropriate when the route or gateway is modified. 
             *  Note that parent references that cannot be resolved by an implementation of this API will not be added to this list. Implementations of this API can only populate Route status for the Gateways/parent resources they are responsible for. 
             *  A maximum of 32 Gateways will be represented in this list. An empty list means the route has not been attached to any Gateway.
             */
            parents: pulumi.Input<pulumi.Input<inputs.policy.v1beta1.HTTPRouteStatusParentsArgs>[]>;
        }

        /**
         * RouteParentStatus describes the status of a route with respect to an associated Parent.
         */
        export interface HTTPRouteStatusParentsArgs {
            /**
             * Conditions describes the status of the route with respect to the Gateway. Note that the route's availability is also subject to the Gateway's own status conditions and listener status. 
             *  If the Route's ParentRef specifies an existing Gateway that supports Routes of this kind AND that Gateway's controller has sufficient access, then that Gateway's controller MUST set the "Accepted" condition on the Route, to indicate whether the route has been accepted or rejected by the Gateway, and why. 
             *  A Route MUST be considered "Accepted" if at least one of the Route's rules is implemented by the Gateway. 
             *  There are a number of cases where the "Accepted" condition may not be set due to lack of controller visibility, that includes when: 
             *  * The Route refers to a non-existent parent. * The Route is of a type that the controller does not support. * The Route is in a namespace the the controller does not have access to.
             */
            conditions?: pulumi.Input<pulumi.Input<inputs.policy.v1beta1.HTTPRouteStatusParentsConditionsArgs>[]>;
            /**
             * ControllerName is a domain/path string that indicates the name of the controller that wrote this status. This corresponds with the controllerName field on GatewayClass. 
             *  Example: "example.net/gateway-controller". 
             *  The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are valid Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). 
             *  Controllers MUST populate this field when writing status. Controllers should ensure that entries to status populated with their ControllerName are cleaned up when they are no longer necessary.
             */
            controllerName: pulumi.Input<string>;
            /**
             * ParentRef corresponds with a ParentRef in the spec that this RouteParentStatus struct describes the status of.
             */
            parentRef: pulumi.Input<inputs.policy.v1beta1.HTTPRouteStatusParentsParentrefArgs>;
        }
        /**
         * httprouteStatusParentsArgsProvideDefaults sets the appropriate defaults for HTTPRouteStatusParentsArgs
         */
        export function httprouteStatusParentsArgsProvideDefaults(val: HTTPRouteStatusParentsArgs): HTTPRouteStatusParentsArgs {
            return {
                ...val,
                parentRef: pulumi.output(val.parentRef).apply(inputs.policy.v1beta1.httprouteStatusParentsParentrefArgsProvideDefaults),
            };
        }

        /**
         * Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: "Available", "Progressing", and "Degraded"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"` 
         *      // other fields }
         */
        export interface HTTPRouteStatusParentsConditionsArgs {
            /**
             * lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
             */
            lastTransitionTime: pulumi.Input<string>;
            /**
             * message is a human readable message indicating details about the transition. This may be an empty string.
             */
            message: pulumi.Input<string>;
            /**
             * observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
             */
            observedGeneration?: pulumi.Input<number>;
            /**
             * reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
             */
            reason: pulumi.Input<string>;
            /**
             * status of the condition, one of True, False, Unknown.
             */
            status: pulumi.Input<string>;
            /**
             * type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
             */
            type: pulumi.Input<string>;
        }

        /**
         * ParentRef corresponds with a ParentRef in the spec that this RouteParentStatus struct describes the status of.
         */
        export interface HTTPRouteStatusParentsParentrefArgs {
            /**
             * Group is the group of the referent. 
             *  Support: Core
             */
            group?: pulumi.Input<string>;
            /**
             * Kind is kind of the referent. 
             *  Support: Core (Gateway) Support: Custom (Other Resources)
             */
            kind?: pulumi.Input<string>;
            /**
             * Name is the name of the referent. 
             *  Support: Core
             */
            name: pulumi.Input<string>;
            /**
             * Namespace is the namespace of the referent. When unspecified (or empty string), this refers to the local namespace of the Route. 
             *  Support: Core
             */
            namespace?: pulumi.Input<string>;
            /**
             * SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: 
             *  * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. 
             *  Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. 
             *  When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. 
             *  Support: Core
             */
            sectionName?: pulumi.Input<string>;
        }
        /**
         * httprouteStatusParentsParentrefArgsProvideDefaults sets the appropriate defaults for HTTPRouteStatusParentsParentrefArgs
         */
        export function httprouteStatusParentsParentrefArgsProvideDefaults(val: HTTPRouteStatusParentsParentrefArgs): HTTPRouteStatusParentsParentrefArgs {
            return {
                ...val,
                group: (val.group) ?? "policy.linkerd.io",
                kind: (val.kind) ?? "Gateway",
            };
        }

        /**
         * Authorizes clients to communicate with Linkerd-proxied servers.
         */
        export interface ServerAuthorizationSpecArgs {
            /**
             * Describes clients authorized to access a server.
             */
            client: pulumi.Input<inputs.policy.v1beta1.ServerAuthorizationSpecClientArgs>;
            /**
             * Identifies servers in the same namespace for which this authorization applies.
             * Only one of `name` or `selector` may be specified.
             */
            server: any;
        }

        /**
         * Describes clients authorized to access a server.
         */
        export interface ServerAuthorizationSpecClientArgs {
            meshTLS?: pulumi.Input<inputs.policy.v1beta1.ServerAuthorizationSpecClientMeshtlsArgs>;
            /**
             * Limits the client IP addresses to which this authorization applies. If unset, the server chooses a default (typically, all IPs or the cluster's pod network).
             */
            networks?: pulumi.Input<pulumi.Input<inputs.policy.v1beta1.ServerAuthorizationSpecClientNetworksArgs>[]>;
            /**
             * Authorizes unauthenticated clients to access a server.
             */
            unauthenticated?: pulumi.Input<boolean>;
        }

        export interface ServerAuthorizationSpecClientMeshtlsArgs {
            /**
             * Authorizes clients with the provided proxy identity strings (as provided via MTLS)
             * The `*` prefix can be used to match all identities in a domain. An identity string of `*` indicates that all authentication clients are authorized.
             */
            identities?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Authorizes clients with the provided proxy identity service accounts (as provided via MTLS)
             */
            serviceAccounts?: pulumi.Input<pulumi.Input<inputs.policy.v1beta1.ServerAuthorizationSpecClientMeshtlsServiceaccountsArgs>[]>;
            /**
             * Indicates that no client identity is required for communication.
             * This is mostly important for the identity controller, which must terminate TLS connections from clients that do not yet have a certificate.
             */
            unauthenticatedTLS?: pulumi.Input<boolean>;
        }

        export interface ServerAuthorizationSpecClientMeshtlsServiceaccountsArgs {
            /**
             * The ServiceAccount's name.
             */
            name: pulumi.Input<string>;
            /**
             * The ServiceAccount's namespace. If unset, the authorization's namespace is used.
             */
            namespace?: pulumi.Input<string>;
        }

        export interface ServerAuthorizationSpecClientNetworksArgs {
            cidr: pulumi.Input<string>;
            except?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface ServerSpecArgs {
            /**
             * Selects pods in the same namespace.
             * The result of matchLabels and matchExpressions are ANDed. Selects all if empty.
             */
            podSelector: pulumi.Input<inputs.policy.v1beta1.ServerSpecPodselectorArgs>;
            /**
             * A port name or number. Must exist in a pod spec.
             */
            port: pulumi.Input<number | string>;
            /**
             * Configures protocol discovery for inbound connections.
             * Supersedes the `config.linkerd.io/opaque-ports` annotation.
             */
            proxyProtocol?: pulumi.Input<string>;
        }
        /**
         * serverSpecArgsProvideDefaults sets the appropriate defaults for ServerSpecArgs
         */
        export function serverSpecArgsProvideDefaults(val: ServerSpecArgs): ServerSpecArgs {
            return {
                ...val,
                proxyProtocol: (val.proxyProtocol) ?? "unknown",
            };
        }

        /**
         * Selects pods in the same namespace.
         * The result of matchLabels and matchExpressions are ANDed. Selects all if empty.
         */
        export interface ServerSpecPodselectorArgs {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.policy.v1beta1.ServerSpecPodselectorMatchexpressionsArgs>[]>;
            matchLabels?: pulumi.Input<{[key: string]: any}>;
        }

        export interface ServerSpecPodselectorMatchexpressionsArgs {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }
    }
}

export namespace trust {
    export namespace v1alpha1 {
        /**
         * Desired state of the Bundle resource.
         */
        export interface BundleSpecArgs {
            /**
             * Sources is a set of references to data whose data will sync to the target.
             */
            sources: pulumi.Input<pulumi.Input<inputs.trust.v1alpha1.BundleSpecSourcesArgs>[]>;
            /**
             * Target is the target location in all namespaces to sync source data to.
             */
            target: pulumi.Input<inputs.trust.v1alpha1.BundleSpecTargetArgs>;
        }

        /**
         * BundleSource is the set of sources whose data will be appended and synced to the BundleTarget in all Namespaces.
         */
        export interface BundleSpecSourcesArgs {
            /**
             * ConfigMap is a reference to a ConfigMap's `data` key, in the trust Namespace.
             */
            configMap?: pulumi.Input<inputs.trust.v1alpha1.BundleSpecSourcesConfigmapArgs>;
            /**
             * InLine is a simple string to append as the source data.
             */
            inLine?: pulumi.Input<string>;
            /**
             * Secret is a reference to a Secrets's `data` key, in the trust Namespace.
             */
            secret?: pulumi.Input<inputs.trust.v1alpha1.BundleSpecSourcesSecretArgs>;
        }

        /**
         * ConfigMap is a reference to a ConfigMap's `data` key, in the trust Namespace.
         */
        export interface BundleSpecSourcesConfigmapArgs {
            /**
             * Key is the key of the entry in the object's `data` field to be used.
             */
            key: pulumi.Input<string>;
            /**
             * Name is the name of the source object in the trust Namespace.
             */
            name: pulumi.Input<string>;
        }

        /**
         * Secret is a reference to a Secrets's `data` key, in the trust Namespace.
         */
        export interface BundleSpecSourcesSecretArgs {
            /**
             * Key is the key of the entry in the object's `data` field to be used.
             */
            key: pulumi.Input<string>;
            /**
             * Name is the name of the source object in the trust Namespace.
             */
            name: pulumi.Input<string>;
        }

        /**
         * Target is the target location in all namespaces to sync source data to.
         */
        export interface BundleSpecTargetArgs {
            /**
             * ConfigMap is the target ConfigMap in Namespaces that all Bundle source data will be synced to.
             */
            configMap?: pulumi.Input<inputs.trust.v1alpha1.BundleSpecTargetConfigmapArgs>;
            /**
             * NamespaceSelector will, if set, only sync the target resource in Namespaces which match the selector.
             */
            namespaceSelector?: pulumi.Input<inputs.trust.v1alpha1.BundleSpecTargetNamespaceselectorArgs>;
        }

        /**
         * ConfigMap is the target ConfigMap in Namespaces that all Bundle source data will be synced to.
         */
        export interface BundleSpecTargetConfigmapArgs {
            /**
             * Key is the key of the entry in the object's `data` field to be used.
             */
            key: pulumi.Input<string>;
        }

        /**
         * NamespaceSelector will, if set, only sync the target resource in Namespaces which match the selector.
         */
        export interface BundleSpecTargetNamespaceselectorArgs {
            /**
             * MatchLabels matches on the set of labels that must be present on a Namespace for the Bundle target to be synced there.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * Status of the Bundle. This is set and managed automatically.
         */
        export interface BundleStatusArgs {
            /**
             * List of status conditions to indicate the status of the Bundle. Known condition types are `Bundle`.
             */
            conditions?: pulumi.Input<pulumi.Input<inputs.trust.v1alpha1.BundleStatusConditionsArgs>[]>;
            /**
             * Target is the current Target that the Bundle is attempting or has completed syncing the source data to.
             */
            target?: pulumi.Input<inputs.trust.v1alpha1.BundleStatusTargetArgs>;
        }

        /**
         * BundleCondition contains condition information for a Bundle.
         */
        export interface BundleStatusConditionsArgs {
            /**
             * LastTransitionTime is the timestamp corresponding to the last status change of this condition.
             */
            lastTransitionTime?: pulumi.Input<string>;
            /**
             * Message is a human readable description of the details of the last transition, complementing reason.
             */
            message?: pulumi.Input<string>;
            /**
             * If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Bundle.
             */
            observedGeneration?: pulumi.Input<number>;
            /**
             * Reason is a brief machine readable explanation for the condition's last transition.
             */
            reason?: pulumi.Input<string>;
            /**
             * Status of the condition, one of ('True', 'False', 'Unknown').
             */
            status: pulumi.Input<string>;
            /**
             * Type of the condition, known values are (`Synced`).
             */
            type: pulumi.Input<string>;
        }

        /**
         * Target is the current Target that the Bundle is attempting or has completed syncing the source data to.
         */
        export interface BundleStatusTargetArgs {
            /**
             * ConfigMap is the target ConfigMap in Namespaces that all Bundle source data will be synced to.
             */
            configMap?: pulumi.Input<inputs.trust.v1alpha1.BundleStatusTargetConfigmapArgs>;
            /**
             * NamespaceSelector will, if set, only sync the target resource in Namespaces which match the selector.
             */
            namespaceSelector?: pulumi.Input<inputs.trust.v1alpha1.BundleStatusTargetNamespaceselectorArgs>;
        }

        /**
         * ConfigMap is the target ConfigMap in Namespaces that all Bundle source data will be synced to.
         */
        export interface BundleStatusTargetConfigmapArgs {
            /**
             * Key is the key of the entry in the object's `data` field to be used.
             */
            key: pulumi.Input<string>;
        }

        /**
         * NamespaceSelector will, if set, only sync the target resource in Namespaces which match the selector.
         */
        export interface BundleStatusTargetNamespaceselectorArgs {
            /**
             * MatchLabels matches on the set of labels that must be present on a Namespace for the Bundle target to be synced there.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

    }
}
