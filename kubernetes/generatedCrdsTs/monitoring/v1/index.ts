// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./alertmanager";
export * from "./podMonitor";
export * from "./probe";
export * from "./prometheus";
export * from "./prometheusRule";
export * from "./serviceMonitor";
export * from "./thanosRuler";

// Import resources to register:
import { Alertmanager } from "./alertmanager";
import { PodMonitor } from "./podMonitor";
import { Probe } from "./probe";
import { Prometheus } from "./prometheus";
import { PrometheusRule } from "./prometheusRule";
import { ServiceMonitor } from "./serviceMonitor";
import { ThanosRuler } from "./thanosRuler";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:monitoring.coreos.com/v1:Alertmanager":
                return new Alertmanager(name, <any>undefined, { urn })
            case "kubernetes:monitoring.coreos.com/v1:PodMonitor":
                return new PodMonitor(name, <any>undefined, { urn })
            case "kubernetes:monitoring.coreos.com/v1:Probe":
                return new Probe(name, <any>undefined, { urn })
            case "kubernetes:monitoring.coreos.com/v1:Prometheus":
                return new Prometheus(name, <any>undefined, { urn })
            case "kubernetes:monitoring.coreos.com/v1:PrometheusRule":
                return new PrometheusRule(name, <any>undefined, { urn })
            case "kubernetes:monitoring.coreos.com/v1:ServiceMonitor":
                return new ServiceMonitor(name, <any>undefined, { urn })
            case "kubernetes:monitoring.coreos.com/v1:ThanosRuler":
                return new ThanosRuler(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("crds", "monitoring.coreos.com/v1", _module)
