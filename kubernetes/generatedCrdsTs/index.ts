// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./provider";

// Export sub-modules:
import * as acme from "./acme";
import * as argoproj from "./argoproj";
import * as bitnami from "./bitnami";
import * as certmanager from "./certmanager";
import * as jetstream from "./jetstream";
import * as linkerd from "./linkerd";
import * as longhorn from "./longhorn";
import * as metallb from "./metallb";
import * as monitoring from "./monitoring";
import * as nats from "./nats";
import * as pingcap from "./pingcap";
import * as policy from "./policy";
import * as trust from "./trust";
import * as types from "./types";

export {
    acme,
    argoproj,
    bitnami,
    certmanager,
    jetstream,
    linkerd,
    longhorn,
    metallb,
    monitoring,
    nats,
    pingcap,
    policy,
    trust,
    types,
};

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("crds", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:crds") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
