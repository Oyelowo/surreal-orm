apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"labels":{"app.kubernetes.io/component":"replica","app.kubernetes.io/instance":"argo-cd","app.kubernetes.io/managed-by":"pulumi","app.kubernetes.io/name":"redis","helm.sh/chart":"redis-15.4.0"},"name":"argo-cd-redis-replicas","namespace":"default"},"spec":{"replicas":3,"selector":{"matchLabels":{"app.kubernetes.io/component":"replica","app.kubernetes.io/instance":"argo-cd","app.kubernetes.io/name":"redis"}},"serviceName":"argo-cd-redis-headless","template":{"metadata":{"annotations":{"checksum/configmap":"3ab7b9cdd599696f559b1155e348222280615fa6483814a2fe4a8ba0ee55ab11","checksum/health":"40a8056d706326c97c29d3a02a1b83900077214b3fe6dc36d2c34ec249851e90","checksum/scripts":"9fb172397b4a0d2593c69f3e4a3792d9aa0d4a98038d08a0b130ce6e817c556d","checksum/secret":"ba9b8e65ac1acce1ebb3f6bed2cc646fbfc8d12d519374201ef282e92e91959f"},"labels":{"app.kubernetes.io/component":"replica","app.kubernetes.io/instance":"argo-cd","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"redis","helm.sh/chart":"redis-15.4.0"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/component":"replica","app.kubernetes.io/instance":"argo-cd","app.kubernetes.io/name":"redis"}},"namespaces":["default"],"topologyKey":"kubernetes.io/hostname"},"weight":1}]}},"containers":[{"args":["-c","/opt/bitnami/scripts/start-scripts/start-replica.sh"],"command":["/bin/bash"],"env":[{"name":"BITNAMI_DEBUG","value":"false"},{"name":"REDIS_REPLICATION_MODE","value":"slave"},{"name":"REDIS_MASTER_HOST","value":"argo-cd-redis-master-0.argo-cd-redis-headless.default.svc.cluster.local"},{"name":"REDIS_MASTER_PORT_NUMBER","value":"6379"},{"name":"ALLOW_EMPTY_PASSWORD","value":"no"},{"name":"REDIS_PASSWORD","valueFrom":{"secretKeyRef":{"key":"redis-password","name":"argo-cd-redis"}}},{"name":"REDIS_MASTER_PASSWORD","valueFrom":{"secretKeyRef":{"key":"redis-password","name":"argo-cd-redis"}}},{"name":"REDIS_TLS_ENABLED","value":"no"},{"name":"REDIS_PORT","value":"6379"}],"image":"docker.io/bitnami/redis:6.2.5-debian-10-r66","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["sh","-c","/health/ping_liveness_local_and_master.sh 5"]},"failureThreshold":5,"initialDelaySeconds":20,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":6},"name":"redis","ports":[{"containerPort":6379,"name":"redis"}],"readinessProbe":{"exec":{"command":["sh","-c","/health/ping_readiness_local_and_master.sh 1"]},"failureThreshold":5,"initialDelaySeconds":20,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":2},"resources":{"limits":{},"requests":{}},"securityContext":{"runAsUser":1001},"volumeMounts":[{"mountPath":"/opt/bitnami/scripts/start-scripts","name":"start-scripts"},{"mountPath":"/health","name":"health"},{"mountPath":"/data","name":"redis-data"},{"mountPath":"/opt/bitnami/redis/mounted-etc","name":"config"},{"mountPath":"/opt/bitnami/redis/etc","name":"redis-tmp-conf"}]}],"securityContext":{"fsGroup":1001},"serviceAccountName":"argo-cd-redis","terminationGracePeriodSeconds":30,"volumes":[{"configMap":{"defaultMode":493,"name":"argo-cd-redis-scripts"},"name":"start-scripts"},{"configMap":{"defaultMode":493,"name":"argo-cd-redis-health"},"name":"health"},{"configMap":{"name":"argo-cd-redis-configuration"},"name":"config"},{"emptyDir":{},"name":"redis-tmp-conf"}]}},"updateStrategy":{"rollingUpdate":{},"type":"RollingUpdate"},"volumeClaimTemplates":[{"metadata":{"labels":{"app.kubernetes.io/component":"replica","app.kubernetes.io/instance":"argo-cd","app.kubernetes.io/name":"redis"},"name":"redis-data"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"8Gi"}}}}]}}
  labels:
    app.kubernetes.io/component: replica
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: pulumi
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-15.4.0
  name: argo-cd-redis-replicas
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: replica
      app.kubernetes.io/instance: argo-cd
      app.kubernetes.io/name: redis
  serviceName: argo-cd-redis-headless
  template:
    metadata:
      annotations:
        checksum/configmap: 3ab7b9cdd599696f559b1155e348222280615fa6483814a2fe4a8ba0ee55ab11
        checksum/health: 40a8056d706326c97c29d3a02a1b83900077214b3fe6dc36d2c34ec249851e90
        checksum/scripts: 9fb172397b4a0d2593c69f3e4a3792d9aa0d4a98038d08a0b130ce6e817c556d
        checksum/secret: ba9b8e65ac1acce1ebb3f6bed2cc646fbfc8d12d519374201ef282e92e91959f
      labels:
        app.kubernetes.io/component: replica
        app.kubernetes.io/instance: argo-cd
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redis
        helm.sh/chart: redis-15.4.0
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: replica
                  app.kubernetes.io/instance: argo-cd
                  app.kubernetes.io/name: redis
              namespaces:
              - default
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - args:
        - -c
        - /opt/bitnami/scripts/start-scripts/start-replica.sh
        command:
        - /bin/bash
        env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: REDIS_REPLICATION_MODE
          value: slave
        - name: REDIS_MASTER_HOST
          value: argo-cd-redis-master-0.argo-cd-redis-headless.default.svc.cluster.local
        - name: REDIS_MASTER_PORT_NUMBER
          value: "6379"
        - name: ALLOW_EMPTY_PASSWORD
          value: "no"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: argo-cd-redis
        - name: REDIS_MASTER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: argo-cd-redis
        - name: REDIS_TLS_ENABLED
          value: "no"
        - name: REDIS_PORT
          value: "6379"
        image: docker.io/bitnami/redis:6.2.5-debian-10-r66
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - /health/ping_liveness_local_and_master.sh 5
          failureThreshold: 5
          initialDelaySeconds: 20
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 6
        name: redis
        ports:
        - containerPort: 6379
          name: redis
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - /health/ping_readiness_local_and_master.sh 1
          failureThreshold: 5
          initialDelaySeconds: 20
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          limits: {}
          requests: {}
        securityContext:
          runAsUser: 1001
        volumeMounts:
        - mountPath: /opt/bitnami/scripts/start-scripts
          name: start-scripts
        - mountPath: /health
          name: health
        - mountPath: /data
          name: redis-data
        - mountPath: /opt/bitnami/redis/mounted-etc
          name: config
        - mountPath: /opt/bitnami/redis/etc
          name: redis-tmp-conf
      securityContext:
        fsGroup: 1001
      serviceAccountName: argo-cd-redis
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 493
          name: argo-cd-redis-scripts
        name: start-scripts
      - configMap:
          defaultMode: 493
          name: argo-cd-redis-health
        name: health
      - configMap:
          name: argo-cd-redis-configuration
        name: config
      - emptyDir: {}
        name: redis-tmp-conf
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      labels:
        app.kubernetes.io/component: replica
        app.kubernetes.io/instance: argo-cd
        app.kubernetes.io/name: redis
      name: redis-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
