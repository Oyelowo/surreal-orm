apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"labels":{"app.kubernetes.io/instance":"sealed-secrets","app.kubernetes.io/managed-by":"pulumi","app.kubernetes.io/name":"sealed-secrets","helm.sh/chart":"sealed-secrets-1.1.5"},"name":"sealed-secrets","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/instance":"sealed-secrets","app.kubernetes.io/name":"sealed-secrets"}},"strategy":{"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app.kubernetes.io/instance":"sealed-secrets","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"sealed-secrets","helm.sh/chart":"sealed-secrets-1.1.5"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/instance":"sealed-secrets","app.kubernetes.io/name":"sealed-secrets"}},"namespaces":["kube-system"],"topologyKey":"kubernetes.io/hostname"},"weight":1}]}},"containers":[{"args":["--key-prefix","sealed-secrets-key"],"command":["/controller"],"image":"docker.io/bitnami/sealed-secrets:0.18.5-scratch-r0","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":"http"},"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"name":"sealed-secrets","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":"http"},"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"resources":{"limits":{},"requests":{}},"securityContext":{"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":1001},"volumeMounts":[{"mountPath":"/tmp","name":"tmp"}]}],"securityContext":{"fsGroup":1001},"serviceAccountName":"sealed-secrets","volumes":[{"emptyDir":{},"name":"tmp"}]}}}}
  labels:
    app.kubernetes.io/instance: sealed-secrets
    app.kubernetes.io/managed-by: pulumi
    app.kubernetes.io/name: sealed-secrets
    helm.sh/chart: sealed-secrets-1.1.5
  name: sealed-secrets
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: sealed-secrets
      app.kubernetes.io/name: sealed-secrets
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: sealed-secrets
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: sealed-secrets
        helm.sh/chart: sealed-secrets-1.1.5
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: sealed-secrets
                  app.kubernetes.io/name: sealed-secrets
              namespaces:
              - kube-system
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - args:
        - --key-prefix
        - sealed-secrets-key
        command:
        - /controller
        image: docker.io/bitnami/sealed-secrets:0.18.5-scratch-r0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: sealed-secrets
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits: {}
          requests: {}
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      securityContext:
        fsGroup: 1001
      serviceAccountName: sealed-secrets
      volumes:
      - emptyDir: {}
        name: tmp
