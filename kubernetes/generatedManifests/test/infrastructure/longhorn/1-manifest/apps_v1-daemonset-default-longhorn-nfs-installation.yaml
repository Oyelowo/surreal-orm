apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    command: OS=$(grep -E "^ID_LIKE=" /etc/os-release | cut -d '=' -f 2); if [[ -z
      "${OS}" ]]; then OS=$(grep -E "^ID=" /etc/os-release | cut -d '=' -f 2); fi;
      if [[ "${OS}" == *"debian"* ]]; then sudo apt-get update -q -y && sudo apt-get
      install -q -y nfs-common && sudo modprobe nfs; elif [[ "${OS}" == *"suse"* ]];
      then sudo zypper --gpg-auto-import-keys -q refresh && sudo zypper --gpg-auto-import-keys
      -q install -y nfs-client && sudo modprobe nfs; else sudo yum makecache -q -y
      && sudo yum --setopt=tsflags=noscripts install -q -y nfs-utils && sudo modprobe
      nfs; fi && if [ $? -eq 0 ]; then echo "nfs install successfully"; else echo
      "nfs install failed error code $?"; fi
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{"command":"OS=$(grep -E \"^ID_LIKE=\" /etc/os-release | cut -d '=' -f 2); if [[ -z \"${OS}\" ]]; then OS=$(grep -E \"^ID=\" /etc/os-release | cut -d '=' -f 2); fi; if [[ \"${OS}\" == *\"debian\"* ]]; then sudo apt-get update -q -y \u0026\u0026 sudo apt-get install -q -y nfs-common \u0026\u0026 sudo modprobe nfs; elif [[ \"${OS}\" == *\"suse\"* ]]; then sudo zypper --gpg-auto-import-keys -q refresh \u0026\u0026 sudo zypper --gpg-auto-import-keys -q install -y nfs-client \u0026\u0026 sudo modprobe nfs; else sudo yum makecache -q -y \u0026\u0026 sudo yum --setopt=tsflags=noscripts install -q -y nfs-utils \u0026\u0026 sudo modprobe nfs; fi \u0026\u0026 if [ $? -eq 0 ]; then echo \"nfs install successfully\"; else echo \"nfs install failed error code $?\"; fi"},"labels":{"app":"longhorn-nfs-installation","app.kubernetes.io/managed-by":"pulumi"},"name":"longhorn-nfs-installation","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"longhorn-nfs-installation"}},"template":{"metadata":{"labels":{"app":"longhorn-nfs-installation"}},"spec":{"containers":[{"image":"k8s.gcr.io/pause:3.1","name":"sleep"}],"hostNetwork":true,"hostPID":true,"initContainers":[{"command":["nsenter","--mount=/proc/1/ns/mnt","--","bash","-c","OS=$(grep -E \"^ID_LIKE=\" /etc/os-release | cut -d '=' -f 2); if [[ -z \"${OS}\" ]]; then OS=$(grep -E \"^ID=\" /etc/os-release | cut -d '=' -f 2); fi; if [[ \"${OS}\" == *\"debian\"* ]]; then sudo apt-get update -q -y \u0026\u0026 sudo apt-get install -q -y nfs-common \u0026\u0026 sudo modprobe nfs; elif [[ \"${OS}\" == *\"suse\"* ]]; then sudo zypper --gpg-auto-import-keys -q refresh \u0026\u0026 sudo zypper --gpg-auto-import-keys -q install -y nfs-client \u0026\u0026 sudo modprobe nfs; else sudo yum makecache -q -y \u0026\u0026 sudo yum --setopt=tsflags=noscripts install -q -y nfs-utils \u0026\u0026 sudo modprobe nfs; fi \u0026\u0026 if [ $? -eq 0 ]; then echo \"nfs install successfully\"; else echo \"nfs install failed error code $?\"; fi"],"image":"alpine:3.12","name":"nfs-installation","securityContext":{"privileged":true}}]}},"updateStrategy":{"type":"RollingUpdate"}}}
  labels:
    app: longhorn-nfs-installation
    app.kubernetes.io/managed-by: pulumi
  name: longhorn-nfs-installation
  namespace: default
spec:
  selector:
    matchLabels:
      app: longhorn-nfs-installation
  template:
    metadata:
      labels:
        app: longhorn-nfs-installation
    spec:
      containers:
      - image: k8s.gcr.io/pause:3.1
        name: sleep
      hostNetwork: true
      hostPID: true
      initContainers:
      - command:
        - nsenter
        - --mount=/proc/1/ns/mnt
        - --
        - bash
        - -c
        - OS=$(grep -E "^ID_LIKE=" /etc/os-release | cut -d '=' -f 2); if [[ -z "${OS}"
          ]]; then OS=$(grep -E "^ID=" /etc/os-release | cut -d '=' -f 2); fi; if
          [[ "${OS}" == *"debian"* ]]; then sudo apt-get update -q -y && sudo apt-get
          install -q -y nfs-common && sudo modprobe nfs; elif [[ "${OS}" == *"suse"*
          ]]; then sudo zypper --gpg-auto-import-keys -q refresh && sudo zypper --gpg-auto-import-keys
          -q install -y nfs-client && sudo modprobe nfs; else sudo yum makecache -q
          -y && sudo yum --setopt=tsflags=noscripts install -q -y nfs-utils && sudo
          modprobe nfs; fi && if [ $? -eq 0 ]; then echo "nfs install successfully";
          else echo "nfs install failed error code $?"; fi
        image: alpine:3.12
        name: nfs-installation
        securityContext:
          privileged: true
  updateStrategy:
    type: RollingUpdate
