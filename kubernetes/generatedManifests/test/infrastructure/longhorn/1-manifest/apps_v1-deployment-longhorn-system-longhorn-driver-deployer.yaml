apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"labels":{"app.kubernetes.io/instance":"longhorn","app.kubernetes.io/managed-by":"pulumi","app.kubernetes.io/name":"longhorn","app.kubernetes.io/version":"v1.3.2","helm.sh/chart":"longhorn-1.3.2"},"name":"longhorn-driver-deployer","namespace":"longhorn-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"longhorn-driver-deployer"}},"template":{"metadata":{"labels":{"app":"longhorn-driver-deployer","app.kubernetes.io/instance":"longhorn","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"longhorn","app.kubernetes.io/version":"v1.3.2","helm.sh/chart":"longhorn-1.3.2"}},"spec":{"containers":[{"command":["longhorn-manager","-d","deploy-driver","--manager-image","longhornio/longhorn-manager:v1.3.2","--manager-url","http://longhorn-backend:9500/v1"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"CSI_ATTACHER_IMAGE","value":"longhornio/csi-attacher:v3.4.0"},{"name":"CSI_PROVISIONER_IMAGE","value":"longhornio/csi-provisioner:v2.1.2"},{"name":"CSI_NODE_DRIVER_REGISTRAR_IMAGE","value":"longhornio/csi-node-driver-registrar:v2.5.0"},{"name":"CSI_RESIZER_IMAGE","value":"longhornio/csi-resizer:v1.2.0"},{"name":"CSI_SNAPSHOTTER_IMAGE","value":"longhornio/csi-snapshotter:v3.0.3"}],"image":"longhornio/longhorn-manager:v1.3.2","imagePullPolicy":"IfNotPresent","name":"longhorn-driver-deployer"}],"initContainers":[{"command":["sh","-c","while [ $(curl -m 1 -s -o /dev/null -w \"%{http_code}\" http://longhorn-backend:9500/v1) != \"200\" ]; do echo waiting; sleep 2; done"],"image":"longhornio/longhorn-manager:v1.3.2","name":"wait-longhorn-manager"}],"securityContext":{"runAsUser":0},"serviceAccountName":"longhorn-service-account"}}}}
  labels:
    app.kubernetes.io/instance: longhorn
    app.kubernetes.io/managed-by: pulumi
    app.kubernetes.io/name: longhorn
    app.kubernetes.io/version: v1.3.2
    helm.sh/chart: longhorn-1.3.2
  name: longhorn-driver-deployer
  namespace: longhorn-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: longhorn-driver-deployer
  template:
    metadata:
      labels:
        app: longhorn-driver-deployer
        app.kubernetes.io/instance: longhorn
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: longhorn
        app.kubernetes.io/version: v1.3.2
        helm.sh/chart: longhorn-1.3.2
    spec:
      containers:
      - command:
        - longhorn-manager
        - -d
        - deploy-driver
        - --manager-image
        - longhornio/longhorn-manager:v1.3.2
        - --manager-url
        - http://longhorn-backend:9500/v1
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: CSI_ATTACHER_IMAGE
          value: longhornio/csi-attacher:v3.4.0
        - name: CSI_PROVISIONER_IMAGE
          value: longhornio/csi-provisioner:v2.1.2
        - name: CSI_NODE_DRIVER_REGISTRAR_IMAGE
          value: longhornio/csi-node-driver-registrar:v2.5.0
        - name: CSI_RESIZER_IMAGE
          value: longhornio/csi-resizer:v1.2.0
        - name: CSI_SNAPSHOTTER_IMAGE
          value: longhornio/csi-snapshotter:v3.0.3
        image: longhornio/longhorn-manager:v1.3.2
        imagePullPolicy: IfNotPresent
        name: longhorn-driver-deployer
      initContainers:
      - command:
        - sh
        - -c
        - while [ $(curl -m 1 -s -o /dev/null -w "%{http_code}" http://longhorn-backend:9500/v1)
          != "200" ]; do echo waiting; sleep 2; done
        image: longhornio/longhorn-manager:v1.3.2
        name: wait-longhorn-manager
      securityContext:
        runAsUser: 0
      serviceAccountName: longhorn-service-account
