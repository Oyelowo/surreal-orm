ARG BASE_IMAGE=rust:1.59.0

FROM $BASE_IMAGE as planner
WORKDIR /app
# We only pay the installation cost once,
# it will be cached from the second build onwards
RUN cargo install cargo-chef --version 0.1.33
COPY . .
RUN cargo chef prepare  --recipe-path recipe.json


FROM $BASE_IMAGE as  cacher
WORKDIR /app
RUN cargo install cargo-chef --version 0.1.33
COPY --from=planner /app/recipe.json recipe.json
# Build dependencies - this is the caching Docker layer! Don't build in release mode for development
RUN cargo chef cook --release --recipe-path recipe.json 


FROM $BASE_IMAGE as builder-base
WORKDIR /app
# Copy over the cached dependencies
COPY --from=cacher /app/target target
COPY --from=cacher $CARGO_HOME $CARGO_HOME

# others
COPY . .



######### START GRAPHQL-MONGO BACKEND SERVICE  #################
################################################################
FROM builder-base as builder-graphql-mongo
RUN cargo build --release --bin graphql-mongo
FROM gcr.io/distroless/cc AS graphql-mongo
WORKDIR /app
EXPOSE 8000
COPY --from=builder-graphql-mongo /app/target/release/graphql-mongo /usr/local/bin/graphql-mongo
ENTRYPOINT ["/usr/local/bin/graphql-mongo"]
######### END GRAPHQL-MONGO BACKEND SERVICE  #################
##############################################################



##############################################################
######### START GRAPHQL-POSTGRES BACKEND SERVICE  #############
################################################################
FROM builder-base as builder-graphql-postgres
# This is necessary to for sqlx to build the app in offline mode without being connected to DB.
ENV SQLX_OFFLINE=true
RUN cargo build --release --bin graphql-postgres


FROM gcr.io/distroless/cc AS graphql-postgres
WORKDIR /app
EXPOSE 8000
# We are building in release mode
COPY --from=builder-graphql-postgres /app/target/release/graphql-postgres /usr/local/bin/graphql-postgres
ENTRYPOINT ["/usr/local/bin/graphql-postgres"]
######### END GRAPHQL-POSTGRES BACKEND SERVICE  ##############
##############################################################




##############################################################
######### START GRPC-MONGO BACKEND SERVICE  #################
################################################################
FROM builder-base as builder-grpc-mongo
# Necessary for tonic when building grpc protobuf
RUN rustup component add rustfmt
RUN cargo build --release --bin grpc-mongo


FROM gcr.io/distroless/cc AS grpc-mongo
WORKDIR /app
EXPOSE 8000
COPY --from=builder-grpc-mongo /app/target/release/grpc-mongo /usr/local/bin/grpc-mongo
ENTRYPOINT ["/usr/local/bin/grpc-mongo"]
######### END GRPC-MONGO BACKEND SERVICE  #################
##############################################################




