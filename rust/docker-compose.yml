version: '3.8'
services:
  graphql-mongo:
    build:
      context: .
      dockerfile: Dockerfile.prod
      # args:
      #   - name=value
      target: graphql-mongo
    # # container_name: graphql-mongo
    # hostname: mongodb
    depends_on:
      - mongodb-graphql-mongo
    ports:
      - 8000:8000
    environment:
      APP_ENVIRONMENT: local
      APP_HOST: 0.0.0.0
      APP_PORT: 8000
      MONGODB_NAME: mydb
      MONGODB_USERNAME: mongo
      MONGODB_PASSWORD: fakepassword
      MONGODB_HOST: mongodb-graphql
      MONGODB_PORT: 27017

  mongodb-graphql-mongo:
    image: mongo:latest
    # #container_name: mongodb
    hostname: mongodb-graphql
    ports:
      - 27017:27017


  grpc-mongo:
    build:
      context: .
      dockerfile: Dockerfile.prod
      # args:
      #   - name=value
      target: grpc-mongo
    # # container_name: grpc-mongo
    # hostname: mongodb
    depends_on:
      - mongodb-grpc-mongo
    ports:
      - 50051:50051
    environment:
      APP_ENVIRONMENT: local
      APP_HOST: 0.0.0.0
      APP_PORT: 50051
      MONGODB_NAME: mydb
      MONGODB_USERNAME: mongo
      MONGODB_PASSWORD: fakepassword
      MONGODB_HOST: mongodb-grpc
      MONGODB_PORT: 27017

  mongodb-grpc-mongo:
    image: mongo:latest
    # #container_name: mongodb
    hostname: mongodb-grpc
    ports:
      - 27018:27017

  graphql-postgres:
    build:
      context: .
      dockerfile: Dockerfile.prod
      # args:
      #   - name=value
      target: graphql-postgres
    # # container_name: graphql-postgres
    # hostname: graphql-postgres
    depends_on:
      - postgres-graphql-postgres
      #- migrations
    ports:
       - 8001:8000
    environment:
      APP_ENVIRONMENT: local
      APP_HOST: 0.0.0.0
      APP_PORT: 8001
      POSTGRES_NAME: mydb
      POSTGRES_DATABASE_NAME: mydb
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      DATABASE_URL: postgres://postgres:1234@postgres-graphql-postgres:5432/my_db

  postgres-graphql-postgres:
    image: postgres
    restart: always
    # container_name: postgres
    ports:
      - 5432:5432/tcp
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: mydb
    # volumes:
      # - /var/lib/postgres
      # - ./dbscripts/postgres:/docker-entrypoint-initdb.d
      # - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql


  # mongo-express:
  #   image: mongo-express
  # #   container_name: mongo-express
  #   restart: unless-stopped
  #   depends_on:
  #     - mongodb
  #   ports:
  #     - 8082:8081
    # environment:
    #   - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
    #   - ME_CONFIG_MONGODB_ADMINPASSWORD=password
    #   - ME_CONFIG_MONGODB_SERVER=mongodb
    #   - ME_CONFIG_BASICAUTH_USERNAME=admin
    #   - ME_CONFIG_BASICAUTH_PASSWORD=password


  mongoclient:
    image: mongoclient/mongoclient:latest
    # container_name: mongoclient
    hostname: mongoclient
    depends_on:
      - mongodb
    ports:
      - 3300:3000

  # pgadmin:
  # #   container_name: demo_pgadmin
  #   image: "dpage/pgadmin4:4.24"
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #     PGADMIN_CONFIG_SERVER_MODE: "False"
  #     PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
  #   volumes:
  #     - pgadmin:/var/lib/pgadmin
  #     - ./docker_pgadmin_servers.json:/pgadmin4/servers.json
  #   ports:
  #     - "15433:80"
  #   entrypoint:
  #     - "/bin/sh"
  #     - "-c"
  #     - "/bin/echo 'postgres:5432:*:postgres:password' > /tmp/pgpassfile && chmod 600 /tmp/pgpassfile && /entrypoint.sh"
  #   restart: unless-stopped    

# volumes:
#   mongodb_data_container:
#      driver: local
  # pgadmin:
  #   driver: local

