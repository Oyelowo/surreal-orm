type AccountOauth {
	id: String!
	userId: String!
	accountType: String!
	provider: String!
	providerAccountId: String!
	accessToken: String!
	refreshToken: String
	expiresAt: DateTime
	tokenType: String
	scope: String
	idToken: String
	sessionState: String
	profile: ProfileOauth!
}

input AccountOauthInput {
	accountType: String!
	provider: String!
	providerAccountId: String!
	accessToken: String!
	refreshToken: String
	expiresAt: DateTime
	tokenType: String
	scope: String
	idToken: String
	sessionState: String
	profile: ProfileOauthInput!
}


"""
Implement the DateTime<Utc> scalar

The input/output is a string in RFC3339 format.
"""
scalar DateTime




type Mutation {
	createUser(userInput: UserInput!): User!
	"""
	Creates a new user but doesn't log in the user
	Currently like this because of future developments
	"""
	signUp(user: UserInput!): User!
	signIn(signInCredentials: SignInCredentials!): User!
	createOrUpdateUserOauth(account: AccountOauthInput!): User!
	signOut: SignOutMessage!
	createPost(post: PostInput!): Post!
}

scalar ObjectId

type Post {
	id: ObjectId
	posterId: ObjectId!
	title: String!
	content: String!
	poster: User!
}

input PostInput {
	title: String!
	content: String!
}

type ProfileOauth {
	firstName: String!
	lastName: String!
	username: String!
	email: String!
	emailVerified: Boolean!
}

input ProfileOauthInput {
	firstName: String!
	lastName: String!
	username: String!
	email: String!
	emailVerified: Boolean!
}

type Query {
	user(id: ObjectId!): User!
	users: [User!]!
	session: Session!
	post(id: ObjectId!): Post!
	posts: [Post!]!
}

enum Role {
	ADMIN
	USER
}

type Session {
	user: SessionUser!
	expiresAt: DateTime!
}

type SessionUser {
	name: String!
	email: String!
	image: String!
}

input SignInCredentials {
	username: String!
	password: String!
}

type SignOutMessage {
	message: String!
	userId: ObjectId!
}


type Subscription {
	values: Int!
}

type User {
	id: ObjectId
	createdAt: DateTime
	username: String!
	firstName: String!
	lastName: String!
	email: String!
	emailVerifiedAt: DateTime
	age: Int
	socialMedia: [String!]!
	roles: [Role!]!
	accounts: [AccountOauth!]!
	posts: [Post!]!
	postCount: Int!
}

input UserInput {
	username: String!
	password: String
	firstName: String!
	lastName: String!
	email: String!
	age: Int
	socialMedia: [String!]!
}

schema {
	query: Query
	mutation: Mutation
	subscription: Subscription
}
