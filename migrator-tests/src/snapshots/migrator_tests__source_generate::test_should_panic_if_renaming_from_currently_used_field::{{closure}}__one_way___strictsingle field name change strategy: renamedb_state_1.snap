---
source: migrator-tests/src/lib.rs
expression: db_miration_schema_state
---
DbMigrationSchemaState {
    resources: DbInfo {
        analyzers: Analyzers(
            Info(
                {
                    "ascii": DefineStatementRaw(
                        "DEFINE ANALYZER ascii TOKENIZERS CLASS FILTERS LOWERCASE,ASCII,EDGENGRAM(2,15),SNOWBALL(ENGLISH)",
                    ),
                },
            ),
        ),
        functions: Functions(
            Info(
                {
                    "get_animal_by_id": DefineStatementRaw(
                        "DEFINE FUNCTION fn::get_animal_by_id($id: int) { RETURN $id; } PERMISSIONS FULL",
                    ),
                    "get_animal_by_id2": DefineStatementRaw(
                        "DEFINE FUNCTION fn::get_animal_by_id2($id: int) { RETURN $id; } PERMISSIONS FULL",
                    ),
                },
            ),
        ),
        params: Params(
            Info(
                {
                    "__some_test_param1": DefineStatementRaw(
                        "DEFINE PARAM $__some_test_param1 VALUE 'test param one' PERMISSIONS FULL",
                    ),
                    "__some_test_param2": DefineStatementRaw(
                        "DEFINE PARAM $__some_test_param2 VALUE 'test param two' PERMISSIONS FULL",
                    ),
                    "__some_test_param3": DefineStatementRaw(
                        "DEFINE PARAM $__some_test_param3 VALUE 'test param three' PERMISSIONS FULL",
                    ),
                },
            ),
        ),
        scopes: Scopes(
            Info(
                {
                    "regional": DefineStatementRaw(
                        "DEFINE SCOPE regional",
                    ),
                    "scope1": DefineStatementRaw(
                        "DEFINE SCOPE scope1 SESSION 4w2d SIGNUP (CREATE user_credentials CONTENT { email: 'oyelowo.oss@gmail.com', id: user_credentials:oyelowo, passwordHash: '1234' }) SIGNIN (SELECT * FROM user_credentials WHERE (email = 'oyelowo@codebreather.com') AND (crypto::argon2::compare('1234', passwordHash)))",
                    ),
                    "scope2": DefineStatementRaw(
                        "DEFINE SCOPE scope2 SESSION 4w2d SIGNUP (CREATE user_credentials CONTENT { email: 'oyelowo.oss@gmail.com', id: user_credentials:oyelowo, passwordHash: '1234' }) SIGNIN (SELECT * FROM user_credentials WHERE (email = 'oyelowo@codebreather.com') AND (crypto::argon2::compare('1234', passwordHash)))",
                    ),
                },
            ),
        ),
        tables: Tables(
            Info(
                {
                    "animal": DefineStatementRaw(
                        "DEFINE TABLE animal SCHEMAFULL PERMISSIONS NONE",
                    ),
                    "animal_snake_case": DefineStatementRaw(
                        "DEFINE TABLE animal_snake_case SCHEMAFULL PERMISSIONS NONE",
                    ),
                    "crop": DefineStatementRaw(
                        "DEFINE TABLE crop SCHEMAFULL PERMISSIONS NONE",
                    ),
                    "eats": DefineStatementRaw(
                        "DEFINE TABLE eats SCHEMAFULL PERMISSIONS NONE",
                    ),
                    "eats_snake_case": DefineStatementRaw(
                        "DEFINE TABLE eats_snake_case SCHEMAFULL PERMISSIONS NONE",
                    ),
                    "migration": DefineStatementRaw(
                        "DEFINE TABLE migration SCHEMAFULL PERMISSIONS NONE",
                    ),
                    "planet": DefineStatementRaw(
                        "DEFINE TABLE planet SCHEMAFULL PERMISSIONS NONE",
                    ),
                    "student": DefineStatementRaw(
                        "DEFINE TABLE student SCHEMAFULL PERMISSIONS NONE",
                    ),
                },
            ),
        ),
        tokens: Tokens(
            Info(
                {
                    "token2": DefineStatementRaw(
                        "DEFINE TOKEN token2 ON DATABASE TYPE EDDSA VALUE 'abrakradabra'",
                    ),
                },
            ),
        ),
        users: Users(
            Info(
                {
                    "oyelowo": DefineStatementRaw(
                        "DEFINE USER oyelowo ON DATABASE PASSHASH '$argon2id$v=19$m=19456,t=2,p=1$u1CPdtdC0Ek5GE1gvidj/g$fjFa7PZM+4hp4hlUJN1fz/FaDAf7KY1Qu48F5m5P0V8' ROLES OWNER",
                    ),
                },
            ),
        ),
    },
    migration_meta: [
        StreamLinedMigration {
            basename: Basename(
                "migration_init",
            ),
            extension: Extension(
                "surql",
            ),
            checksum_up: Checksum(
                "07ae2bc74fc393a53ad8f26eab2ca631cb4fbaec74979f3e3bf7848f41c7334d",
            ),
            checksum_down: None,
        },
    ],
}
