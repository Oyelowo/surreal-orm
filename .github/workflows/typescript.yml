name: typescript

on:
  push:
    branches: [master]
    paths: 
      - 'typescript/**'

  pull_request:
    paths: 
      - 'typescript/**'

env:
  CARGO_TERM_COLOR: always

jobs:
  check_and_test_typescript_monorepo:
    name: Run code checks for typescript monorepo
    timeout-minutes: 10
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: typescript

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18.7.0
          cache: npm
          cache-dependency-path: './typescript/package-lock.json'


      - name: Install dependencies
        run: make install

      - name: Lint
        run: make check

      - name: Build & Unit Test
        run: make test

      - name: E2E Tests
        run: make test-e2e




  ############## BUILD AND DEPLOY IMAGES #################
  build_and_push_typescript_applications:
    if: github.event.pull_request.merged || ${{ github.ref == 'refs/heads/master' }}
    needs: [check_and_test_typescript_monorepo]
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: typescript
        
    steps:
      - uses: actions/checkout@v3
      # Using other environment variables as input into another 
      # does not work for normal "env: <value>" setup as the input environment
      # variable to another would be treated literally by github parser rather than evaluating it.
      # This is why environment variables are set through shell here and used for most things
      # for consistency sake.
      - name: Set environment variables
        run: |
          CONTAINER_REGISTRY=ghcr.io/oyelowo
          IMAGE_TAG=$GITHUB_REF_NAME-$GITHUB_SHA

          echo "IMAGE_TAG_REACT_WEB=$IMAGE_TAG" >> $GITHUB_ENV
          IMAGE_NAME_REACT_WEB=$CONTAINER_REGISTRY/react-web
          echo "IMAGE_WITH_TAG_REACT_WEB=$IMAGE_NAME_REACT_WEB:$IMAGE_TAG, $IMAGE_NAME_REACT_WEB:latest" >> $GITHUB_ENV
          # echo "IMAGE_WITH_TAG_REACT_WEB=ghcr.io/${{ github.repository_owner }}/react-web:$GITHUB_REF_NAME-$GITHUB_SHA" >> $GITHUB_ENV
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and cache web image
        uses: docker/build-push-action@v2
        with:
          context: typescript
          file: typescript/Dockerfile.production
          target: web
          tags: ${{env.IMAGE_WITH_TAG_REACT_WEB}}
          build-args: |
            NEXT_PUBLIC_API_URL=https://oyelowo.dev
          push: true
          cache-from: |
            type=gha,scope=react-web
          cache-to: |
            type=gha,scope=react-web,mode=max

      - name: Update repo with IMAGE_TAG_REACT_WEB to /kubernetes/image-tags/IMAGE_TAG_REACT_WEB
        run: echo ${{env.IMAGE_TAG_REACT_WEB}} > ../kubernetes/image-tags/IMAGE_TAG_REACT_WEB

      - name: Commit files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "Update image tags" -a
          git config pull.rebase false  # merge
          git pull
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}



      # - name: build web docker image
      #   run: docker build -f Dockerfile.production --target web  -t ${{ env.IMAGE_WITH_TAG_REACT_WEB }}  .

      # - name: Slim down web docker image
      #   run: docker run --rm -v /var/run/docker.sock:/var/run/docker.sock dslim/docker-slim build  ${{ env.IMAGE_WITH_TAG_REACT_WEB }} --tag ${{ env.IMAGE_WITH_TAG_REACT_WEB }}

      # - name: Push web docker image
      #   run: docker push  ${{ env.IMAGE_WITH_TAG_REACT_WEB }}
        
      # - name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}

